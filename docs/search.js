window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "fennol", "modulename": "fennol", "kind": "module", "doc": "<h1 id=\"fennol\">FeNNol</h1>\n\n<h3 id=\"force-field-enhanced-neural-networks-optimized-library\">Force-field-enhanced Neural Networks optimized library</h3>\n\n<p>FeNNol is a library for building, training and running neural network potentials for molecular simulations. It is based on the JAX library and is designed to be fast and flexible.</p>\n\n<h2 id=\"installation\">Installation</h2>\n\n<p>You can start with a fresh environment using conda:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>conda<span class=\"w\"> </span>create<span class=\"w\"> </span>-n<span class=\"w\"> </span>fennol<span class=\"w\"> </span><span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.10<span class=\"w\"> </span>pip\nconda<span class=\"w\"> </span>activate<span class=\"w\"> </span>fennol\n</code></pre>\n</div>\n\n<p>The first step is to install jax (see details at: https://jax.readthedocs.io/en/latest/installation.html).\nFor a conda installation with CUDA 11.8, use:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>conda<span class=\"w\"> </span>install<span class=\"w\"> </span><span class=\"nv\">jaxlib</span><span class=\"o\">=</span>*<span class=\"o\">=</span>*cuda11*<span class=\"w\"> </span><span class=\"nv\">jax</span><span class=\"o\">=</span><span class=\"m\">0</span>.4.25<span class=\"w\"> </span>cuda-nvcc<span class=\"o\">=</span><span class=\"m\">11</span>.8<span class=\"w\"> </span>-c<span class=\"w\"> </span>conda-forge<span class=\"w\"> </span>-c<span class=\"w\"> </span>nvidia\n</code></pre>\n</div>\n\n<p>and make sure that jax uses the correct version of CUDA/CuDNN/ptxas by correctly setting your PATH and LD_LIBRARY_PATH.\nFor example, you can update the <code>LD_LIBRARY_PATH</code> as following so that jax uses the CUDA libraries that you just installed with conda:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nb\">export</span><span class=\"w\"> </span><span class=\"nv\">LD_LIBRARY_PATH</span><span class=\"o\">=</span><span class=\"nv\">$HOME</span>/miniconda3/envs/fennol/lib:<span class=\"nv\">$LD_LIBRARY_PATH</span>\n</code></pre>\n</div>\n\n<p>Then, you can clone and install FeNNol using pip:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>git<span class=\"w\"> </span>clone<span class=\"w\"> </span>...\n<span class=\"nb\">cd</span><span class=\"w\"> </span>FeNNol\npip<span class=\"w\"> </span>install<span class=\"w\"> </span>.\n</code></pre>\n</div>\n\n<p><em>Optional dependencies</em>:</p>\n\n<ul>\n<li>Some modules require e3nn-jax (<a href=\"https://github.com/e3nn/e3nn-jax\">https://github.com/e3nn/e3nn-jax</a>) which can be installed with:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>--upgrade<span class=\"w\"> </span>e3nn-jax\n</code></pre>\n</div>\n\n<ul>\n<li>The provided training script requires pytorch (at least the cpu version) for dataloaders:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>torch<span class=\"w\"> </span>--index-url<span class=\"w\"> </span>https://download.pytorch.org/whl/cpu\n</code></pre>\n</div>\n\n<ul>\n<li>For the Deep-HP interface, cffi, pydlpack and pycuda are required:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>conda<span class=\"w\"> </span>install<span class=\"w\"> </span>cffi<span class=\"w\"> </span>pydlpack<span class=\"w\"> </span>pycuda\n</code></pre>\n</div>\n"}, {"fullname": "fennol.load", "modulename": "fennol", "qualname": "load", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">use_atom_padding</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">graph_config</span><span class=\"o\">=</span><span class=\"p\">{}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.ase", "modulename": "fennol.ase", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.ase.FENNIXCalculator", "modulename": "fennol.ase", "qualname": "FENNIXCalculator", "kind": "class", "doc": "<p>FENNIX calculator for ASE.</p>\n\n<h2 id=\"arguments\">Arguments:</h2>\n\n<p>model: str or FENNIX\n    The path to the model or the model itself.\nuse_atom_padding: bool, default=False\n    Whether to use atom padding or not. Atom padding is useful to prevent recompiling the model if the number of atoms changes. If the number of atoms is expected to be fixed, it is recommended to set this to False.\ngpu_preprocessing: bool, default=False\n    Whether to preprocess the data on the GPU or not. This is useful for large systems, but may not be necessary (or even slower) for small systems.\natoms: ase.Atoms, default=None\n    The atoms object to be used for the calculation. If provided, the calculator will be initialized with the atoms object.\nverbose: bool, default=False\n    Whether to print nblist update information or not.\nenergy_terms: list of str, default=None\n    The energy terms to include in the total energy. If None, this will default to the energy terms defined in the model.</p>\n", "bases": "ase.calculators.calculator.Calculator"}, {"fullname": "fennol.ase.FENNIXCalculator.__init__", "modulename": "fennol.ase", "qualname": "FENNIXCalculator.__init__", "kind": "function", "doc": "<p>Basic calculator implementation.</p>\n\n<p>restart: str\n    Prefix for restart file.  May contain a directory. Default\n    is None: don't restart.\nignore_bad_restart_file: bool\n    Deprecated, please do not use.\n    Passing more than one positional argument to Calculator()\n    is deprecated and will stop working in the future.\n    Ignore broken or missing restart file.  By default, it is an\n    error if the restart file is missing or broken.\ndirectory: str or PurePath\n    Working directory in which to read and write files and\n    perform calculations.\nlabel: str\n    Name used for all files.  Not supported by all calculators.\n    May contain a directory, but please use the directory parameter\n    for that instead.\natoms: Atoms object\n    Optional Atoms object to which the calculator will be\n    attached.  When restarting, atoms will get its positions and\n    unit-cell updated from file.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">fennix</span><span class=\"o\">.</span><span class=\"n\">FENNIX</span>,</span><span class=\"param\">\t<span class=\"n\">gpu_preprocessing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">atoms</span><span class=\"p\">:</span> <span class=\"n\">ase</span><span class=\"o\">.</span><span class=\"n\">atoms</span><span class=\"o\">.</span><span class=\"n\">Atoms</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">energy_terms</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "fennol.ase.FENNIXCalculator.implemented_properties", "modulename": "fennol.ase", "qualname": "FENNIXCalculator.implemented_properties", "kind": "variable", "doc": "<p>Properties calculator can handle (energy, forces, ...)</p>\n", "default_value": "[&#x27;energy&#x27;, &#x27;forces&#x27;, &#x27;stress&#x27;]"}, {"fullname": "fennol.ase.FENNIXCalculator.gpu_preprocessing", "modulename": "fennol.ase", "qualname": "FENNIXCalculator.gpu_preprocessing", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.ase.FENNIXCalculator.verbose", "modulename": "fennol.ase", "qualname": "FENNIXCalculator.verbose", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.ase.FENNIXCalculator.calculate", "modulename": "fennol.ase", "qualname": "FENNIXCalculator.calculate", "kind": "function", "doc": "<p>Do the calculation.</p>\n\n<p>properties: list of str\n    List of what needs to be calculated.  Can be any combination\n    of 'energy', 'forces', 'stress', 'dipole', 'charges', 'magmom'\n    and 'magmoms'.\nsystem_changes: list of str\n    List of what has changed since last calculation.  Can be\n    any combination of these six: 'positions', 'numbers', 'cell',\n    'pbc', 'initial_charges' and 'initial_magmoms'.</p>\n\n<p>Subclasses need to implement this, but can ignore properties\nand system_changes if they want.  Calculated properties should\nbe inserted into results dictionary like shown in this dummy\nexample::</p>\n\n<pre><code>self.results = {'energy': 0.0,\n                'forces': np.zeros((len(atoms), 3)),\n                'stress': np.zeros(6),\n                'dipole': np.zeros(3),\n                'charges': np.zeros(len(atoms)),\n                'magmom': 0.0,\n                'magmoms': np.zeros(len(atoms))}\n</code></pre>\n\n<p>The subclass implementation should first call this\nimplementation to set the atoms attribute and create any missing\ndirectories.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">atoms</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;energy&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">system_changes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;positions&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;numbers&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cell&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pbc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;initial_charges&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;initial_magmoms&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.ase.FENNIXCalculator.preprocess", "modulename": "fennol.ase", "qualname": "FENNIXCalculator.preprocess", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">atoms</span>,</span><span class=\"param\">\t<span class=\"n\">system_changes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">&#39;positions&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;numbers&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cell&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pbc&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;initial_charges&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;initial_magmoms&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md", "modulename": "fennol.md", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.md.dynamic", "modulename": "fennol.md.dynamic", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.md.dynamic.minmaxone", "modulename": "fennol.md.dynamic", "qualname": "minmaxone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.dynamic.wrapbox", "modulename": "fennol.md.dynamic", "qualname": "wrapbox", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">cell</span>, </span><span class=\"param\"><span class=\"n\">reciprocal_cell</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.dynamic.main", "modulename": "fennol.md.dynamic", "qualname": "main", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.dynamic.dynamic", "modulename": "fennol.md.dynamic", "qualname": "dynamic", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">simulation_parameters</span>, </span><span class=\"param\"><span class=\"n\">device</span>, </span><span class=\"param\"><span class=\"n\">fprec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.initial", "modulename": "fennol.md.initial", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.md.initial.load_model", "modulename": "fennol.md.initial", "qualname": "load_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">simulation_parameters</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.initial.load_system_data", "modulename": "fennol.md.initial", "qualname": "load_system_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">simulation_parameters</span>, </span><span class=\"param\"><span class=\"n\">fprec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.initial.initialize_preprocessing", "modulename": "fennol.md.initial", "qualname": "initialize_preprocessing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">simulation_parameters</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">conformation</span>, </span><span class=\"param\"><span class=\"n\">system_data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.initial.initialize_system", "modulename": "fennol.md.initial", "qualname": "initialize_system", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">conformation</span>, </span><span class=\"param\"><span class=\"n\">vel</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">system_data</span>, </span><span class=\"param\"><span class=\"n\">fprec</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.integrate", "modulename": "fennol.md.integrate", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.md.integrate.initialize_dynamics", "modulename": "fennol.md.integrate", "qualname": "initialize_dynamics", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">simulation_parameters</span>,</span><span class=\"param\">\t<span class=\"n\">system_data</span>,</span><span class=\"param\">\t<span class=\"n\">conformation</span>,</span><span class=\"param\">\t<span class=\"n\">model</span>,</span><span class=\"param\">\t<span class=\"n\">fprec</span>,</span><span class=\"param\">\t<span class=\"n\">rng_key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.integrate.initialize_integrator", "modulename": "fennol.md.integrate", "qualname": "initialize_integrator", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">simulation_parameters</span>, </span><span class=\"param\"><span class=\"n\">system_data</span>, </span><span class=\"param\"><span class=\"n\">model</span>, </span><span class=\"param\"><span class=\"n\">fprec</span>, </span><span class=\"param\"><span class=\"n\">rng_key</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.thermostats", "modulename": "fennol.md.thermostats", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.md.thermostats.get_thermostat", "modulename": "fennol.md.thermostats", "qualname": "get_thermostat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">simulation_parameters</span>, </span><span class=\"param\"><span class=\"n\">dt</span>, </span><span class=\"param\"><span class=\"n\">system_data</span>, </span><span class=\"param\"><span class=\"n\">fprec</span>, </span><span class=\"param\"><span class=\"n\">rng_key</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.md.thermostats.initialize_qtb", "modulename": "fennol.md.thermostats", "qualname": "initialize_qtb", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">qtb_parameters</span>,</span><span class=\"param\">\t<span class=\"n\">fprec</span>,</span><span class=\"param\">\t<span class=\"n\">dt</span>,</span><span class=\"param\">\t<span class=\"n\">mass</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span>,</span><span class=\"param\">\t<span class=\"n\">kT</span>,</span><span class=\"param\">\t<span class=\"n\">species</span>,</span><span class=\"param\">\t<span class=\"n\">rng_key</span>,</span><span class=\"param\">\t<span class=\"n\">adaptive</span>,</span><span class=\"param\">\t<span class=\"n\">compute_thermostat_energy</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models", "modulename": "fennol.models", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings", "modulename": "fennol.models.embeddings", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.aimnet", "modulename": "fennol.models.embeddings.aimnet", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet", "kind": "class", "doc": "<p>Atom-In-Molecule Network message-passing embedding</p>\n\n<p>FID : AIMNET</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>Roman Zubatyuk et al. ,Accurate and transferable multitask prediction of chemical properties with an atoms-in-molecules neural network.Sci. Adv.5,eaav6490(2019).DOI:10.1126/sciadv.aav6490</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>graph_angle_key</strong> (str):\nThe key in the input dictionary that corresponds to the angular graph.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of message-passing layers.</li>\n<li><strong>zmax</strong> (int, default=86):\nThe maximum atomic number to allocate AFV.</li>\n<li><strong>radial_eta</strong> (float, default=16.0):\nControls the width of the gaussian sensity functions in radial AEV.</li>\n<li><strong>angular_eta</strong> (float, default=8.0):\nControls the width of the gaussian sensity functions in angular AEV.</li>\n<li><strong>radial_dist_divisions</strong> (int, default=16):\nNumber of basis function to encode ditance in radial AEV.</li>\n<li><strong>angular_dist_divisions</strong> (int, default=4):\nNumber of basis function to encode ditance in angular AEV.</li>\n<li><strong>zeta</strong> (float, default=32.0):\nThe power parameter in angle embedding.</li>\n<li><strong>angle_sections</strong> (int, default=4):\nThe number of angle sections.</li>\n<li><strong>radial_start</strong> (float, default=0.8):\nThe starting distance in radial AEV.</li>\n<li><strong>angular_start</strong> (float, default=0.8):\nThe starting distance in angular AEV.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key to use for the output embedding in the returned dictionary.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key in the input dictionary that corresponds to the radial graph.</li>\n<li><strong>keep_all_layers</strong> (bool, default=False):\nIf True, the output will contain the embeddings from all layers.</li>\n<li><strong>activation</strong> (Callable | str, default=nn.swish):\nThe activation function to use.</li>\n<li><strong>combination_neurons</strong> (Sequence[int], default=[256, 128, 16]):\nThe number of neurons in the AFV combination network.</li>\n<li><strong>embedding_neurons</strong> (Sequence[int], default=[512, 256, 256]):\nThe number of neurons in the embedding network.</li>\n<li><strong>interaction_neurons</strong> (Sequence[int], default=[256, 256, 128]):\nThe number of neurons in the interaction network.</li>\n<li><strong>afv_neurons</strong> (Sequence[int], default=[256, 256, 16]):\nThe number of neurons in the AFV update network. The last number of neurons defines the size of AFV.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.__init__", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">graph_angle_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">zmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">86</span>,</span><span class=\"param\">\t<span class=\"n\">radial_eta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">16.0</span>,</span><span class=\"param\">\t<span class=\"n\">angular_eta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">8.0</span>,</span><span class=\"param\">\t<span class=\"n\">radial_dist_divisions</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">angular_dist_divisions</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">zeta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">32.0</span>,</span><span class=\"param\">\t<span class=\"n\">angle_sections</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">radial_start</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">angular_start</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">keep_all_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">combination_neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">interaction_neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">afv_neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;AIMNET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.graph_angle_key", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.graph_angle_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.nlayers", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.zmax", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.zmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "86"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.radial_eta", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.radial_eta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "16.0"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.angular_eta", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.angular_eta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "8.0"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.radial_dist_divisions", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.radial_dist_divisions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.angular_dist_divisions", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.angular_dist_divisions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.zeta", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.zeta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "32.0"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.angle_sections", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.angle_sections", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.radial_start", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.radial_start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.8"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.angular_start", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.angular_start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.8"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.embedding_key", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.graph_key", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.keep_all_layers", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.keep_all_layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.activation", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.combination_neurons", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.combination_neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.embedding_neurons", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.embedding_neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.interaction_neurons", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.interaction_neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.afv_neurons", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.afv_neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.FID", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;AIMNET&#x27;"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.parent", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.name", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.aimnet.AIMNet.scope", "modulename": "fennol.models.embeddings.aimnet", "qualname": "AIMNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.allegro", "modulename": "fennol.models.embeddings.allegro", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding", "kind": "class", "doc": "<p>Allegro equivariant pair embedding</p>\n\n<p>FID : ALLEGRO</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>Musaelian, A., Batzner, S., Johansson, A. et al. Learning local equivariant representations for large-scale atomistic dynamics.\n  Nat Commun 14, 579 (2023). <a href=\"https://doi.org/10.1038/s41467-023-36329-y\">https://doi.org/10.1038/s41467-023-36329-y</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=128):\nThe dimension of the embedding.</li>\n<li><strong>nchannels</strong> (int, default=16):\nThe number of equivariant channels.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of interaction layers.</li>\n<li><strong>lmax</strong> (int, default=2):\nThe maximum degree of tensorial embedding.</li>\n<li><strong>lmax_density</strong> (Optional[int], default=None):\nThe maximum degree of spherical harmonics for density.\n    If None, it will be set to lmax. Must be greater or equal to lmax.</li>\n<li><strong>twobody_hidden</strong> (Sequence[int], default=[128]):\nThe number of hidden neurons in the two-body network.</li>\n<li><strong>embedding_hidden</strong> (Sequence[int], default=[]):\nThe number of hidden neurons in the embedding network.</li>\n<li><strong>latent_hidden</strong> (Sequence[int], default=[128]):\nThe number of hidden neurons in the latent network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function to use.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key in the input dictionary that corresponds to the graph.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key to use for the output embedding in the returned dictionary.</li>\n<li><strong>tensor_embedding_key</strong> (str, default=\"tensor_embedding\"):\nThe key to use for the output tensor embedding in the returned dictionary.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis parameters.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.__init__", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">lmax_density</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">twobody_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">latent_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tensor_embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tensor_embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ALLEGRO&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.dim", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "128"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.nchannels", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.nlayers", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.lmax", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.lmax_density", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.lmax_density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.twobody_hidden", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.twobody_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.embedding_hidden", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.embedding_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.latent_hidden", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.latent_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.activation", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.graph_key", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.embedding_key", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.tensor_embedding_key", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.tensor_embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;tensor_embedding&#x27;"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.species_encoding", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.radial_basis", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.FID", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ALLEGRO&#x27;"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.parent", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.name", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.allegro.AllegroEmbedding.scope", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.__init__", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ALLEGRO_E3NN&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.dim", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.nchannels", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.nlayers", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.irreps_Vij", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.irreps_Vij", "kind": "variable", "doc": "<p></p>\n", "annotation": ": &#x27;Union[str, int, e3nn.Irreps]&#x27;"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.lmax_density", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.lmax_density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.twobody_hidden", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.twobody_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.embedding_hidden", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.embedding_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.latent_hidden", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.latent_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.activation", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.activation", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[Callable, str]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.graph_key", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.embedding_key", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.tensor_embedding_key", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.tensor_embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.species_encoding", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.radial_basis", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.FID", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ALLEGRO_E3NN&#x27;"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.parent", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.name", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.allegro.AllegroE3NNEmbedding.scope", "modulename": "fennol.models.embeddings.allegro", "qualname": "AllegroE3NNEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.ani", "modulename": "fennol.models.embeddings.ani", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV", "kind": "class", "doc": "<p>Computes the Atomic Environment Vector (AEV) for a given molecular system using the ANI model.</p>\n\n<p>FID : ANI_AEV</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>J. S. Smith, O. Isayev and A. E. Roitberg, ANI-1: an extensible neural network potential with DFT accuracy at force field computational cost, Chem. Sci., 2017, 8, 3192</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>species_order</strong> (Sequence[str]):\nThe chemical species which are considered by the model.</li>\n<li><strong>graph_angle_key</strong> (str):\nThe key in the input dictionary that corresponds to the angular graph.</li>\n<li><strong>radial_eta</strong> (float, default=16.0):\nControls the width of the gaussian sensity functions in radial AEV.</li>\n<li><strong>angular_eta</strong> (float, default=8.0):\nControls the width of the gaussian sensity functions in angular AEV.</li>\n<li><strong>radial_dist_divisions</strong> (int, default=16):\nNumber of basis function to encode ditance in radial AEV.</li>\n<li><strong>angular_dist_divisions</strong> (int, default=4):\nNumber of basis function to encode ditance in angular AEV.</li>\n<li><strong>zeta</strong> (float, default=32.0):\nThe power parameter in angle embedding.</li>\n<li><strong>angle_sections</strong> (int, default=4):\nThe number of angle sections.</li>\n<li><strong>radial_start</strong> (float, default=0.8):\nThe starting distance in radial AEV.</li>\n<li><strong>angular_start</strong> (float, default=0.8):\nThe starting distance in angular AEV.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key to use for the output embedding in the returned dictionary.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key in the input dictionary that corresponds to the radial graph.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.__init__", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">species_order</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">graph_angle_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">radial_eta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">16.0</span>,</span><span class=\"param\">\t<span class=\"n\">angular_eta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">8.0</span>,</span><span class=\"param\">\t<span class=\"n\">radial_dist_divisions</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">angular_dist_divisions</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">zeta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">32.0</span>,</span><span class=\"param\">\t<span class=\"n\">angle_sections</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">radial_start</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">angular_start</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.8</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ANI_AEV&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.species_order", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.species_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, Sequence[str]]"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.graph_angle_key", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.graph_angle_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.radial_eta", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.radial_eta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "16.0"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.angular_eta", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.angular_eta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "8.0"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.radial_dist_divisions", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.radial_dist_divisions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.angular_dist_divisions", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.angular_dist_divisions", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.zeta", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.zeta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "32.0"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.angle_sections", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.angle_sections", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.radial_start", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.radial_start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.8"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.angular_start", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.angular_start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.8"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.embedding_key", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.graph_key", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.FID", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ANI_AEV&#x27;"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.parent", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.name", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.ani.ANIAEV.scope", "modulename": "fennol.models.embeddings.ani", "qualname": "ANIAEV.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.caiman", "modulename": "fennol.models.embeddings.caiman", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding", "kind": "class", "doc": "<p>Covariant Atom-In-Molecule Network</p>\n\n<p>FID : CAIMAN</p>\n\n<p>This is an E(3) equivariant embedding that forms an equivariant neighbor density\nand then uses multiple self-interaction tensor products to generate a tensorial embedding\nalong with a scalar embedding (similar to the tensor/scalar tracks in allegro).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=128):\nThe dimension of the embedding.</li>\n<li><strong>nchannels</strong> (int, default=16):\nThe number of channels.</li>\n<li><strong>nchannels_density</strong> (Optional[int], default=None):\nThe number of density channels.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of layers.</li>\n<li><strong>lmax</strong> (int, default=2):\nThe maximum value of l.</li>\n<li><strong>embedding_hidden</strong> (Sequence[int], default=[]):\nThe hidden layers for the embedding.</li>\n<li><strong>latent_hidden</strong> (Sequence[int], default=[128]):\nThe hidden layers for the latent network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>tensor_embedding_key</strong> (str, default=\"tensor_embedding\"):\nThe key for the tensor embedding output.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis parameters.</li>\n<li><strong>message_passing</strong> (bool, default=False):\nWhether to use message passing.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.__init__", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels_density</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">latent_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tensor_embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tensor_embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">message_passing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CAIMAN&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.dim", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "128"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.nchannels", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.nchannels_density", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.nchannels_density", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.nlayers", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.lmax", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.embedding_hidden", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.embedding_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.latent_hidden", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.latent_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.activation", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.graph_key", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.embedding_key", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.tensor_embedding_key", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.tensor_embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;tensor_embedding&#x27;"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.species_encoding", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.radial_basis", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.message_passing", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.message_passing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.FID", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CAIMAN&#x27;"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.parent", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.name", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.caiman.CaimanEmbedding.scope", "modulename": "fennol.models.embeddings.caiman", "qualname": "CaimanEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.chgnet", "modulename": "fennol.models.embeddings.chgnet", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding", "kind": "class", "doc": "<p>Crystal Hamiltonian Graph Neural Network</p>\n\n<p>FID : CHGNET</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>Deng, B., Zhong, P., Jun, K. et al. CHGNet as a pretrained universal neural network potential for charge-informed atomistic modelling.\n    Nat Mach Intell 5, 1031\u20131041 (2023). <a href=\"https://doi.org/10.1038/s42256-023-00716-3\">https://doi.org/10.1038/s42256-023-00716-3</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=64):\nThe dimension of the embedding.</li>\n<li><strong>nmax_angle</strong> (int, default=4):\nThe maximum fourier order for the angle representation.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of layers.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>graph_angle_key</strong> (Optional[str], default=None):\nThe key for the angular graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis parameters.</li>\n<li><strong>radial_basis_angle</strong> (Optional[dict], default=None):\nThe radial basis parameters for angles.</li>\n<li><strong>keep_all_layers</strong> (bool, default=False):\nWhether to keep all layers in the output.</li>\n<li><strong>kernel_init</strong> (Union[str, Callable], default=nn.linear.default_kernel_init):\nThe kernel initializer for Dense operations.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.__init__", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">nmax_angle</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_angle_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis_angle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">keep_all_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHGNET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.dim", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "64"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.nmax_angle", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.nmax_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.nlayers", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.graph_key", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.graph_angle_key", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.graph_angle_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.embedding_key", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.species_encoding", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.radial_basis", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.radial_basis_angle", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.radial_basis_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[dict]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.keep_all_layers", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.keep_all_layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.kernel_init", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.FID", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CHGNET&#x27;"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.parent", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.name", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.chgnet.CHGNetEmbedding.scope", "modulename": "fennol.models.embeddings.chgnet", "qualname": "CHGNetEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.crate", "modulename": "fennol.models.embeddings.crate", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding", "kind": "class", "doc": "<p>Configurable Resources ATomic Environment</p>\n\n<p>FID : CRATE</p>\n\n<p>This class represents the CRATE (Configurable Resources ATomic Environment) embedding model.\nIt is used to encode atomic environments using multiple sources of information\n  (radial, angular, E(3), message-passing, LODE, etc...)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=256):\nThe size of the embedding vectors.</li>\n<li><strong>nlayers</strong> (int, default=2):\nThe number of interaction layers in the model.</li>\n<li><strong>keep_all_layers</strong> (bool, default=False):\nWhether to output all layers in the model.</li>\n<li><strong>dim_src</strong> (int, default=64):\nThe size of the source embedding vectors.</li>\n<li><strong>dim_dst</strong> (int, default=32):\nThe size of the destination embedding vectors.</li>\n<li><strong>angle_style</strong> (str, default=\"fourier\"):\nThe style of angle representation. Available values are [\"fourier\",ani\"].</li>\n<li><strong>dim_angle</strong> (int, default=8):\nThe size of the pairwise vectors use for triplet combinations.</li>\n<li><strong>nmax_angle</strong> (int, default=4):\nThe maximum fourier order for the angle representation.</li>\n<li><strong>zeta</strong> (float, default=14.1):\nThe zeta parameter for the model ANI angular representation.</li>\n<li><strong>angle_combine_pairs</strong> (bool, default=True):\nWhether to combine angle pairs instead of average distance embedding like in ANI.</li>\n<li><strong>message_passing</strong> (bool, default=True):\nWhether to use message passing in the model.</li>\n<li><strong>att_dim</strong> (int, default=1):\nThe hidden size for the attention mechanism (only used when message-passing is disabled).</li>\n<li><strong>lmax</strong> (int, default=0):\nThe maximum order of spherical tensors.</li>\n<li><strong>nchannels_l</strong> (int, default=16):\nThe number of channels for spherical tensors.</li>\n<li><strong>n_tp</strong> (int, default=1):\nThe number of tensor products performed at each layer.</li>\n<li><strong>mixing_hidden</strong> (Sequence[int], default=[]):\nThe hidden layer sizes for the mixing network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function for the mixing network.</li>\n<li><strong>kernel_init</strong> (Union[str, Callable], default=nn.linear.default_kernel_init):\nThe kernel initialization function for Dense operations.</li>\n<li><strong>activation_mixing</strong> (Union[Callable, str], default=tssr3):\nThe activation function applied after mixing.</li>\n<li><strong>use_zacnet</strong> (bool, default=False):\nWhether to use ZacNet.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph data in the inputs dictionary.</li>\n<li><strong>graph_angle_key</strong> (Optional[str], default=None):\nThe key for the angle graph data in the inputs dictionary.</li>\n<li><strong>embedding_key</strong> (Optional[str], default=<code>self.name</code>):\nThe key for the embedding data in the output dictionary.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe dictionary of parameters for species encoding.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe dictionary of parameters for radial basis functions.</li>\n<li><strong>radial_basis_angle</strong> (Optional[dict], default=None):\nThe dictionary of parameters for radial basis functions for angle embedding.\nIf None, the radial basis for angles is the same as the radial basis for distances.</li>\n<li><strong>graph_lode</strong> (Optional[str], default=None):\nThe key for the lode graph data in the inputs dictionary.</li>\n<li><strong>lode_channels</strong> (int, default=16):\nThe number of channels for lode.</li>\n<li><strong>lode_hidden</strong> (Sequence[int], default=[]):\nThe hidden layer sizes for the lode network.</li>\n<li><strong>lode_switch</strong> (float, default=2.0):\nThe switch parameter for lode.</li>\n<li><strong>lode_shift</strong> (float, default=1.0):\nThe shift parameter for lode.</li>\n<li><strong>charge_embedding</strong> (bool, default=False):\nWhether to include charge embedding.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.__init__", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">256</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">keep_all_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">dim_src</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">dim_dst</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">32</span>,</span><span class=\"param\">\t<span class=\"n\">angle_style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;fourier&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">dim_angle</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">nmax_angle</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">zeta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">14.1</span>,</span><span class=\"param\">\t<span class=\"n\">angle_combine_pairs</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">message_passing</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">att_dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels_l</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">n_tp</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_irreps_parity</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">mixing_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">pair_mixing_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation_mixing</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">tssr3</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_zacnet</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_angle_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">pair_embedding_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis_angle</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_lode</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lode_channels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">lode_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">lode_switch</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">lode_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">charge_embedding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">total_charge_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;total_charge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CRATE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.dim", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "256"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.nlayers", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.keep_all_layers", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.keep_all_layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.dim_src", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.dim_src", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "64"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.dim_dst", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.dim_dst", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "32"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.angle_style", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.angle_style", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;fourier&#x27;"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.dim_angle", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.dim_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "8"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.nmax_angle", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.nmax_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.zeta", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.zeta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "14.1"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.angle_combine_pairs", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.angle_combine_pairs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.message_passing", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.message_passing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.att_dim", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.att_dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "1"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.lmax", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.nchannels_l", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.nchannels_l", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.n_tp", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.n_tp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "1"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.ignore_irreps_parity", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.ignore_irreps_parity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.mixing_hidden", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.mixing_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.pair_mixing_hidden", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.pair_mixing_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.activation", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.kernel_init", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.activation_mixing", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.activation_mixing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.use_zacnet", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.use_zacnet", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.graph_key", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.graph_angle_key", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.graph_angle_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.embedding_key", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.pair_embedding_key", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.pair_embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.species_encoding", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.radial_basis", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.radial_basis_angle", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.radial_basis_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[dict]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.graph_lode", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.graph_lode", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.lode_channels", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.lode_channels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.lode_hidden", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.lode_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.lode_switch", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.lode_switch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "2.0"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.lode_shift", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.lode_shift", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.0"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.charge_embedding", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.charge_embedding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.total_charge_key", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.total_charge_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;total_charge&#x27;"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.FID", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, Tuple[str]]", "default_value": "&#x27;CRATE&#x27;"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.parent", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.name", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.crate.CRATEmbedding.scope", "modulename": "fennol.models.embeddings.crate", "qualname": "CRATEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.deeppot", "modulename": "fennol.models.embeddings.deeppot", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding", "kind": "class", "doc": "<p>Deep Potential embedding</p>\n\n<p>FID : DEEPPOT</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>Zhang, L., Han, J., Wang, H., Car, R., &amp; E, W. (2018). Deep Potential Molecular dynamics: A scalable model with the accuracy of quantum mechanics. Phys. Rev. Lett., 120(14), 143001. <a href=\"https://doi.org/10.1103/PhysRevLett.120.143001\">https://doi.org/10.1103/PhysRevLett.120.143001</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=64):\nThe dimension of the embedding.</li>\n<li><strong>subdim</strong> (int, default=8):\nThe first dimensions to select for the embedding tensor product.</li>\n<li><strong>radial_dim</strong> (Optional[int], default=None):\nThe dimension of the radial embedding for tensor combination. \nIf None, we use a neural net to combine chemical and radial information, like in the original DeepPot.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key to use for the output embedding in the returned dictionary.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key in the input dictionary that corresponds to the radial graph.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (Optional[dict], default=None):\nThe radial basis parameters. If None, the radial basis is the s_ij like in the original DeepPot.</li>\n<li><strong>embedding_hidden</strong> (Sequence[int], default=[64, 64, 64]):\nThe hidden layers of the embedding network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function.</li>\n<li><strong>concatenate_species</strong> (bool, default=False):\nWhether to concatenate the species encoding with the embedding.</li>\n<li><strong>divide_distances</strong> (bool, default=True):\nWhether to divide the switch by the distance in s_ij.</li>\n<li><strong>species_order</strong> (Optional[Sequence[str]], default=None):\nSpecies considered by the network when using species-specialized embedding network.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.__init__", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">subdim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">radial_dim</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">concatenate_species</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">divide_distances</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">species_order</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;DEEPPOT&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.dim", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "64"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.subdim", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.subdim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "8"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.radial_dim", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.radial_dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.embedding_key", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.graph_key", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.species_encoding", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.radial_basis", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[dict]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.embedding_hidden", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.embedding_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.activation", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.concatenate_species", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.concatenate_species", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.divide_distances", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.divide_distances", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.species_order", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.species_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, Sequence[str], NoneType]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.FID", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;DEEPPOT&#x27;"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.parent", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.name", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotEmbedding.scope", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding", "kind": "class", "doc": "<p>Deep Potential embedding with angle information</p>\n\n<p>FID : DEEPPOT_E3</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>L. Zhang, J. Han, H. Wang, W. A. Saidi, R. Car, Weinan E, End-to-end Symmetry Preserving Inter-atomic Potential Energy Model for Finite and Extended Systems,\nConference on Neural Information Processing Systems (NeurIPS), 2018,\n<a href=\"https://doi.org/10.48550/arXiv.1805.09003\">https://doi.org/10.48550/arXiv.1805.09003</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=64):\nThe dimension of the embedding.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key to use for the output embedding in the returned dictionary.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key in the input dictionary that corresponds to the radial graph.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>embedding_hidden</strong> (Sequence[int], default=[64, 64, 64]):\nThe hidden layers of the embedding network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function.</li>\n<li><strong>concatenate_species</strong> (bool, default=False):\nWhether to concatenate the species encoding with the embedding.</li>\n<li><strong>divide_distances</strong> (bool, default=True):\nWhether to divide the switch by the distance in s_ij.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.__init__", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">concatenate_species</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">divide_distances</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;DEEPPOT_E3&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.dim", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "64"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.embedding_key", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.graph_key", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.species_encoding", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.embedding_hidden", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.embedding_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.activation", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.concatenate_species", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.concatenate_species", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.divide_distances", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.divide_distances", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.FID", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;DEEPPOT_E3&#x27;"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.parent", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.name", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.deeppot.DeepPotE3Embedding.scope", "modulename": "fennol.models.embeddings.deeppot", "qualname": "DeepPotE3Embedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.eeacsf", "modulename": "fennol.models.embeddings.eeacsf", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF", "kind": "class", "doc": "<p>element-embracing Atom-Centered Symmetry Functions </p>\n\n<p>FID : EEACSF</p>\n\n<p>This is loosely inspired from M. Eckhoff and M. Reiher, Lifelong Machine Learning Potentials,\nJ. Chem. Theory Comput. 2023, 19, 12, 3509\u20133525, <a href=\"https://doi.org/10.1021/acs.jctc.3c00279\">https://doi.org/10.1021/acs.jctc.3c00279</a></p>\n\n<p>This is an embedding similar to ANI that include simple chemical information in the AEVs\nwithout trainable parameters (fixed embedding).\nThe angle embedding is computed using a low-order Fourier expansion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>graph_angle_key</strong> (str):\nThe key in the input dictionary that corresponds to the angular graph.</li>\n<li><strong>nmax_angle</strong> (int, default=4):\nThe maximum fourier order for the angle representation.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key to use for the output embedding in the returned dictionary.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key in the input dictionary that corresponds to the radial graph.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis parameters the radial AEV.</li>\n<li><strong>radial_basis_angle</strong> (dict, default={}):\nThe radial basis parameters for the angular AEV.</li>\n<li><strong>angle_combine_pairs</strong> (bool, default=False):\nIf True, the angular AEV is computed by combining pairs of radial AEV.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.__init__", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">graph_angle_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">nmax_angle</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis_angle</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">angle_combine_pairs</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;EEACSF&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.graph_angle_key", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.graph_angle_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.nmax_angle", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.nmax_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.embedding_key", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.graph_key", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.species_encoding", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.radial_basis", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.radial_basis_angle", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.radial_basis_angle", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.angle_combine_pairs", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.angle_combine_pairs", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.FID", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;EEACSF&#x27;"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.parent", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.name", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.eeacsf.EEACSF.scope", "modulename": "fennol.models.embeddings.eeacsf", "qualname": "EEACSF.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.foam", "modulename": "fennol.models.embeddings.foam", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding", "kind": "class", "doc": "<p>Filtered Overlap of Atomic Moments</p>\n\n<p>Very similar to SOAP embedding but for each rank l, we do not take all combinations\nof each channels but linearly project on 2 nchannels elements and then take the\nscalar product. This is then kind of a linearly filtered SOAP embedding.</p>\n\n<p>FID : FOAM</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>lmax</strong> (int, default=2):\nThe maximum value of l.</li>\n<li><strong>nchannels</strong> (Optional[int], default=None):\nThe number of channels.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis parameters.</li>\n<li><strong>include_species</strong> (bool, default=True):\nWhether to concatenate the species encoding to the embedding.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.__init__", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">include_species</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;FOAM&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.lmax", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.nchannels", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.graph_key", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.embedding_key", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.species_encoding", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.radial_basis", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.include_species", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.include_species", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.FID", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;FOAM&#x27;"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.parent", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.name", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.foam.FOAMEmbedding.scope", "modulename": "fennol.models.embeddings.foam", "qualname": "FOAMEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.gaussian_moments", "modulename": "fennol.models.embeddings.gaussian_moments", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding", "kind": "class", "doc": "<p>Gaussian moments embedding adapted from J. Chem. Theory Comput. 2020, 16, 8, 5410\u20135421\n(<a href=\"https://pubs.acs.org/doi/full/10.1021/acs.jctc.0c00347\">https://pubs.acs.org/doi/full/10.1021/acs.jctc.0c00347</a>)</p>\n\n<p>The construction of this embedding is similar to ACE but with a fixed lmax=3 and\na subset of tensor product paths chosen by hand.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>nchannels</strong> (int, default=7):\nThe number of chemical-radial (chemrad) channels for the density representation.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key in the input dictionary that corresponds to the molecular graph.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key in the output dictionary where the computed embedding will be stored.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nA dictionary of parameters for the species encoding.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nA dictionary of parameters for the radial basis.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.__init__", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">7</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;GAUSSIAN_MOMENTS&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.nchannels", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "7"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.graph_key", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.embedding_key", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.species_encoding", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.radial_basis", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.FID", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;GAUSSIAN_MOMENTS&#x27;"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.parent", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.name", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding.scope", "modulename": "fennol.models.embeddings.gaussian_moments", "qualname": "GaussianMomentsEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.hipnn", "modulename": "fennol.models.embeddings.hipnn", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding", "kind": "class", "doc": "<p>Hierarchically Interacting Particle Neural Network</p>\n\n<p>Adapted from N. Lubbers, J. S. Smith and K. Barros, Hierarchical modeling of molecular energies using a deep neural network\nJ. Chem. Phys. 148, 241715 (2018) (J. Chem. Phys. 148, 241715 (2018))</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=80):\nThe dimension of the embedding.</li>\n<li><strong>n_onsite</strong> (int, default=3):\nThe number of onsite layers per interaction layer.</li>\n<li><strong>nlayers</strong> (int, default=2):\nThe number of interaction layers.</li>\n<li><strong>lmax</strong> (int, default=0):\nThe maximum value of l for spherical harmonics.</li>\n<li><strong>n_message</strong> (int, default=0):\nThe number of layers for the message NN.\nIf 0, the message is formed from a filtered tensorial combination of radial and chemical features.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis : dict, default={\"dim\"</strong> (20}):\nThe radial basis parameters.</li>\n<li><strong>keep_all_layers</strong> (bool, default=True):\nWhether to keep embeddings from each layer in the output.</li>\n<li><strong>graph_l_key</strong> (str, default=\"graph\"):\nThe key for the graph input for the spherical harmonics.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.__init__", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">80</span>,</span><span class=\"param\">\t<span class=\"n\">n_onsite</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">n_message</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">keep_all_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">graph_l_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;HIPNN&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.dim", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "80"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.n_onsite", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.n_onsite", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.nlayers", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.lmax", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.n_message", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.n_message", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.activation", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.graph_key", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.embedding_key", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.species_encoding", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.radial_basis", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.keep_all_layers", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.keep_all_layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.graph_l_key", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.graph_l_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.FID", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;HIPNN&#x27;"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.parent", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.name", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.hipnn.HIPNNEmbedding.scope", "modulename": "fennol.models.embeddings.hipnn", "qualname": "HIPNNEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.minimace", "modulename": "fennol.models.embeddings.minimace", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding", "kind": "class", "doc": "<p>Minimal MACE Embedding</p>\n\n<p>FID : MINIMACE</p>\n\n<p>This is a simplified version of the MACE embedding from the paper:\nBatatia et al., MACE: Higher Order Equivariant Message Passing Neural Networks for Fast and Accurate Force Fields\n<a href=\"https://doi.org/10.48550/arXiv.2206.07697\">https://doi.org/10.48550/arXiv.2206.07697</a></p>\n\n<p>It is designed to neglect the most costly operations (such as pairwise tensor products)\nand filter the results at each atomic tensor products to control the number of tensors.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=128):\nThe dimension of the embedding.</li>\n<li><strong>nchannels</strong> (int, default=16):\nThe number of tensor channels.</li>\n<li><strong>message_dim</strong> (int, default=16):\nThe dimension of the message formed from the current embedding.</li>\n<li><strong>nlayers</strong> (int, default=2):\nThe number of interaction layers.</li>\n<li><strong>ntp</strong> (int, default=2):\nThe number of tensor products per layer. Related to body-order in MACE.</li>\n<li><strong>lmax</strong> (int, default=2):\nThe maximum angular momentum of spherical tensors.</li>\n<li><strong>embedding_hidden</strong> (Sequence[int], default=[]):\nThe hidden layers for the species embedding network.</li>\n<li><strong>latent_hidden</strong> (Sequence[int], default=[128]):\nThe hidden layers for the latent update network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>tensor_embedding_key</strong> (str, default=\"tensor_embedding\"):\nThe key for the tensor embedding output.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis parameters.</li>\n<li><strong>ignore_parity</strong> (bool, default=True):\nWhether to ignore parity in the tensor products \n(i.e. take all paths that produce a certain l, irrespective of its parity).</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.__init__", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">message_dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">ntp</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">latent_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tensor_embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;tensor_embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_parity</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MINIMACE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.dim", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "128"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.nchannels", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.message_dim", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.message_dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.nlayers", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.ntp", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.ntp", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.lmax", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.embedding_hidden", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.embedding_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.latent_hidden", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.latent_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.activation", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.graph_key", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.embedding_key", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.tensor_embedding_key", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.tensor_embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;tensor_embedding&#x27;"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.species_encoding", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.radial_basis", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.ignore_parity", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.ignore_parity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.FID", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;MINIMACE&#x27;"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.parent", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.name", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.minimace.MiniMaceEmbedding.scope", "modulename": "fennol.models.embeddings.minimace", "qualname": "MiniMaceEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.newtonnet", "modulename": "fennol.models.embeddings.newtonnet", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding", "kind": "class", "doc": "<p>Newtonian message passing network</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>Haghighatlari et al., NewtonNet: a Newtonian message passing network for deep learning of interatomic potentials and forces\n<a href=\"https://doi.org/10.1039/D2DD00008C\">https://doi.org/10.1039/D2DD00008C</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=128):\nThe dimension of the embedding.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of interaction layers.</li>\n<li><strong>nchannels</strong> (Optional[int], default=None):\nThe number of vector channels.</li>\n<li><strong>embedding_hidden</strong> (Sequence[int], default=[128]):\nThe hidden layers for the embedding networks.</li>\n<li><strong>latent_hidden</strong> (Sequence[int], default=[128]):\nThe hidden layers for the latent update network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the output embedding.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis parameters.</li>\n<li><strong>keep_all_layers</strong> (bool, default=False):\nWhether to keep embeddings from each layer in the output.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.__init__", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">latent_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">keep_all_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;NEWTONNET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.dim", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "128"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.nlayers", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.nchannels", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.embedding_hidden", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.embedding_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.latent_hidden", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.latent_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.activation", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.graph_key", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.embedding_key", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.species_encoding", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.radial_basis", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.keep_all_layers", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.keep_all_layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.FID", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;NEWTONNET&#x27;"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.parent", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.name", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.newtonnet.NewtonNetEmbedding.scope", "modulename": "fennol.models.embeddings.newtonnet", "qualname": "NewtonNetEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.painn", "modulename": "fennol.models.embeddings.painn", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding", "kind": "class", "doc": "<p>polarizable atom interaction neural network</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>K.T. Sch\u00fctt. P.-J. Kindermans, H. E. Sauceda, S. Chmiela, A. Tkatchenko, K.-R. M\u00fcller. SchNet - a deep learning architecture for molecules and materials. The Journal of Chemical Physics 148(24), 241722 (2018) \n<a href=\"https://doi.org/10.1063/1.5019779\">https://doi.org/10.1063/1.5019779</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=128):\nThe dimension of the embedding.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of interaction layers.</li>\n<li><strong>nchannels</strong> (Optional[int], default=None):\nThe number of vector channels. If None, it is set to dim.</li>\n<li><strong>message_hidden</strong> (Sequence[int], default=[128]):\nThe hidden layers for the message network.</li>\n<li><strong>update_hidden</strong> (Sequence[int], default=[128]):\nThe hidden layers for the update network.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=nn.silu):\nThe activation function.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>tensor_embedding_key</strong> (str, default=\"embedding_vectors\"):\nThe key for the tensor embedding output.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis function parameters.</li>\n<li><strong>keep_all_layers</strong> (bool, default=False):\nWhether to keep the embedding from each layer in the output.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.__init__", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">message_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">update_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">tensor_embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding_vectors&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">keep_all_layers</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;PAINN&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.dim", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "128"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.nlayers", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.nchannels", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.message_hidden", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.message_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.update_hidden", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.update_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.activation", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.graph_key", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.embedding_key", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.tensor_embedding_key", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.tensor_embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding_vectors&#x27;"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.species_encoding", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.radial_basis", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.keep_all_layers", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.keep_all_layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.FID", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;PAINN&#x27;"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.parent", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.name", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.painn.PAINNEmbedding.scope", "modulename": "fennol.models.embeddings.painn", "qualname": "PAINNEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.schnet", "modulename": "fennol.models.embeddings.schnet", "kind": "module", "doc": "<p>Implementation of SchNet embedding.</p>\n\n<p>Done by C\u00f4me Cattin, 2024.</p>\n"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding", "kind": "class", "doc": "<p>SchNet embedding.</p>\n\n<p>Continuous filter convolutional neural network for modeling quantum\ninteractions.</p>\n\n<h6 id=\"references\">References</h6>\n\n<p>SCH\u00dcTT, Kristof, KINDERMANS, Pieter-Jan, SAUCEDA FELIX, Huziel Enoc, et al.\nSchnet: A continuous-filter convolutional neural network for\nmodeling quantum interactions.\nAdvances in neural information processing systems, 2017, vol. 30.\n<a href=\"https://proceedings.neurips.cc/paper_files/paper/2017/file/303ed4c69846ab36c2904d3ba8573050-Paper.pdf\">https://proceedings.neurips.cc/paper_files/paper/2017/file/303ed4c69846ab36c2904d3ba8573050-Paper.pdf</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=64):\nThe dimension of the embedding.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of interaction layers.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>radial_basis</strong> (dict, default={}):\nThe radial basis function parameters.</li>\n<li><strong>species_encoding</strong> (dict, default={}):\nThe species encoding parameters.</li>\n<li><strong>activation</strong> (Union[Callable, str], default=ssp):\nThe activation function.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.__init__", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">conv_hidden</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">ssp</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SCHNET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.dim", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "64"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.nlayers", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.conv_hidden", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.conv_hidden", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.graph_key", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.embedding_key", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.radial_basis", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.species_encoding", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.activation", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.activation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.FID", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SCHNET&#x27;"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.parent", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.name", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.schnet.SchNetEmbedding.scope", "modulename": "fennol.models.embeddings.schnet", "qualname": "SchNetEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.embeddings.spookynet", "modulename": "fennol.models.embeddings.spookynet", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding", "kind": "class", "doc": "<p>SpookyNet equivariant message-passing embedding with electronic encodings (charge + spin).</p>\n\n<p>FID : SPOOKYNET</p>\n\n<p>Warning : non-local attention interaction is not yet implemented !</p>\n\n<h6 id=\"reference\">Reference</h6>\n\n<p>Unke, O.T., Chmiela, S., Gastegger, M. et al. SpookyNet: Learning force fields with electronic degrees of freedom and nonlocal effects. Nat Commun 12, 7273 (2021). <a href=\"https://doi.org/10.1038/s41467-021-27504-0\">https://doi.org/10.1038/s41467-021-27504-0</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dim</strong> (int, default=128):\nThe dimension of the embedding.</li>\n<li><strong>nlayers</strong> (int, default=3):\nThe number of interaction layers.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nThe key for the graph input.</li>\n<li><strong>embedding_key</strong> (str, default=\"embedding\"):\nThe key for the embedding output.</li>\n<li><strong>species_encoding : dict, default={\"encoding\"</strong> (\"electronic_structure\"}):\nThe species encoding parameters.</li>\n<li><strong>radial_basis : dict, default={\"basis\"</strong> (\"spooky\"}):\nThe radial basis parameters.</li>\n<li><strong>kernel_init</strong> (Union[Callable, str], default=scaled_orthogonal(scale=1.0, mode=\"fan_avg\")):\nThe kernel initializer for Dense operations.</li>\n<li><strong>use_spin_encoding</strong> (bool, default=True):\nWhether to use spin encoding.</li>\n<li><strong>use_charge_encoding</strong> (bool, default=True):\nWhether to use charge encoding.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.__init__", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;embedding&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_encoding</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">radial_basis</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">scaled_orthogonal</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_spin_encoding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">use_charge_encoding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">total_charge_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;total_charge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SPOOKYNET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.dim", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "128"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.nlayers", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.graph_key", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.embedding_key", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;embedding&#x27;"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.species_encoding", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.species_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.radial_basis", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.radial_basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.kernel_init", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">shape</span>, </span><span class=\"param\">dtype=&lt;class &#x27;jax.numpy.float32&#x27;&gt;</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.use_spin_encoding", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.use_spin_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.use_charge_encoding", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.use_charge_encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.total_charge_key", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.total_charge_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;total_charge&#x27;"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.FID", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SPOOKYNET&#x27;"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.parent", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.name", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.embeddings.spookynet.SpookyNetEmbedding.scope", "modulename": "fennol.models.embeddings.spookynet", "qualname": "SpookyNetEmbedding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.fennix", "modulename": "fennol.models.fennix", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.fennix.FENNIX", "modulename": "fennol.models.fennix", "qualname": "FENNIX", "kind": "class", "doc": "<p>Static wrapper for FENNIX models</p>\n\n<p>The underlying model is a flax.nn.Sequential built from the <code>modules</code> dictionary\nwhich references registered modules in <code>modules.MODULES</code> and provides the parameters for initialization.</p>\n\n<p>Since the model is static and contains variables, it must be initialized right away with either\n<code>example_data</code> or <code>variables</code>. If <code>variables</code> is provided, it is used directly. If <code>example_data</code>\nis provided, the model is initialized with <code>example_data</code> and the resulting variables are stored\nin the wrapper.</p>\n\n<p>methods:\n    * __call__  : calls the jitted apply method of the underlying model and sums the energy terms\n                    in <code>energy_terms</code> provided in the constructor.\n                    It returns the total energy (of each subsystem in the batch) and the output dict.</p>\n\n<pre><code>* get_model : returns the underlying model and variables (useful for training)\n</code></pre>\n"}, {"fullname": "fennol.models.fennix.FENNIX.__init__", "modulename": "fennol.models.fennix", "qualname": "FENNIX.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">modules</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">OrderedDict</span>,</span><span class=\"param\">\t<span class=\"n\">preprocessing</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">OrderedDict</span> <span class=\"o\">=</span> <span class=\"n\">OrderedDict</span><span class=\"p\">()</span>,</span><span class=\"param\">\t<span class=\"n\">example_data</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rng_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">PRNGKey</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">variables</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">energy_terms</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_atom_padding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">graph_config</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "fennol.models.fennix.FENNIX.cutoff", "modulename": "fennol.models.fennix", "qualname": "FENNIX.cutoff", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float | None"}, {"fullname": "fennol.models.fennix.FENNIX.modules", "modulename": "fennol.models.fennix", "qualname": "FENNIX.modules", "kind": "variable", "doc": "<p></p>\n", "annotation": ": fennol.models.modules.FENNIXModules"}, {"fullname": "fennol.models.fennix.FENNIX.variables", "modulename": "fennol.models.fennix", "qualname": "FENNIX.variables", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, {"fullname": "fennol.models.fennix.FENNIX.preprocessing", "modulename": "fennol.models.fennix", "qualname": "FENNIX.preprocessing", "kind": "variable", "doc": "<p></p>\n", "annotation": ": fennol.models.preprocessing.PreprocessingChain"}, {"fullname": "fennol.models.fennix.FENNIX.preproc_state", "modulename": "fennol.models.fennix", "qualname": "FENNIX.preproc_state", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, {"fullname": "fennol.models.fennix.FENNIX.energy_terms", "modulename": "fennol.models.fennix", "qualname": "FENNIX.energy_terms", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Sequence[str]]", "default_value": "None"}, {"fullname": "fennol.models.fennix.FENNIX.use_atom_padding", "modulename": "fennol.models.fennix", "qualname": "FENNIX.use_atom_padding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.fennix.FENNIX.set_energy_terms", "modulename": "fennol.models.fennix", "qualname": "FENNIX.set_energy_terms", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">energy_terms</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>, </span><span class=\"param\"><span class=\"n\">jit</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.preprocess", "modulename": "fennol.models.fennix", "qualname": "FENNIX.preprocess", "kind": "function", "doc": "<p>apply preprocessing to the input data</p>\n\n<p>!!! This is not a pure function =&gt; do not apply jax transforms !!!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">inputs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.reinitialize_preprocessing", "modulename": "fennol.models.fennix", "qualname": "FENNIX.reinitialize_preprocessing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rng_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">PRNGKey</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">example_data</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.total_energy", "modulename": "fennol.models.fennix", "qualname": "FENNIX.total_energy", "kind": "function", "doc": "<p>compute the total energy of the system</p>\n\n<p>!!! This is not a pure function =&gt; do not apply jax transforms !!!\nif you want to apply jax transforms, use self._total_energy(variables, inputs) which is pure and preprocess the input using self.preprocess</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">variables</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">inputs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.energy_and_forces", "modulename": "fennol.models.fennix", "qualname": "FENNIX.energy_and_forces", "kind": "function", "doc": "<p>compute the total energy and forces of the system</p>\n\n<p>!!! This is not a pure function =&gt; do not apply jax transforms !!!\nif you want to apply jax transforms, use  self._energy_and_forces(variables, inputs) which is pure and preprocess the input using self.preprocess</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">variables</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">inputs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.energy_and_forces_and_virial", "modulename": "fennol.models.fennix", "qualname": "FENNIX.energy_and_forces_and_virial", "kind": "function", "doc": "<p>compute the total energy and forces of the system</p>\n\n<p>!!! This is not a pure function =&gt; do not apply jax transforms !!!\nif you want to apply jax transforms, use  self._energy_and_forces_and_virial(variables, inputs) which is pure and preprocess the input using self.preprocess</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">variables</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">inputs</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.remove_atom_padding", "modulename": "fennol.models.fennix", "qualname": "FENNIX.remove_atom_padding", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.get_model", "modulename": "fennol.models.fennix", "qualname": "FENNIX.get_model", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">modules</span><span class=\"o\">.</span><span class=\"n\">FENNIXModules</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.get_preprocessing", "modulename": "fennol.models.fennix", "qualname": "FENNIX.get_preprocessing", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">PreprocessingChain</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.generate_dummy_system", "modulename": "fennol.models.fennix", "qualname": "FENNIX.generate_dummy_system", "kind": "function", "doc": "<p>Generate dummy system for initialization</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">rng_key</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">PRNGKey</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">box_size</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_atoms</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.summarize", "modulename": "fennol.models.fennix", "qualname": "FENNIX.summarize", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">rng_key</span><span class=\"p\">:</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">PRNGKey</span><span class=\"o\">&gt;</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">example_data</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.to_dict", "modulename": "fennol.models.fennix", "qualname": "FENNIX.to_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.save", "modulename": "fennol.models.fennix", "qualname": "FENNIX.save", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.fennix.FENNIX.load", "modulename": "fennol.models.fennix", "qualname": "FENNIX.load", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">use_atom_padding</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">graph_config</span><span class=\"o\">=</span><span class=\"p\">{}</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc", "modulename": "fennol.models.misc", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.misc.e3", "modulename": "fennol.models.misc.e3", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct", "kind": "class", "doc": "<p>Tensor product of two spherical harmonics</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.__init__", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lmax1</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">lmax2</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">lmax_out</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_parity</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.lmax1", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.lmax1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.lmax2", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.lmax2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.lmax_out", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.lmax_out", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.ignore_parity", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.ignore_parity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.parent", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.name", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.FullTensorProduct.scope", "modulename": "fennol.models.misc.e3", "qualname": "FullTensorProduct.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct", "kind": "class", "doc": "<p>Tensor product of two spherical harmonics filtered to give back the irreps of the first input</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.__init__", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lmax1</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">lmax2</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">lmax_out</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_parity</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">weights_by_channel</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.lmax1", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.lmax1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.lmax2", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.lmax2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.lmax_out", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.lmax_out", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.ignore_parity", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.ignore_parity", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.weights_by_channel", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.weights_by_channel", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.parent", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.name", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.FilteredTensorProduct.scope", "modulename": "fennol.models.misc.e3", "qualname": "FilteredTensorProduct.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixing", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.__init__", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels_out</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHANNEL_MIXING&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.lmax", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.nchannels", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.nchannels_out", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.nchannels_out", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.input_key", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.output_key", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.squeeze", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.FID", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CHANNEL_MIXING&#x27;"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.parent", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.name", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixing.scope", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixing.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.__init__", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">nchannels_out</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHANNEL_MIXING_E3&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.lmax", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.nchannels", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.nchannels", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.nchannels_out", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.nchannels_out", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[int]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.input_key", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.output_key", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.squeeze", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.FID", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CHANNEL_MIXING_E3&#x27;"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.parent", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.name", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.ChannelMixingE3.scope", "modulename": "fennol.models.misc.e3", "qualname": "ChannelMixingE3.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.__init__", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">lmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SPHERICAL_TO_CARTESIAN&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.lmax", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.lmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.input_key", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.output_key", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.FID", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SPHERICAL_TO_CARTESIAN&#x27;"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.parent", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.name", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.e3.SphericalToCartesian.scope", "modulename": "fennol.models.misc.e3", "qualname": "SphericalToCartesian.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings", "modulename": "fennol.models.misc.encodings", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding", "kind": "class", "doc": "<p>A module that encodes species information.\nFor now, the only encoding is a random vector for each species.</p>\n\n<p>Args:\n    dim (int): The dimensionality of the output encoding.\n    zmax (int): The maximum atomic number to encode.\n    output_key (Optional[str]): The key to use for the output in the returned dictionary.</p>\n\n<p>Returns:\n    jax.Array or dict: The encoded species information.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.__init__", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">zmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">encoding</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;random&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_order</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SPECIES_ENCODING&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.dim", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.zmax", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.zmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "50"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.output_key", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.encoding", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.encoding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;random&#x27;"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.species_order", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.species_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[NoneType, str, Sequence[str]]", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.trainable", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.FID", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SPECIES_ENCODING&#x27;"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.parent", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.name", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.SpeciesEncoding.scope", "modulename": "fennol.models.misc.encodings", "qualname": "SpeciesEncoding.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.RadialBasis", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis", "kind": "class", "doc": "<p>A module that computes a radial embedding of distances.\nFor now, the only embedding is the Bessel embedding used for example in Allegro.</p>\n\n<p>Args:\n    end (float): The maximum distance to consider.\n    start (float, optional): The minimum distance to consider (default: 0.0).\n    dim (int, optional): The number of dimensions of the embedding (default: 8).\n    graph_key (str, optional): The key to use to extract the distances from a graph input (default: None).\n        If None, the input is either a graph (dict) or a JAX array containing distances.\n    output_key (str, optional): The key to use to store the embedding in the output dictionary (default: None).\n        If None, the embedding directly returned.</p>\n\n<p>Returns:\n    jax.Array or dict: The radial embedding of the distances.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.__init__", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">end</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">basis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bessel&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">enforce_positive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.9448630639252209</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;RADIAL_BASIS&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.end", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.end", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.start", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.0"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.dim", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "8"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.graph_key", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.output_key", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.basis", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.basis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;bessel&#x27;"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.trainable", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.enforce_positive", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.enforce_positive", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.gamma", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.gamma", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.9448630639252209"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.FID", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;RADIAL_BASIS&#x27;"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.parent", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.name", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.RadialBasis.scope", "modulename": "fennol.models.misc.encodings", "qualname": "RadialBasis.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.encodings.positional_encoding", "modulename": "fennol.models.misc.encodings", "qualname": "positional_encoding", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">d</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">10000.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.misc", "modulename": "fennol.models.misc.misc", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.misc.misc.apply_switch", "modulename": "fennol.models.misc.misc", "qualname": "apply_switch", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>, </span><span class=\"param\"><span class=\"n\">switch</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.misc.ApplySwitch", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.__init__", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">switch_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;APPLY_SWITCH&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.key", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.switch_key", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.switch_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.graph_key", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.output_key", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.FID", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;APPLY_SWITCH&#x27;"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.parent", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.name", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ApplySwitch.scope", "modulename": "fennol.models.misc.misc", "qualname": "ApplySwitch.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.AtomToEdge", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.__init__", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">switch</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">switch_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">use_source</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ATOM_TO_EDGE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.key", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.output_key", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.graph_key", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.switch", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.switch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.switch_key", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.switch_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.use_source", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.use_source", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.FID", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ATOM_TO_EDGE&#x27;"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.parent", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.name", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.AtomToEdge.scope", "modulename": "fennol.models.misc.misc", "qualname": "AtomToEdge.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ScatterEdges", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.__init__", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">switch</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">switch_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SCATTER_EDGES&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.key", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.output_key", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.graph_key", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.switch", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.switch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.switch_key", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.switch_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.FID", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SCATTER_EDGES&#x27;"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.parent", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.name", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ScatterEdges.scope", "modulename": "fennol.models.misc.misc", "qualname": "ScatterEdges.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.__init__", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">switch</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">switch_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;EDGE_CONCATENATE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.key", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.output_key", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.graph_key", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.switch", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.switch", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.switch_key", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.switch_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.axis", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.axis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "-1"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.FID", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;EDGE_CONCATENATE&#x27;"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.parent", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.name", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.EdgeConcatenate.scope", "modulename": "fennol.models.misc.misc", "qualname": "EdgeConcatenate.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ScatterSystem", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.ScatterSystem.__init__", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SCATTER_SYSTEM&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.ScatterSystem.key", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.ScatterSystem.output_key", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ScatterSystem.FID", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SCATTER_SYSTEM&#x27;"}, {"fullname": "fennol.models.misc.misc.ScatterSystem.parent", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.ScatterSystem.name", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ScatterSystem.scope", "modulename": "fennol.models.misc.misc", "qualname": "ScatterSystem.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SumAxis", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.SumAxis.__init__", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">norm</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SUM_AXIS&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.SumAxis.key", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.SumAxis.axis", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.axis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[NoneType, int, Sequence[int]]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SumAxis.output_key", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SumAxis.norm", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.norm", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SumAxis.FID", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SUM_AXIS&#x27;"}, {"fullname": "fennol.models.misc.misc.SumAxis.parent", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.SumAxis.name", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SumAxis.scope", "modulename": "fennol.models.misc.misc", "qualname": "SumAxis.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Split", "modulename": "fennol.models.misc.misc", "qualname": "Split", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Split.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Split.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_keys</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">sizes</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SPLIT&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Split.key", "modulename": "fennol.models.misc.misc", "qualname": "Split.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.Split.output_keys", "modulename": "fennol.models.misc.misc", "qualname": "Split.output_keys", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[str]"}, {"fullname": "fennol.models.misc.misc.Split.axis", "modulename": "fennol.models.misc.misc", "qualname": "Split.axis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "-1"}, {"fullname": "fennol.models.misc.misc.Split.sizes", "modulename": "fennol.models.misc.misc", "qualname": "Split.sizes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[int, Sequence[int]]", "default_value": "1"}, {"fullname": "fennol.models.misc.misc.Split.squeeze", "modulename": "fennol.models.misc.misc", "qualname": "Split.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.misc.Split.FID", "modulename": "fennol.models.misc.misc", "qualname": "Split.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SPLIT&#x27;"}, {"fullname": "fennol.models.misc.misc.Split.parent", "modulename": "fennol.models.misc.misc", "qualname": "Split.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Split.name", "modulename": "fennol.models.misc.misc", "qualname": "Split.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Split.scope", "modulename": "fennol.models.misc.misc", "qualname": "Split.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Concatenate", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Concatenate.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CONCATENATE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Concatenate.keys", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.keys", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[str]"}, {"fullname": "fennol.models.misc.misc.Concatenate.axis", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.axis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "-1"}, {"fullname": "fennol.models.misc.misc.Concatenate.output_key", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Concatenate.FID", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CONCATENATE&#x27;"}, {"fullname": "fennol.models.misc.misc.Concatenate.parent", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Concatenate.name", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Concatenate.scope", "modulename": "fennol.models.misc.misc", "qualname": "Concatenate.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Activation", "modulename": "fennol.models.misc.misc", "qualname": "Activation", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Activation.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Activation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">scale_out</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">shift_out</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ACTIVATION&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Activation.key", "modulename": "fennol.models.misc.misc", "qualname": "Activation.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.Activation.activation", "modulename": "fennol.models.misc.misc", "qualname": "Activation.activation", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[Callable, str]"}, {"fullname": "fennol.models.misc.misc.Activation.scale_out", "modulename": "fennol.models.misc.misc", "qualname": "Activation.scale_out", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.0"}, {"fullname": "fennol.models.misc.misc.Activation.shift_out", "modulename": "fennol.models.misc.misc", "qualname": "Activation.shift_out", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.0"}, {"fullname": "fennol.models.misc.misc.Activation.output_key", "modulename": "fennol.models.misc.misc", "qualname": "Activation.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Activation.FID", "modulename": "fennol.models.misc.misc", "qualname": "Activation.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ACTIVATION&#x27;"}, {"fullname": "fennol.models.misc.misc.Activation.parent", "modulename": "fennol.models.misc.misc", "qualname": "Activation.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Activation.name", "modulename": "fennol.models.misc.misc", "qualname": "Activation.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Activation.scope", "modulename": "fennol.models.misc.misc", "qualname": "Activation.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Scale", "modulename": "fennol.models.misc.misc", "qualname": "Scale", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Scale.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Scale.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SCALE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Scale.key", "modulename": "fennol.models.misc.misc", "qualname": "Scale.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.Scale.scale", "modulename": "fennol.models.misc.misc", "qualname": "Scale.scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "fennol.models.misc.misc.Scale.output_key", "modulename": "fennol.models.misc.misc", "qualname": "Scale.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Scale.trainable", "modulename": "fennol.models.misc.misc", "qualname": "Scale.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.misc.Scale.FID", "modulename": "fennol.models.misc.misc", "qualname": "Scale.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SCALE&#x27;"}, {"fullname": "fennol.models.misc.misc.Scale.parent", "modulename": "fennol.models.misc.misc", "qualname": "Scale.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Scale.name", "modulename": "fennol.models.misc.misc", "qualname": "Scale.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Scale.scope", "modulename": "fennol.models.misc.misc", "qualname": "Scale.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Add", "modulename": "fennol.models.misc.misc", "qualname": "Add", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Add.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Add.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ADD&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Add.keys", "modulename": "fennol.models.misc.misc", "qualname": "Add.keys", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[str]"}, {"fullname": "fennol.models.misc.misc.Add.output_key", "modulename": "fennol.models.misc.misc", "qualname": "Add.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Add.FID", "modulename": "fennol.models.misc.misc", "qualname": "Add.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ADD&#x27;"}, {"fullname": "fennol.models.misc.misc.Add.parent", "modulename": "fennol.models.misc.misc", "qualname": "Add.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Add.name", "modulename": "fennol.models.misc.misc", "qualname": "Add.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Add.scope", "modulename": "fennol.models.misc.misc", "qualname": "Add.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Multiply", "modulename": "fennol.models.misc.misc", "qualname": "Multiply", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Multiply.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Multiply.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">keys</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MULTIPLY&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Multiply.keys", "modulename": "fennol.models.misc.misc", "qualname": "Multiply.keys", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[str]"}, {"fullname": "fennol.models.misc.misc.Multiply.output_key", "modulename": "fennol.models.misc.misc", "qualname": "Multiply.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Multiply.FID", "modulename": "fennol.models.misc.misc", "qualname": "Multiply.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;MULTIPLY&#x27;"}, {"fullname": "fennol.models.misc.misc.Multiply.parent", "modulename": "fennol.models.misc.misc", "qualname": "Multiply.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Multiply.name", "modulename": "fennol.models.misc.misc", "qualname": "Multiply.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Multiply.scope", "modulename": "fennol.models.misc.misc", "qualname": "Multiply.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Transpose", "modulename": "fennol.models.misc.misc", "qualname": "Transpose", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Transpose.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">axes</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;TRANSPOSE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Transpose.key", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.Transpose.axes", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.axes", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.misc.Transpose.output_key", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Transpose.FID", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;TRANSPOSE&#x27;"}, {"fullname": "fennol.models.misc.misc.Transpose.parent", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Transpose.name", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Transpose.scope", "modulename": "fennol.models.misc.misc", "qualname": "Transpose.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Reshape", "modulename": "fennol.models.misc.misc", "qualname": "Reshape", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.Reshape.__init__", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;RESHAPE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.Reshape.key", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.misc.Reshape.shape", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.shape", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.misc.Reshape.output_key", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Reshape.FID", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;RESHAPE&#x27;"}, {"fullname": "fennol.models.misc.misc.Reshape.parent", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.Reshape.name", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.Reshape.scope", "modulename": "fennol.models.misc.misc", "qualname": "Reshape.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.__init__", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">],</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHEMICAL_CONSTANT&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.value", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, List[float], float, Dict]"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.output_key", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.trainable", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.FID", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CHEMICAL_CONSTANT&#x27;"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.parent", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.name", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.ChemicalConstant.scope", "modulename": "fennol.models.misc.misc", "qualname": "ChemicalConstant.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SwitchFunction", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.__init__", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">switch_start</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">switch_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;cosine&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SWITCH_FUNCTION&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.cutoff", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.cutoff", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.switch_start", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.switch_start", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.0"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.graph_key", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.output_key", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.switch_type", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.switch_type", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;cosine&#x27;"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.p", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.p", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.trainable", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.FID", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SWITCH_FUNCTION&#x27;"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.parent", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.name", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.misc.SwitchFunction.scope", "modulename": "fennol.models.misc.misc", "qualname": "SwitchFunction.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets", "modulename": "fennol.models.misc.nets", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet", "kind": "class", "doc": "<p>A fully connected neural network module.</p>\n\n<p>Parameters:\n    neurons (Sequence[int]): A sequence of integers representing the dimensions of the network.\n    activation (Union[Callable, str], optional): The activation function to use. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to use bias in the dense layers. Defaults to True.\n    input_key (Optional[str], optional): The key to use to access the input tensor. Defaults to None.\n    output_key (Optional[str], optional): The key to use to access the output tensor. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output tensor if its shape is (..., 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): The kernel initialization method to use. Defaults to nn.linear.default_kernel_init.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;NEURAL_NET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.neurons", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.activation", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.FID", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;NEURAL_NET&#x27;"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.parent", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.name", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.FullyConnectedNet.scope", "modulename": "fennol.models.misc.nets", "qualname": "FullyConnectedNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ResMLP", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP", "kind": "class", "doc": "<p>Residual neural network as defined in SpookyNet paper</p>\n\n<p>Parameters:\n    use_bias (bool): Whether to include bias in the linear layers. Default is True.\n    input_key (Optional[str]): Key to access the input data from a dictionary. If None, assumes inputs are not a dictionary. Default is None.\n    output_key (Optional[str]): Key to store the output data in the dictionary. If None, uses the name of the module. Default is None.\n    kernel_init (Union[str, Callable]): Initialization method for the kernel weights. Can be a string representing a built-in initializer or a custom initialization function. Default is scaled_orthogonal(mode=\"fan_avg\").\n    res_only (bool): Whether to only apply the residual connection without additional linear layers. Default is False.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.ResMLP.__init__", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">scaled_orthogonal</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">res_only</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;RES_MLP&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.ResMLP.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.ResMLP.input_key", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ResMLP.output_key", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ResMLP.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span>, </span><span class=\"param\"><span class=\"n\">shape</span>, </span><span class=\"param\">dtype=&lt;class &#x27;jax.numpy.float32&#x27;&gt;</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ResMLP.res_only", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.res_only", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.ResMLP.FID", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;RES_MLP&#x27;"}, {"fullname": "fennol.models.misc.nets.ResMLP.parent", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.ResMLP.name", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ResMLP.scope", "modulename": "fennol.models.misc.nets", "qualname": "ResMLP.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet", "kind": "class", "doc": "<p>A neural network with skip connections at each layer.</p>\n\n<p>Parameters:\n    dim (int): The dimension of the hidden layers.\n    output_dim (int): The dimension of the output layer.\n    nlayers (int): The number of layers in the network.\n    activation (Union[Callable, str]): The activation function to use. Can be a callable or a string representing the name of the activation function.\n    use_bias (bool): Whether to include bias terms in the linear layers.\n    input_key (Optional[str]): The key to access the input data from a dictionary, if the input is a dictionary.\n    output_key (Optional[str]): The key to store the output data in a dictionary, if the output is a dictionary.\n    squeeze (bool): Whether to squeeze the output if it has shape (..., 1).\n    kernel_init (Union[str, Callable]): The initializer for the linear layer weights. Can be a callable or a string representing the name of the initializer.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">output_dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">nlayers</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SKIP_NET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.dim", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.output_dim", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.output_dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.nlayers", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.nlayers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.activation", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.FID", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SKIP_NET&#x27;"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.parent", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.name", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.FullyResidualNet.scope", "modulename": "fennol.models.misc.nets", "qualname": "FullyResidualNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet", "kind": "class", "doc": "<p>Neural network for a sequence of inputs (in axis=-2) with a decay factor</p>\n\n<p>Parameters:\n    neurons (Sequence[int]): A sequence of integers representing the number of neurons in each layer.\n    activation (Union[Callable, str], optional): Activation function to use. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to include bias terms in the linear layers. Defaults to True.\n    input_key (Optional[str], optional): Key to access the input data if it is a dictionary. Defaults to None.\n    output_key (Optional[str], optional): Key to store the output data if it is a dictionary. Defaults to None.\n    decay (float, optional): Decay factor to scale each layer. Defaults to 0.01.\n    squeeze (bool, optional): Whether to squeeze the output if it has shape (..., 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): Initialization method for the linear layers. Defaults to nn.linear.default_kernel_init.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">decay</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.01</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;HIERARCHICAL_NET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.neurons", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.activation", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.decay", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.decay", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.01"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.FID", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;HIERARCHICAL_NET&#x27;"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.parent", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.name", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.HierarchicalNet.scope", "modulename": "fennol.models.misc.nets", "qualname": "HierarchicalNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet", "kind": "class", "doc": "<p>Chemical-species-specific neural network using precomputed species index.</p>\n\n<p>A neural network that applies a species-specific fully connected network to each atom embedding.\nA species index must be provided to filter the embeddings for each species and apply the corresponding network.\nThis index can be obtained using the SPECIES_INDEXER preprocessing module.</p>\n\n<p>Parameters:\n    output_dim (int): The dimension of the output of the fully connected networks. It is the same for all species.\n    hidden_neurons (Union[dict, Sequence[int]]): The hidden dimensions of the fully connected networks for each species.\n        If a dictionary is provided, it should map species names to dimensions.\n        If a sequence is provided, the same dimensions will be used for all species.\n    species_order (Sequence[str]): The species for which to build a network. Only required if neurons is not a dictionary.\n    activation (Callable, optional): The activation function to use in the fully connected networks. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to include bias terms in the fully connected networks. Defaults to True.\n    input_key (str, optional): The key in the input dictionary that corresponds to the embeddings of the atoms.\n        If None, the input is assumed to be a tuple (species,embeddings). Defaults to None.\n    species_index_key str: The key in the input dictionary that corresponds to the species index of the atoms.\n        This index can be obtained via the SPECIES_INDEXER preprocessing module. Defaults to \"species_index\".\n    output_key (str, optional): The key in the output dictionary that corresponds to the network's output.\n        If None, the output is returned directly. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output if it has shape (batch_size, 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): The kernel initialization method for the fully connected networks. Defaults to nn.linear.default_kernel_init.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">output_dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_neurons</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frozen_dict</span><span class=\"o\">.</span><span class=\"n\">FrozenDict</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">species_order</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">species_index_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;species_index&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SPECIES_INDEX_NET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.output_dim", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.output_dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.hidden_neurons", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.hidden_neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[dict, flax.core.frozen_dict.FrozenDict, Sequence[int]]"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.species_order", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.species_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[NoneType, str, Sequence[str]]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.activation", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.species_index_key", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.species_index_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;species_index&#x27;"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.FID", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SPECIES_INDEX_NET&#x27;"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.setup", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.setup", "kind": "function", "doc": "<p>Initializes a Module lazily (similar to a lazy <code>__init__</code>).</p>\n\n<p><code>setup</code> is called once lazily on a module instance when a module\nis bound, immediately before any other methods like <code>__call__</code> are\ninvoked, or before a <code>setup</code>-defined attribute on <code>self</code> is accessed.</p>\n\n<p>This can happen in three cases:</p>\n\n<ol>\n<li><p>Immediately when invoking <code>apply()</code>, <code>init()</code> or\n <code>init_and_output()</code>.</p></li>\n<li><p>Once the module is given a name by being assigned to an attribute of\n another module inside the other module's <code>setup</code> method\n (see <code>__setattr__()</code>)::</p>\n\n<pre><code>&gt;&gt;&gt; class MyModule(nn.Module):\n...   def setup(self):\n...     submodule = nn.Conv(...)\n\n...     # Accessing `submodule` attributes does not yet work here.\n\n...     # The following line invokes `self.__setattr__`, which gives\n...     # `submodule` the name \"conv1\".\n...     self.conv1 = submodule\n\n...     # Accessing `submodule` attributes or methods is now safe and\n...     # either causes setup() to be called once.\n</code></pre></li>\n<li><p>Once a module is constructed inside a method wrapped with\n <code>compact()</code>, immediately before another method is called or\n <code>setup</code> defined attribute is accessed.</p></li>\n</ol>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.parent", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.name", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.SpeciesIndexNet.scope", "modulename": "fennol.models.misc.nets", "qualname": "SpeciesIndexNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChemicalNet", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet", "kind": "class", "doc": "<p>optimized Chemical-species-specific neural network.</p>\n\n<p>A neural network that applies a fully connected network to each atom embedding in a chemical system and selects the output corresponding to the atom's species.\nThis is an optimized version of ChemicalNetHet that uses vmap to apply the networks to all atoms at once.\nThe optimization is allowed because all networks have the same shape.</p>\n\n<p>Parameters:\n    species_order (Sequence[str]): The species for which to build a network.\n    neurons (Sequence[int]): The dimensions of the fully connected networks.\n    activation (Callable, optional): The activation function to use in the fully connected networks. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to include bias terms in the fully connected networks. Defaults to True.\n    input_key (str, optional): The key in the input dictionary that corresponds to the embeddings of the atoms.\n        If None, the input is assumed to be a tuple (species,embeddings). Defaults to None.\n    output_key (str, optional): The key in the output dictionary that corresponds to the network's output.\n        If None, the output is returned directly. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output if it has shape (batch_size, 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): The kernel initialization method for the fully connected networks. Defaults to nn.linear.default_kernel_init.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">species_order</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHEMICAL_NET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.species_order", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.species_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, Sequence[str]]"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.neurons", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.activation", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.FID", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CHEMICAL_NET&#x27;"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.parent", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.name", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChemicalNet.scope", "modulename": "fennol.models.misc.nets", "qualname": "ChemicalNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.MOENet", "modulename": "fennol.models.misc.nets", "qualname": "MOENet", "kind": "class", "doc": "<p>Mixture of Experts neural network.</p>\n\n<p>This class represents a Mixture of Experts neural network. It takes in an input and applies a set of shape-sharing networks\nto the input based on a router. The outputs of the shape-sharing networks are then combined using weights computed by the router.</p>\n\n<p>Parameters:\n    neurons (Sequence[int]): A sequence of integers representing the number of neurons in each shape-sharing network.\n    num_networks (int): The number of shape-sharing networks to create.\n    activation (Union[Callable, str], optional): The activation function to use in the shape-sharing networks. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to include bias in the shape-sharing networks. Defaults to True.\n    input_key (Optional[str], optional): The key to access the input from the inputs dictionary. If None, the input is assumed to be the same as the router. Defaults to None.\n    output_key (Optional[str], optional): The key to store the output in the outputs dictionary. If None, the output is stored with the name of the MOENet instance. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output if it has a shape of (batch_size, 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): The kernel initialization function to use in the shape-sharing networks. Defaults to nn.linear.default_kernel_init.\n    router_key (Optional[str], optional): The key to access the router from the inputs dictionary. If None, the router is assumed to be the same as the input. Defaults to None.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.MOENet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">num_networks</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">router_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;MOE_NET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.MOENet.neurons", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.MOENet.num_networks", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.num_networks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.nets.MOENet.activation", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.MOENet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.MOENet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.MOENet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.MOENet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.MOENet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.MOENet.router_key", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.router_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.MOENet.FID", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;MOE_NET&#x27;"}, {"fullname": "fennol.models.misc.nets.MOENet.parent", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.MOENet.name", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.MOENet.scope", "modulename": "fennol.models.misc.nets", "qualname": "MOENet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChannelNet", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet", "kind": "class", "doc": "<p>Apply a neural network to each channel.</p>\n\n<p>Parameters:\n    neurons (Sequence[int]): A sequence of integers representing the number of neurons in each shape-sharing network.\n    num_networks (int): The number of shape-sharing networks to create.\n    activation (Union[Callable, str], optional): The activation function to use in the shape-sharing networks. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to include bias in the shape-sharing networks. Defaults to True.\n    input_key (Optional[str], optional): The key to access the input from the inputs dictionary. If None, the input is assumed to be the same as the router. Defaults to None.\n    output_key (Optional[str], optional): The key to store the output in the outputs dictionary. If None, the output is stored with the name of the MOENet instance. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output if it has a shape of (batch_size, 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): The kernel initialization function to use in the shape-sharing networks. Defaults to nn.linear.default_kernel_init.\n    router_key (Optional[str], optional): The key to access the router from the inputs dictionary. If None, the router is assumed to be the same as the input. Defaults to None.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.ChannelNet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">channel_axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHANNEL_NET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.ChannelNet.neurons", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.ChannelNet.activation", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ChannelNet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.ChannelNet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChannelNet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChannelNet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.ChannelNet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ChannelNet.channel_axis", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.channel_axis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "-2"}, {"fullname": "fennol.models.misc.nets.ChannelNet.FID", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CHANNEL_NET&#x27;"}, {"fullname": "fennol.models.misc.nets.ChannelNet.parent", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.ChannelNet.name", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ChannelNet.scope", "modulename": "fennol.models.misc.nets", "qualname": "ChannelNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron", "kind": "class", "doc": "<p>Gated Perceptron neural network.</p>\n\n<p>This class represents a Gated Perceptron neural network model. It applies a gating mechanism\nto the input data and performs linear transformation using a dense layer followed by an activation function.</p>\n\n<p>Parameters:\n    dim (int): The dimensionality of the output space.\n    use_bias (bool, optional): Whether to include a bias term in the dense layer. Defaults to True.\n    kernel_init (Union[str, Callable], optional): The initializer for the kernel weights of the dense layer.\n        It can be a string representing a predefined initializer or a custom initializer function.\n        Defaults to nn.linear.default_kernel_init.\n    activation (Union[Callable, str], optional): The activation function to be applied after the dense layer.\n        It can be a string representing a predefined activation function or a custom activation function.\n        Defaults to nn.silu.\n    input_key (Optional[str], optional): The key to access the input data if it is a dictionary.\n        If None, assumes the input data is not a dictionary. Defaults to None.\n    output_key (Optional[str], optional): The key to store the output data in the dictionary if input_key is not None.\n        If None, uses the name of the module as the output key. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output tensor if its last dimension is 1. Defaults to False.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.__init__", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;GATED_PERCEPTRON&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.dim", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.activation", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.input_key", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.output_key", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.FID", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;GATED_PERCEPTRON&#x27;"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.parent", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.name", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.GatedPerceptron.scope", "modulename": "fennol.models.misc.nets", "qualname": "GatedPerceptron.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZAcNet", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet", "kind": "class", "doc": "<p>A fully connected neural network module with affine Z-dependent adjustments of activations.</p>\n\n<p>Parameters:\n    neurons (Sequence[int]): A sequence of integers representing the dimensions of the network.\n    zmax (int): The maximum atomic number to consider.\n    activation (Union[Callable, str], optional): The activation function to use. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to use bias in the dense layers. Defaults to True.\n    input_key (Optional[str], optional): The key to use to access the input tensor. Defaults to None.\n    output_key (Optional[str], optional): The key to use to access the output tensor. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output tensor if its shape is (..., 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): The kernel initialization method to use. Defaults to nn.linear.default_kernel_init.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.ZAcNet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">zmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">86</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ZACNET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.ZAcNet.neurons", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.ZAcNet.zmax", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.zmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "86"}, {"fullname": "fennol.models.misc.nets.ZAcNet.activation", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ZAcNet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.ZAcNet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZAcNet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZAcNet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.ZAcNet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ZAcNet.FID", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ZACNET&#x27;"}, {"fullname": "fennol.models.misc.nets.ZAcNet.parent", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.ZAcNet.name", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZAcNet.scope", "modulename": "fennol.models.misc.nets", "qualname": "ZAcNet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZLoRANet", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet", "kind": "class", "doc": "<p>A fully connected neural network module with Z-dependent low-rank adaptation.</p>\n\n<p>Parameters:\n    neurons (Sequence[int]): A sequence of integers representing the dimensions of the network.\n    ranks (Sequence[int]): A sequence of integers representing the ranks of the low-rank adaptation matrices.\n    zmax (int): The maximum atomic number to consider.\n    activation (Union[Callable, str], optional): The activation function to use. Defaults to nn.silu.\n    use_bias (bool, optional): Whether to use bias in the dense layers. Defaults to True.\n    input_key (Optional[str], optional): The key to use to access the input tensor. Defaults to None.\n    output_key (Optional[str], optional): The key to use to access the output tensor. Defaults to None.\n    squeeze (bool, optional): Whether to squeeze the output tensor if its shape is (..., 1). Defaults to False.\n    kernel_init (Union[str, Callable], optional): The kernel initialization method to use. Defaults to nn.linear.default_kernel_init.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.__init__", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">neurons</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ranks</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">zmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">86</span>,</span><span class=\"param\">\t<span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">PjitFunction</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">silu</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">use_bias</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">input_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kernel_init</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">variance_scaling</span><span class=\"o\">.&lt;</span><span class=\"nb\">locals</span><span class=\"o\">&gt;.</span><span class=\"n\">init</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ZLORANET&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.neurons", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.neurons", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.ranks", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.ranks", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[int]"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.zmax", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.zmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "86"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.activation", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.activation", "kind": "function", "doc": "<p>SiLU (a.k.a. swish) activation function.</p>\n\n<p>Computes the element-wise function:</p>\n\n<p>$$\\mathrm{silu}(x) = x \\cdot \\mathrm{sigmoid}(x) = \\frac{x}{1 + e^{-x}}$$</p>\n\n<p><code>swish()</code> and <code>silu()</code> are both aliases for the same function.</p>\n\n<p>Args:\n  x : input array</p>\n\n<p>Returns:\n  An array.</p>\n\n<p>See also:\n  <code>sigmoid()</code></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">bool_</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">complex</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.use_bias", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.use_bias", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.input_key", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.input_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.output_key", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.squeeze", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.kernel_init", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.kernel_init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>,</span><span class=\"param\">\t<span class=\"n\">shape</span><span class=\"p\">:</span> <span class=\"n\">collections</span><span class=\"o\">.</span><span class=\"n\">abc</span><span class=\"o\">.</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">]]</span>,</span><span class=\"param\">\tdtype: Any = &lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">) -> <span class=\"n\">jax</span><span class=\"o\">.</span><span class=\"n\">Array</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.FID", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ZLORANET&#x27;"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.parent", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.name", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.nets.ZLoRANet.scope", "modulename": "fennol.models.misc.nets", "qualname": "ZLoRANet.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty", "modulename": "fennol.models.misc.uncertainty", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics", "kind": "class", "doc": "<p>Computes the mean and variance of an ensemble.</p>\n\n<p>Parameters:\n    key (str): The key to access the input data from the <code>inputs</code> dictionary.\n    axis (int, optional): The axis along which to compute the mean and variance. Defaults to -1.\n    shuffle_ensemble (bool, optional): Whether to shuffle the ensemble. Defaults to False.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.__init__", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">shuffle_ensemble</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ENSEMBLE_STAT&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.key", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.axis", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.axis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "-1"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.shuffle_ensemble", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.shuffle_ensemble", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.FID", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ENSEMBLE_STAT&#x27;"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.parent", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.name", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleStatistics.scope", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleStatistics.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift", "kind": "class", "doc": "<p>Shifts the mean of an ensemble to match a reference tensor.</p>\n\n<p>Parameters:\n    key (str): The key to access the input data from the <code>inputs</code> dictionary.\n    ref_key (str): The key to access the reference data from the <code>inputs</code> dictionary.\n    axis (int, optional): The axis along which to compute the mean and variance. Defaults to -1.\n    output_key (str, optional): The key to use for the output mean and variance in the <code>output</code> dictionary. \n        If not provided, the keys will be constructed by appending \"_mean\" and \"_var\" to the <code>key</code> parameter.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.__init__", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ref_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ENSEMBLE_SHIFT&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.key", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.ref_key", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.ref_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.axis", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.axis", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "-1"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.output_key", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.FID", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ENSEMBLE_SHIFT&#x27;"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.parent", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.name", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.EnsembleShift.scope", "modulename": "fennol.models.misc.uncertainty", "qualname": "EnsembleShift.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence", "kind": "class", "doc": "<p>Constrain the parameters of an evidential model</p>\n\n<p>References:</p>\n\n<ul>\n<li>Amini et al, Deep Evidential Regression, NeurIPS 2020 (<a href=\"https://arxiv.org/abs/1910.02600\">https://arxiv.org/abs/1910.02600</a>)</li>\n<li>Meinert et al, Multivariate Deep Evidential Regression, (<a href=\"https://arxiv.org/pdf/2104.06135.pdf\">https://arxiv.org/pdf/2104.06135.pdf</a>)</li>\n</ul>\n\n<p>Parameters:\n    key (str): The key to access the input data from the <code>inputs</code> dictionary.\n    output_key (str, optional): The key to use for the constrained paramters in the <code>output</code> dictionary. \n        If not provided, the self.key attribute will be used.\n    beta_scale (Union[str, float], optional): The scale of the beta parameter. Defaults to 1.0.\n    alpha_init (float, optional): The initial value of the alpha parameter. Defaults to 2.0.\n    nu_init (float, optional): The initial value of the nu parameter. Defaults to 1.0.\n    chemical_shift (Optional[float], optional): The chemical shift. Defaults to None.\n    trainable_beta (bool, optional): Whether the beta parameter is trainable. Defaults to False.\n    constant_beta (bool, optional): Whether the beta parameter is a constant. Defaults to False.\n    trainable_alpha (bool, optional): Whether the alpha parameter is trainable. Defaults to False.\n    constant_alpha (bool, optional): Whether the alpha parameter is a constant. Defaults to False.\n    trainable_nu (bool, optional): Whether the nu parameter is trainable. Defaults to False.\n    constant_nu (bool, optional): Whether the nu parameter is a constant. Defaults to False.\n    nualpha_coupling (Optional[float], optional): The coupling between nu and alpha. Defaults to None.\n    graph_key (Optional[str], optional): The key to access the graph data from the <code>inputs</code> dictionary. Defaults to None.\n    self_weight (float, optional): The weight of the self interaction in the switch convolution. Defaults to 10.0.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.__init__", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">beta_scale</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">alpha_init</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">nu_init</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">chemical_shift</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainable_beta</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">constant_beta</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">trainable_alpha</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">constant_alpha</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">trainable_nu</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">constant_nu</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">nualpha_coupling</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">self_weight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">10.0</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CONSTRAIN_EVIDENCE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.key", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.output_key", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.beta_scale", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.beta_scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, float]", "default_value": "1.0"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.alpha_init", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.alpha_init", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "2.0"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.nu_init", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.nu_init", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.0"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.chemical_shift", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.chemical_shift", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.trainable_beta", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.trainable_beta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.constant_beta", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.constant_beta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.trainable_alpha", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.trainable_alpha", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.constant_alpha", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.constant_alpha", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.trainable_nu", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.trainable_nu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.constant_nu", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.constant_nu", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.nualpha_coupling", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.nualpha_coupling", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.graph_key", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.self_weight", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.self_weight", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "10.0"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.FID", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CONSTRAIN_EVIDENCE&#x27;"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.parent", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.name", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.misc.uncertainty.ConstrainEvidence.scope", "modulename": "fennol.models.misc.uncertainty", "qualname": "ConstrainEvidence.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.modules", "modulename": "fennol.models.modules", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.modules.MODULES", "modulename": "fennol.models.modules", "qualname": "MODULES", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, flax.linen.module.Module]", "default_value": "{&#x27;CHANNEL_MIXING&#x27;: &lt;class &#x27;fennol.models.misc.e3.ChannelMixing&#x27;&gt;, &#x27;CHANNEL_MIXING_E3&#x27;: &lt;class &#x27;fennol.models.misc.e3.ChannelMixingE3&#x27;&gt;, &#x27;SPHERICAL_TO_CARTESIAN&#x27;: &lt;class &#x27;fennol.models.misc.e3.SphericalToCartesian&#x27;&gt;, &#x27;SPECIES_ENCODING&#x27;: &lt;class &#x27;fennol.models.misc.encodings.SpeciesEncoding&#x27;&gt;, &#x27;RADIAL_BASIS&#x27;: &lt;class &#x27;fennol.models.misc.encodings.RadialBasis&#x27;&gt;, &#x27;APPLY_SWITCH&#x27;: &lt;class &#x27;fennol.models.misc.misc.ApplySwitch&#x27;&gt;, &#x27;ATOM_TO_EDGE&#x27;: &lt;class &#x27;fennol.models.misc.misc.AtomToEdge&#x27;&gt;, &#x27;SCATTER_EDGES&#x27;: &lt;class &#x27;fennol.models.misc.misc.ScatterEdges&#x27;&gt;, &#x27;EDGE_CONCATENATE&#x27;: &lt;class &#x27;fennol.models.misc.misc.EdgeConcatenate&#x27;&gt;, &#x27;SCATTER_SYSTEM&#x27;: &lt;class &#x27;fennol.models.misc.misc.ScatterSystem&#x27;&gt;, &#x27;SUM_AXIS&#x27;: &lt;class &#x27;fennol.models.misc.misc.SumAxis&#x27;&gt;, &#x27;SPLIT&#x27;: &lt;class &#x27;fennol.models.misc.misc.Split&#x27;&gt;, &#x27;CONCATENATE&#x27;: &lt;class &#x27;fennol.models.misc.misc.Concatenate&#x27;&gt;, &#x27;ACTIVATION&#x27;: &lt;class &#x27;fennol.models.misc.misc.Activation&#x27;&gt;, &#x27;SCALE&#x27;: &lt;class &#x27;fennol.models.misc.misc.Scale&#x27;&gt;, &#x27;ADD&#x27;: &lt;class &#x27;fennol.models.misc.misc.Add&#x27;&gt;, &#x27;MULTIPLY&#x27;: &lt;class &#x27;fennol.models.misc.misc.Multiply&#x27;&gt;, &#x27;TRANSPOSE&#x27;: &lt;class &#x27;fennol.models.misc.misc.Transpose&#x27;&gt;, &#x27;RESHAPE&#x27;: &lt;class &#x27;fennol.models.misc.misc.Reshape&#x27;&gt;, &#x27;CHEMICAL_CONSTANT&#x27;: &lt;class &#x27;fennol.models.misc.misc.ChemicalConstant&#x27;&gt;, &#x27;SWITCH_FUNCTION&#x27;: &lt;class &#x27;fennol.models.misc.misc.SwitchFunction&#x27;&gt;, &#x27;NEURAL_NET&#x27;: &lt;class &#x27;fennol.models.misc.nets.FullyConnectedNet&#x27;&gt;, &#x27;RES_MLP&#x27;: &lt;class &#x27;fennol.models.misc.nets.ResMLP&#x27;&gt;, &#x27;SKIP_NET&#x27;: &lt;class &#x27;fennol.models.misc.nets.FullyResidualNet&#x27;&gt;, &#x27;HIERARCHICAL_NET&#x27;: &lt;class &#x27;fennol.models.misc.nets.HierarchicalNet&#x27;&gt;, &#x27;SPECIES_INDEX_NET&#x27;: &lt;class &#x27;fennol.models.misc.nets.SpeciesIndexNet&#x27;&gt;, &#x27;CHEMICAL_NET&#x27;: &lt;class &#x27;fennol.models.misc.nets.ChemicalNet&#x27;&gt;, &#x27;MOE_NET&#x27;: &lt;class &#x27;fennol.models.misc.nets.MOENet&#x27;&gt;, &#x27;CHANNEL_NET&#x27;: &lt;class &#x27;fennol.models.misc.nets.ChannelNet&#x27;&gt;, &#x27;GATED_PERCEPTRON&#x27;: &lt;class &#x27;fennol.models.misc.nets.GatedPerceptron&#x27;&gt;, &#x27;ZACNET&#x27;: &lt;class &#x27;fennol.models.misc.nets.ZAcNet&#x27;&gt;, &#x27;ZLORANET&#x27;: &lt;class &#x27;fennol.models.misc.nets.ZLoRANet&#x27;&gt;, &#x27;ENSEMBLE_STAT&#x27;: &lt;class &#x27;fennol.models.misc.uncertainty.EnsembleStatistics&#x27;&gt;, &#x27;ENSEMBLE_SHIFT&#x27;: &lt;class &#x27;fennol.models.misc.uncertainty.EnsembleShift&#x27;&gt;, &#x27;CONSTRAIN_EVIDENCE&#x27;: &lt;class &#x27;fennol.models.misc.uncertainty.ConstrainEvidence&#x27;&gt;, &#x27;CN_D4&#x27;: &lt;class &#x27;fennol.models.physics.bond.CND4&#x27;&gt;, &#x27;SUM_SWITCH&#x27;: &lt;class &#x27;fennol.models.physics.bond.SumSwitch&#x27;&gt;, &#x27;CN_SHIFT&#x27;: &lt;class &#x27;fennol.models.physics.bond.CNShift&#x27;&gt;, &#x27;CN_STORE&#x27;: &lt;class &#x27;fennol.models.physics.bond.CNStore&#x27;&gt;, &#x27;VDW_OQDO&#x27;: &lt;class &#x27;fennol.models.physics.dispersion.VdwOQDO&#x27;&gt;, &#x27;ELECTRIC_FIELD&#x27;: &lt;class &#x27;fennol.models.physics.electric_field.ElectricField&#x27;&gt;, &#x27;COULOMB&#x27;: &lt;class &#x27;fennol.models.physics.electrostatics.Coulomb&#x27;&gt;, &#x27;QEQ_D4&#x27;: &lt;class &#x27;fennol.models.physics.electrostatics.QeqD4&#x27;&gt;, &#x27;CHARGE_CORRECTION&#x27;: &lt;class &#x27;fennol.models.physics.electrostatics.ChargeCorrection&#x27;&gt;, &#x27;DISTRIBUTE_ELECTRONS&#x27;: &lt;class &#x27;fennol.models.physics.electrostatics.DistributeElectrons&#x27;&gt;, &#x27;POLARISATION&#x27;: &lt;class &#x27;fennol.models.physics.polarisation.Polarisation&#x27;&gt;, &#x27;REPULSION_ZBL&#x27;: &lt;class &#x27;fennol.models.physics.repulsion.RepulsionZBL&#x27;&gt;, &#x27;AIMNET&#x27;: &lt;class &#x27;fennol.models.embeddings.aimnet.AIMNet&#x27;&gt;, &#x27;ALLEGRO&#x27;: &lt;class &#x27;fennol.models.embeddings.allegro.AllegroEmbedding&#x27;&gt;, &#x27;ALLEGRO_E3NN&#x27;: &lt;class &#x27;fennol.models.embeddings.allegro.AllegroE3NNEmbedding&#x27;&gt;, &#x27;ANI_AEV&#x27;: &lt;class &#x27;fennol.models.embeddings.ani.ANIAEV&#x27;&gt;, &#x27;CAIMAN&#x27;: &lt;class &#x27;fennol.models.embeddings.caiman.CaimanEmbedding&#x27;&gt;, &#x27;CHGNET&#x27;: &lt;class &#x27;fennol.models.embeddings.chgnet.CHGNetEmbedding&#x27;&gt;, &#x27;CRATE&#x27;: &lt;class &#x27;fennol.models.embeddings.crate.CRATEmbedding&#x27;&gt;, &#x27;DEEPPOT&#x27;: &lt;class &#x27;fennol.models.embeddings.deeppot.DeepPotEmbedding&#x27;&gt;, &#x27;DEEPPOT_E3&#x27;: &lt;class &#x27;fennol.models.embeddings.deeppot.DeepPotE3Embedding&#x27;&gt;, &#x27;EEACSF&#x27;: &lt;class &#x27;fennol.models.embeddings.eeacsf.EEACSF&#x27;&gt;, &#x27;FOAM&#x27;: &lt;class &#x27;fennol.models.embeddings.foam.FOAMEmbedding&#x27;&gt;, &#x27;GAUSSIAN_MOMENTS&#x27;: &lt;class &#x27;fennol.models.embeddings.gaussian_moments.GaussianMomentsEmbedding&#x27;&gt;, &#x27;HIPNN&#x27;: &lt;class &#x27;fennol.models.embeddings.hipnn.HIPNNEmbedding&#x27;&gt;, &#x27;MINIMACE&#x27;: &lt;class &#x27;fennol.models.embeddings.minimace.MiniMaceEmbedding&#x27;&gt;, &#x27;NEWTONNET&#x27;: &lt;class &#x27;fennol.models.embeddings.newtonnet.NewtonNetEmbedding&#x27;&gt;, &#x27;PAINN&#x27;: &lt;class &#x27;fennol.models.embeddings.painn.PAINNEmbedding&#x27;&gt;, &#x27;SCHNET&#x27;: &lt;class &#x27;fennol.models.embeddings.schnet.SchNetEmbedding&#x27;&gt;, &#x27;SPOOKYNET&#x27;: &lt;class &#x27;fennol.models.embeddings.spookynet.SpookyNetEmbedding&#x27;&gt;}"}, {"fullname": "fennol.models.modules.available_fennix_modules", "modulename": "fennol.models.modules", "qualname": "available_fennix_modules", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.modules.register_fennix_module", "modulename": "fennol.models.modules", "qualname": "register_fennix_module", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module</span><span class=\"p\">:</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span>, </span><span class=\"param\"><span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.modules.register_fennix_modules", "modulename": "fennol.models.modules", "qualname": "register_fennix_modules", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">module</span>, </span><span class=\"param\"><span class=\"n\">recurs</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">max_recurs</span><span class=\"o\">=</span><span class=\"mi\">2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.modules.get_modules_documentation", "modulename": "fennol.models.modules", "qualname": "get_modules_documentation", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.modules.FENNIXModules", "modulename": "fennol.models.modules", "qualname": "FENNIXModules", "kind": "class", "doc": "<p>Sequential module that applies a sequence of FENNIX modules.</p>\n\n<p>Attributes:\n    layers (Sequence[Tuple[nn.Module, Dict]]): Sequence of tuples (module, parameters) to apply.</p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.modules.FENNIXModules.__init__", "modulename": "fennol.models.modules", "qualname": "FENNIXModules.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">layers</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.modules.FENNIXModules.layers", "modulename": "fennol.models.modules", "qualname": "FENNIXModules.layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[Tuple[flax.linen.module.Module, Dict]]"}, {"fullname": "fennol.models.modules.FENNIXModules.parent", "modulename": "fennol.models.modules", "qualname": "FENNIXModules.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.modules.FENNIXModules.name", "modulename": "fennol.models.modules", "qualname": "FENNIXModules.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.modules.FENNIXModules.scope", "modulename": "fennol.models.modules", "qualname": "FENNIXModules.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics", "modulename": "fennol.models.physics", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.physics.bond", "modulename": "fennol.models.physics.bond", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.physics.bond.CND4", "modulename": "fennol.models.physics.bond", "qualname": "CND4", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.bond.CND4.__init__", "modulename": "fennol.models.physics.bond", "qualname": "CND4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">k0</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">7.5</span>,</span><span class=\"param\">\t<span class=\"n\">k1</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">4.1</span>,</span><span class=\"param\">\t<span class=\"n\">k2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">19.09</span>,</span><span class=\"param\">\t<span class=\"n\">k3</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">254.56</span>,</span><span class=\"param\">\t<span class=\"n\">electronegativity_factor</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CN_D4&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.bond.CND4.graph_key", "modulename": "fennol.models.physics.bond", "qualname": "CND4.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.bond.CND4.output_key", "modulename": "fennol.models.physics.bond", "qualname": "CND4.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CND4.k0", "modulename": "fennol.models.physics.bond", "qualname": "CND4.k0", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "7.5"}, {"fullname": "fennol.models.physics.bond.CND4.k1", "modulename": "fennol.models.physics.bond", "qualname": "CND4.k1", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "4.1"}, {"fullname": "fennol.models.physics.bond.CND4.k2", "modulename": "fennol.models.physics.bond", "qualname": "CND4.k2", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "19.09"}, {"fullname": "fennol.models.physics.bond.CND4.k3", "modulename": "fennol.models.physics.bond", "qualname": "CND4.k3", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "254.56"}, {"fullname": "fennol.models.physics.bond.CND4.electronegativity_factor", "modulename": "fennol.models.physics.bond", "qualname": "CND4.electronegativity_factor", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.physics.bond.CND4.trainable", "modulename": "fennol.models.physics.bond", "qualname": "CND4.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.physics.bond.CND4.FID", "modulename": "fennol.models.physics.bond", "qualname": "CND4.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CN_D4&#x27;"}, {"fullname": "fennol.models.physics.bond.CND4.parent", "modulename": "fennol.models.physics.bond", "qualname": "CND4.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.bond.CND4.name", "modulename": "fennol.models.physics.bond", "qualname": "CND4.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CND4.scope", "modulename": "fennol.models.physics.bond", "qualname": "CND4.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.SumSwitch", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.bond.SumSwitch.__init__", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"nb\">pow</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;SUM_SWITCH&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.bond.SumSwitch.graph_key", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.bond.SumSwitch.output_key", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.SumSwitch.pow", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.pow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.0"}, {"fullname": "fennol.models.physics.bond.SumSwitch.trainable", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.physics.bond.SumSwitch.FID", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;SUM_SWITCH&#x27;"}, {"fullname": "fennol.models.physics.bond.SumSwitch.parent", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.bond.SumSwitch.name", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.SumSwitch.scope", "modulename": "fennol.models.physics.bond", "qualname": "SumSwitch.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CNShift", "modulename": "fennol.models.physics.bond", "qualname": "CNShift", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.bond.CNShift.__init__", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cn_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">kappa_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sqrt_shift</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-06</span>,</span><span class=\"param\">\t<span class=\"n\">ref_value</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">enforce_positive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">cn_pow</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CN_SHIFT&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.bond.CNShift.cn_key", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.cn_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.physics.bond.CNShift.output_key", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CNShift.kappa_key", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.kappa_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CNShift.sqrt_shift", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.sqrt_shift", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1e-06"}, {"fullname": "fennol.models.physics.bond.CNShift.ref_value", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.ref_value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Union[str, float]", "default_value": "1.0"}, {"fullname": "fennol.models.physics.bond.CNShift.enforce_positive", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.enforce_positive", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.physics.bond.CNShift.cn_pow", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.cn_pow", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.5"}, {"fullname": "fennol.models.physics.bond.CNShift.FID", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CN_SHIFT&#x27;"}, {"fullname": "fennol.models.physics.bond.CNShift.parent", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.bond.CNShift.name", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CNShift.scope", "modulename": "fennol.models.physics.bond", "qualname": "CNShift.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CNStore", "modulename": "fennol.models.physics.bond", "qualname": "CNStore", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.bond.CNStore.__init__", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cn_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">store_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">n_gaussians</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">4</span>,</span><span class=\"param\">\t<span class=\"n\">isolated_value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">init_scale_cn</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">5.0</span>,</span><span class=\"param\">\t<span class=\"n\">init_scale_values</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">beta</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">6.0</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">output_dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">squeeze</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CN_STORE&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.bond.CNStore.cn_key", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.cn_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.physics.bond.CNStore.output_key", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CNStore.store_size", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.store_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "10"}, {"fullname": "fennol.models.physics.bond.CNStore.n_gaussians", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.n_gaussians", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "fennol.models.physics.bond.CNStore.isolated_value", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.isolated_value", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.0"}, {"fullname": "fennol.models.physics.bond.CNStore.init_scale_cn", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.init_scale_cn", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "5.0"}, {"fullname": "fennol.models.physics.bond.CNStore.init_scale_values", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.init_scale_values", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.0"}, {"fullname": "fennol.models.physics.bond.CNStore.beta", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.beta", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "6.0"}, {"fullname": "fennol.models.physics.bond.CNStore.trainable", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.physics.bond.CNStore.output_dim", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.output_dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "1"}, {"fullname": "fennol.models.physics.bond.CNStore.squeeze", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.squeeze", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.physics.bond.CNStore.FID", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CN_STORE&#x27;"}, {"fullname": "fennol.models.physics.bond.CNStore.parent", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.bond.CNStore.name", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.bond.CNStore.scope", "modulename": "fennol.models.physics.bond", "qualname": "CNStore.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.dispersion", "modulename": "fennol.models.physics.dispersion", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.__init__", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">include_exchange</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ratiovol_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">energy_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">damped</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;VDW_OQDO&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.graph_key", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.include_exchange", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.include_exchange", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.ratiovol_key", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.ratiovol_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.energy_key", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.energy_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.damped", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.damped", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.FID", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;VDW_OQDO&#x27;"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.parent", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.name", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.dispersion.VdwOQDO.scope", "modulename": "fennol.models.physics.dispersion", "qualname": "VdwOQDO.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.electric_field", "modulename": "fennol.models.physics.electric_field", "kind": "module", "doc": "<p>Electric field model for FENNOL.</p>\n\n<p>Created by C. Cattin 2024</p>\n"}, {"fullname": "fennol.models.physics.electric_field.ElectricField", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField", "kind": "class", "doc": "<p>Electric field model for FENNOL.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the electric field model.</li>\n<li><strong>damping_param</strong> (float):\nDamping parameter for the electric field.</li>\n<li><strong>charges_key</strong> (str):\nKey of the charges in the input.</li>\n<li><strong>graph_key</strong> (str):\nKey of the graph in the input.</li>\n<li><strong>polarisability_key</strong> (str):\nKey of the polarisability in the input.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.__init__", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">damping_param</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">charges_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charges&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">polarisability_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;polarisability&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;ELECTRIC_FIELD&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.damping_param", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.damping_param", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.7"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.charges_key", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.charges_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;charges&#x27;"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.graph_key", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.polarisability_key", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.polarisability_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;polarisability&#x27;"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.FID", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;ELECTRIC_FIELD&#x27;"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.parent", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.name", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electric_field.ElectricField.scope", "modulename": "fennol.models.physics.electric_field", "qualname": "ElectricField.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics", "modulename": "fennol.models.physics.electrostatics", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.physics.electrostatics.prepare_reciprocal_space", "modulename": "fennol.models.physics.electrostatics", "qualname": "prepare_reciprocal_space", "kind": "function", "doc": "<p>Prepare variables for Ewald summation in reciprocal space</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">cells</span>, </span><span class=\"param\"><span class=\"n\">reciprocal_cells</span>, </span><span class=\"param\"><span class=\"n\">coordinates</span>, </span><span class=\"param\"><span class=\"n\">batch_index</span>, </span><span class=\"param\"><span class=\"n\">k_points</span>, </span><span class=\"param\"><span class=\"n\">bewald</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.physics.electrostatics.ewald_reciprocal", "modulename": "fennol.models.physics.electrostatics", "qualname": "ewald_reciprocal", "kind": "function", "doc": "<p>Compute Coulomb interactions in reciprocal space using Ewald summation</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">q</span>, </span><span class=\"param\"><span class=\"n\">batch_index</span>, </span><span class=\"param\"><span class=\"n\">k_points</span>, </span><span class=\"param\"><span class=\"n\">phiscale</span>, </span><span class=\"param\"><span class=\"n\">selfscale</span>, </span><span class=\"param\"><span class=\"n\">expfac</span>, </span><span class=\"param\"><span class=\"n\">ks</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.__init__", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">charges_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charges&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">energy_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">scale</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">charge_scale</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">damp_style</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">damp_params</span><span class=\"p\">:</span> <span class=\"n\">Dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">bscreen</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;COULOMB&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.graph_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.charges_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.charges_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;charges&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.energy_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.energy_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.scale", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.charge_scale", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.charge_scale", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.damp_style", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.damp_style", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.damp_params", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.damp_params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.bscreen", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.bscreen", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "-1.0"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.trainable", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.FID", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;COULOMB&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.parent", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.name", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.Coulomb.scope", "modulename": "fennol.models.physics.electrostatics", "qualname": "Coulomb.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.__init__", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">charges_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charges&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">energy_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">ridge</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chi_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c3_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c4_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">total_charge_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;total_charge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;QEQ_D4&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.graph_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.trainable", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.charges_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.charges_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;charges&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.energy_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.energy_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.ridge", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.ridge", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[float]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.chi_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.chi_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.c3_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.c3_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.c4_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.c4_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.total_charge_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.total_charge_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;total_charge&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.FID", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;QEQ_D4&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.parent", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.name", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.QeqD4.scope", "modulename": "fennol.models.physics.electrostatics", "qualname": "QeqD4.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.__init__", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charges&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">dq_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;delta_qtot&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ratioeta_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">cn_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">total_charge_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;total_charge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;CHARGE_CORRECTION&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.key", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;charges&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.output_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.dq_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.dq_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;delta_qtot&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.ratioeta_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.ratioeta_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.trainable", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.cn_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.cn_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.total_charge_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.total_charge_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;total_charge&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.FID", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;CHARGE_CORRECTION&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.parent", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.name", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.ChargeCorrection.scope", "modulename": "fennol.models.physics.electrostatics", "qualname": "ChargeCorrection.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.__init__", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charges&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">total_charge_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;total_charge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;DISTRIBUTE_ELECTRONS&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.embedding_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.output_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;charges&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.total_charge_key", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.total_charge_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;total_charge&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.FID", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;DISTRIBUTE_ELECTRONS&#x27;"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.parent", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.name", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.electrostatics.DistributeElectrons.scope", "modulename": "fennol.models.physics.electrostatics", "qualname": "DistributeElectrons.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.polarisation", "modulename": "fennol.models.physics.polarisation", "kind": "module", "doc": "<p>Polarisation model for FENNOL.</p>\n\n<p>Created by C. Cattin 2024</p>\n"}, {"fullname": "fennol.models.physics.polarisation.Polarisation", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation", "kind": "class", "doc": "<p>Polarisation model for FENNOL.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the polarisation model.</li>\n<li><strong>energy_key</strong> (str):\nKey of the energy in the input.</li>\n<li><strong>graph_key</strong> (str):\nKey of the graph in the input.</li>\n<li><strong>polarisability_key</strong> (str):\nKey of the polarisability in the input.</li>\n<li><strong>charges_key</strong> (str):\nKey of the charges in the input.</li>\n<li><strong>electric_field_key</strong> (str):\nKey of the electric field in the input.</li>\n<li><strong>induce_dipole_key</strong> (str):\nKey of the induced dipole in the input.</li>\n<li><strong>damping_param_mutual</strong> (float):\nDamping parameter for mutual polarisation.</li>\n<li><strong>damping_param_field</strong> (float):\nDamping parameter for the electric field.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.__init__", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">energy_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">polarisability_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;polarisability&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">charges_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;charges&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">electric_field_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;electric_field&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">induce_dipole_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;induce_dipole&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">damping_param_mutual</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.39</span>,</span><span class=\"param\">\t<span class=\"n\">damping_param_field</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.7</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;POLARISATION&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.energy_key", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.energy_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.graph_key", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.polarisability_key", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.polarisability_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;polarisability&#x27;"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.charges_key", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.charges_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;charges&#x27;"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.electric_field_key", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.electric_field_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;electric_field&#x27;"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.induce_dipole_key", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.induce_dipole_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;induce_dipole&#x27;"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.damping_param_mutual", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.damping_param_mutual", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.39"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.damping_param_field", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.damping_param_field", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "0.7"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.FID", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;POLARISATION&#x27;"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.parent", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.name", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.polarisation.Polarisation.scope", "modulename": "fennol.models.physics.polarisation", "qualname": "Polarisation.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.reax", "modulename": "fennol.models.physics.reax", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.physics.reax.ReaxBond", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.reax.ReaxBond.__init__", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">embedding_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">bo_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;bond_orders&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">hidden_dim</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">16</span>,</span><span class=\"param\">\t<span class=\"n\">species_order</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">initial_parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">terms</span><span class=\"p\">:</span> <span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.reax.ReaxBond.graph_key", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.reax.ReaxBond.output_key", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.reax.ReaxBond.embedding_key", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.embedding_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.reax.ReaxBond.bo_key", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.bo_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;bond_orders&#x27;"}, {"fullname": "fennol.models.physics.reax.ReaxBond.hidden_dim", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.hidden_dim", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "16"}, {"fullname": "fennol.models.physics.reax.ReaxBond.species_order", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.species_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[Sequence[str]]", "default_value": "None"}, {"fullname": "fennol.models.physics.reax.ReaxBond.initial_parameters", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.initial_parameters", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Dict[str, Any]"}, {"fullname": "fennol.models.physics.reax.ReaxBond.terms", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.terms", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Sequence[str]"}, {"fullname": "fennol.models.physics.reax.ReaxBond.parent", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.reax.ReaxBond.name", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.reax.ReaxBond.scope", "modulename": "fennol.models.physics.reax", "qualname": "ReaxBond.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.physics.repulsion", "modulename": "fennol.models.physics.repulsion", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.__init__", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">_graphs_properties</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">energy_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">trainable</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">FID</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;REPULSION_ZBL&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.graph_key", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.energy_key", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.energy_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.trainable", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.trainable", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "True"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.FID", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.FID", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;REPULSION_ZBL&#x27;"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.parent", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.name", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.physics.repulsion.RepulsionZBL.scope", "modulename": "fennol.models.physics.repulsion", "qualname": "RepulsionZBL.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.preprocessing", "modulename": "fennol.models.preprocessing", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.models.preprocessing.GraphGenerator", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator", "kind": "class", "doc": "<p>Generate a graph from a set of coordinates</p>\n\n<p>For now, we generate all pairs of atoms and filter based on cutoff.\nIf a <code>nblist_skin</code> is present in the state, we generate a second graph with a larger cutoff that includes all pairs within the cutoff+skin. This graph is then reused by the <code>update_skin</code> method to update the original graph without recomputing the full nblist.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cutoff</strong> (float):\nCutoff distance for the graph.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nKey of the graph in the outputs.</li>\n<li><strong>switch_params</strong> (dict, default={}):\nParameters for the switching function.</li>\n<li><strong>k_space</strong> (bool, default=False):\nGenerate k-space information for the graph.</li>\n<li><strong>kmax</strong> (int, default=30):\nMaximum number of k-points to consider.</li>\n<li><strong>kthr</strong> (float, default=1e-6):\nThreshold for k-point filtering.</li>\n<li><strong>mult_size</strong> (float, default=1.05):\nMultiplicative factor for resizing the nblist.</li>\n</ul>\n"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.__init__", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">switch_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">kmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">kthr</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-06</span>,</span><span class=\"param\">\t<span class=\"n\">k_space</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">mult_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.05</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.cutoff", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.cutoff", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.graph_key", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.switch_params", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.switch_params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.kmax", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.kmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "30"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.kthr", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.kthr", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1e-06"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.k_space", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.k_space", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.mult_size", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.mult_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.05"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.init", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.get_processor", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.get_processor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.get_graph_properties", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.get_graph_properties", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.check_reallocate", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.check_reallocate", "kind": "function", "doc": "<p>check for overflow and reallocate nblist if necessary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span>, </span><span class=\"param\"><span class=\"n\">parent_overflow</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.process", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.process", "kind": "function", "doc": "<p>build a nblist on accelerator with jax and precomputed shapes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphGenerator.update_skin", "modulename": "fennol.models.preprocessing", "qualname": "GraphGenerator.update_skin", "kind": "function", "doc": "<p>update the nblist without recomputing the full nblist</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphProcessor", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor", "kind": "class", "doc": "<p>Process a pre-generated graph</p>\n\n<p>The pre-generated graph should contain the following keys:</p>\n\n<ul>\n<li>edge_src: source indices of the edges</li>\n<li>edge_dst: destination indices of the edges</li>\n<li>pbcs_shifts: pbc shifts for the edges (only if <code>cells</code> are present in the inputs)</li>\n</ul>\n\n<p>This module is automatically added to a FENNIX model when a GraphGenerator is used.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cutoff</strong> (float):\nCutoff distance for the graph.</li>\n<li><strong>graph_key</strong> (str):\nKey of the graph in the inputs.</li>\n<li><strong>switch_params</strong> (dict, default={}):\nParameters for the switching function.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.preprocessing.GraphProcessor.__init__", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">switch_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.GraphProcessor.cutoff", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor.cutoff", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "fennol.models.preprocessing.GraphProcessor.graph_key", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.preprocessing.GraphProcessor.switch_params", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor.switch_params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.preprocessing.GraphProcessor.parent", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.preprocessing.GraphProcessor.name", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.GraphProcessor.scope", "modulename": "fennol.models.preprocessing", "qualname": "GraphProcessor.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.GraphFilter", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter", "kind": "class", "doc": "<p>Filter a graph based on a cutoff distance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cutoff</strong> (float):\nCutoff distance for the filtering.</li>\n<li><strong>parent_graph</strong> (str):\nKey of the parent graph in the inputs.</li>\n<li><strong>graph_key</strong> (str):\nKey of the filtered graph in the outputs.</li>\n<li><strong>remove_hydrogens</strong> (bool, default=False):\nRemove hydrogen atoms from the graph.</li>\n<li><strong>switch_params</strong> (dict, default={}):\nParameters for the switching function.</li>\n<li><strong>k_space</strong> (bool, default=False):\nGenerate k-space information for the graph.</li>\n<li><strong>kmax</strong> (int, default=30):\nMaximum number of k-points to consider.</li>\n<li><strong>kthr</strong> (float, default=1e-6):\nThreshold for k-point filtering.</li>\n<li><strong>mult_size</strong> (float, default=1.05):\nMultiplicative factor for resizing the nblist.</li>\n</ul>\n"}, {"fullname": "fennol.models.preprocessing.GraphFilter.__init__", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">parent_graph</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">remove_hydrogens</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">switch_params</span><span class=\"p\">:</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frozen_dict</span><span class=\"o\">.</span><span class=\"n\">FrozenDict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">k_space</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">kmax</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">30</span>,</span><span class=\"param\">\t<span class=\"n\">kthr</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1e-06</span>,</span><span class=\"param\">\t<span class=\"n\">mult_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.05</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.GraphFilter.cutoff", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.cutoff", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "fennol.models.preprocessing.GraphFilter.parent_graph", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.parent_graph", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.preprocessing.GraphFilter.graph_key", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.preprocessing.GraphFilter.remove_hydrogens", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.remove_hydrogens", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "False"}, {"fullname": "fennol.models.preprocessing.GraphFilter.switch_params", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.switch_params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": flax.core.frozen_dict.FrozenDict"}, {"fullname": "fennol.models.preprocessing.GraphFilter.k_space", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.k_space", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.preprocessing.GraphFilter.kmax", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.kmax", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "30"}, {"fullname": "fennol.models.preprocessing.GraphFilter.kthr", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.kthr", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1e-06"}, {"fullname": "fennol.models.preprocessing.GraphFilter.mult_size", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.mult_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.05"}, {"fullname": "fennol.models.preprocessing.GraphFilter.init", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphFilter.get_processor", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.get_processor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphFilter.get_graph_properties", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.get_graph_properties", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphFilter.check_reallocate", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.check_reallocate", "kind": "function", "doc": "<p>check for overflow and reallocate nblist if necessary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span>, </span><span class=\"param\"><span class=\"n\">parent_overflow</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphFilter.process", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.process", "kind": "function", "doc": "<p>filter a nblist on accelerator with jax and precomputed shapes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphFilter.update_skin", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilter.update_skin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor", "kind": "class", "doc": "<p>Filter processing for a pre-generated graph</p>\n\n<p>This module is automatically added to a FENNIX model when a GraphFilter is used.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cutoff</strong> (float):\nCutoff distance for the filtering.</li>\n<li><strong>graph_key</strong> (str):\nKey of the filtered graph in the inputs.</li>\n<li><strong>parent_graph</strong> (str):\nKey of the parent graph in the inputs.</li>\n<li><strong>switch_params</strong> (dict, default={}):\nParameters for the switching function.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.__init__", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">cutoff</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parent_graph</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">switch_params</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">factory</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.cutoff", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.cutoff", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.graph_key", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.parent_graph", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.parent_graph", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.switch_params", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.switch_params", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.parent", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.name", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.GraphFilterProcessor.scope", "modulename": "fennol.models.preprocessing", "qualname": "GraphFilterProcessor.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension", "kind": "class", "doc": "<p>Add angles list to a graph</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mult_size</strong> (float, default=1.05):\nMultiplicative factor for resizing the nblist.</li>\n<li><strong>add_neigh</strong> (int, default=5):\nAdditional neighbors to add to the nblist when resizing.</li>\n<li><strong>graph_key</strong> (str, default=\"graph\"):\nKey of the graph in the inputs.</li>\n</ul>\n"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.__init__", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mult_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.05</span>,</span><span class=\"param\">\t<span class=\"n\">add_neigh</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;graph&#39;</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.mult_size", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.mult_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.05"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.add_neigh", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.add_neigh", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "5"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.graph_key", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;graph&#x27;"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.init", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.get_processor", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.get_processor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.get_graph_properties", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.get_graph_properties", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.check_reallocate", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.check_reallocate", "kind": "function", "doc": "<p>check for overflow and reallocate nblist if necessary</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span>, </span><span class=\"param\"><span class=\"n\">parent_overflow</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.process", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.process", "kind": "function", "doc": "<p>build angle nblist on accelerator with jax and precomputed shapes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphAngularExtension.update_skin", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngularExtension.update_skin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.GraphAngleProcessor", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngleProcessor", "kind": "class", "doc": "<p>Process a pre-generated graph to compute angles</p>\n\n<p>This module is automatically added to a FENNIX model when a GraphAngularExtension is used.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>graph_key</strong> (str):\nKey of the graph in the inputs.</li>\n</ul>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.preprocessing.GraphAngleProcessor.__init__", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngleProcessor.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">graph_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.GraphAngleProcessor.graph_key", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngleProcessor.graph_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str"}, {"fullname": "fennol.models.preprocessing.GraphAngleProcessor.parent", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngleProcessor.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.preprocessing.GraphAngleProcessor.name", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngleProcessor.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.GraphAngleProcessor.scope", "modulename": "fennol.models.preprocessing", "qualname": "GraphAngleProcessor.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer", "kind": "class", "doc": "<p>Build an index that splits atomic arrays by species.</p>\n\n<p>If <code>species_order</code> is specified, the output will be a dense array with size (len(species_order), max_size) that can directly index atomic arrays.\nIf <code>species_order</code> is None, the output will be a dictionary with species as keys and an index to filter atomic arrays for that species as values.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>output_key</strong> (str, default=\"species_index\"):\nKey for the output dictionary.</li>\n<li><strong>species_order</strong> (str, default=None):\nComma separated list of species in the order they should be indexed.</li>\n</ul>\n"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.__init__", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">output_key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;species_index&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">species_order</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">add_atoms</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.output_key", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.output_key", "kind": "variable", "doc": "<p></p>\n", "annotation": ": str", "default_value": "&#x27;species_index&#x27;"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.species_order", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.species_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.add_atoms", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.add_atoms", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "0"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.init", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.check_reallocate", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.check_reallocate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span>, </span><span class=\"param\"><span class=\"n\">parent_overflow</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.process", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.process", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.SpeciesIndexer.update_skin", "modulename": "fennol.models.preprocessing", "qualname": "SpeciesIndexer.update_skin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.AtomPadding", "modulename": "fennol.models.preprocessing", "qualname": "AtomPadding", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "fennol.models.preprocessing.AtomPadding.__init__", "modulename": "fennol.models.preprocessing", "qualname": "AtomPadding.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mult_size</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">1.2</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.AtomPadding.mult_size", "modulename": "fennol.models.preprocessing", "qualname": "AtomPadding.mult_size", "kind": "variable", "doc": "<p></p>\n", "annotation": ": float", "default_value": "1.2"}, {"fullname": "fennol.models.preprocessing.AtomPadding.init", "modulename": "fennol.models.preprocessing", "qualname": "AtomPadding.init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.atom_unpadding", "modulename": "fennol.models.preprocessing", "qualname": "atom_unpadding", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.check_input", "modulename": "fennol.models.preprocessing", "qualname": "check_input", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.convert_to_jax", "modulename": "fennol.models.preprocessing", "qualname": "convert_to_jax", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.JaxConverter", "modulename": "fennol.models.preprocessing", "qualname": "JaxConverter", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.models.preprocessing.JaxConverter.__init__", "modulename": "fennol.models.preprocessing", "qualname": "JaxConverter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.JaxConverter.parent", "modulename": "fennol.models.preprocessing", "qualname": "JaxConverter.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.models.preprocessing.JaxConverter.name", "modulename": "fennol.models.preprocessing", "qualname": "JaxConverter.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.JaxConverter.scope", "modulename": "fennol.models.preprocessing", "qualname": "JaxConverter.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.__init__", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">layers</span><span class=\"p\">:</span> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span>,</span><span class=\"param\">\t<span class=\"n\">use_atom_padding</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">atom_padder</span><span class=\"p\">:</span> <span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">preprocessing</span><span class=\"o\">.</span><span class=\"n\">AtomPadding</span> <span class=\"o\">=</span> <span class=\"n\">AtomPadding</span><span class=\"p\">(</span><span class=\"n\">mult_size</span><span class=\"o\">=</span><span class=\"mf\">1.2</span><span class=\"p\">)</span></span>)</span>"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.layers", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.layers", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Tuple[Callable[..., Dict[str, Any]]]"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.use_atom_padding", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.use_atom_padding", "kind": "variable", "doc": "<p></p>\n", "annotation": ": bool", "default_value": "False"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.atom_padder", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.atom_padder", "kind": "variable", "doc": "<p></p>\n", "annotation": ": fennol.models.preprocessing.AtomPadding", "default_value": "AtomPadding(mult_size=1.2)"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.check_reallocate", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.check_reallocate", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.process", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.process", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">state</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.update_skin", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.update_skin", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.init", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.init", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.init_with_output", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.init_with_output", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inputs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.get_processors", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.get_processors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">return_list</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.PreprocessingChain.get_graphs_properties", "modulename": "fennol.models.preprocessing", "qualname": "PreprocessingChain.get_graphs_properties", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.models.preprocessing.PREPROCESSING", "modulename": "fennol.models.preprocessing", "qualname": "PREPROCESSING", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;GRAPH&#x27;: &lt;class &#x27;fennol.models.preprocessing.GraphGenerator&#x27;&gt;, &#x27;GRAPH_FILTER&#x27;: &lt;class &#x27;fennol.models.preprocessing.GraphFilter&#x27;&gt;, &#x27;GRAPH_ANGULAR_EXTENSION&#x27;: &lt;class &#x27;fennol.models.preprocessing.GraphAngularExtension&#x27;&gt;, &#x27;SPECIES_INDEXER&#x27;: &lt;class &#x27;fennol.models.preprocessing.SpeciesIndexer&#x27;&gt;}"}, {"fullname": "fennol.training", "modulename": "fennol.training", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases", "modulename": "fennol.training.databases", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.adapt_array", "modulename": "fennol.training.databases", "qualname": "adapt_array", "kind": "function", "doc": "<p><a href=\"http://stackoverflow.com/a/31312102/190597\">http://stackoverflow.com/a/31312102/190597</a> (SoulNibbler)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.databases.convert_array", "modulename": "fennol.training.databases", "qualname": "convert_array", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.databases.DBDataset", "modulename": "fennol.training.databases", "qualname": "DBDataset", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.DBDataset.__init__", "modulename": "fennol.training.databases", "qualname": "DBDataset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dbfile</span>, </span><span class=\"param\"><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s1\">&#39;training&#39;</span>, </span><span class=\"param\"><span class=\"n\">select_keys</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.training.databases.DBDataset.con", "modulename": "fennol.training.databases", "qualname": "DBDataset.con", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.DBDataset.cur", "modulename": "fennol.training.databases", "qualname": "DBDataset.cur", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.DBDataset.table", "modulename": "fennol.training.databases", "qualname": "DBDataset.table", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.DBDataset.keys", "modulename": "fennol.training.databases", "qualname": "DBDataset.keys", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.DBDataset.N", "modulename": "fennol.training.databases", "qualname": "DBDataset.N", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.H5Dataset", "modulename": "fennol.training.databases", "qualname": "H5Dataset", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.H5Dataset.__init__", "modulename": "fennol.training.databases", "qualname": "H5Dataset.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">h5file</span>, </span><span class=\"param\"><span class=\"n\">table</span><span class=\"o\">=</span><span class=\"s1\">&#39;training&#39;</span></span>)</span>"}, {"fullname": "fennol.training.databases.H5Dataset.h5file", "modulename": "fennol.training.databases", "qualname": "H5Dataset.h5file", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.H5Dataset.table", "modulename": "fennol.training.databases", "qualname": "H5Dataset.table", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.H5Dataset.f", "modulename": "fennol.training.databases", "qualname": "H5Dataset.f", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.H5Dataset.dataset", "modulename": "fennol.training.databases", "qualname": "H5Dataset.dataset", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.H5Dataset.N", "modulename": "fennol.training.databases", "qualname": "H5Dataset.N", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.databases.H5Dataset.keys", "modulename": "fennol.training.databases", "qualname": "H5Dataset.keys", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.io", "modulename": "fennol.training.io", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.training.io.load_configuration", "modulename": "fennol.training.io", "qualname": "load_configuration", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">config_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.load_dataset", "modulename": "fennol.training.io", "qualname": "load_dataset", "kind": "function", "doc": "<p>Load a dataset from a pickle file and return two iterators for training and validation batches.</p>\n\n<p>Args:\n    training_parameters (dict): A dictionary with the following keys:\n        - 'dspath': str. Path to the pickle file containing the dataset.\n        - 'batch_size': int. Number of samples per batch.\n    rename_refs (list, optional): A list of strings with the names of the reference properties to rename.\n        Default is an empty list.</p>\n\n<p>Returns:\n    tuple: A tuple of two infinite iterators, one for training batches and one for validation batches.\n        For each element in the batch, we expect a \"species\" key with the atomic numbers of the atoms in the system. Arrays are concatenated along the first axis and the following keys are added to distinguish between the systems:\n        - 'natoms': np.ndarray. Array with the number of atoms in each system.\n        - 'batch_index': np.ndarray. Array with the index of the system to which each atom\n        if the keys \"forces\", \"total_energy\", \"atomic_energies\" or any of the elements in rename_refs are present, the keys are renamed by prepending \"true_\" to the key name.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">training_parameters</span>, </span><span class=\"param\"><span class=\"n\">rename_refs</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">infinite_iterator</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.load_model", "modulename": "fennol.training.io", "qualname": "load_model", "kind": "function", "doc": "<p>Load a FENNIX model from a file or create a new one.</p>\n\n<p>Args:\n    parameters (dict): A dictionary of parameters for the model.\n    model_file (str, optional): The path to a saved model file to load.</p>\n\n<p>Returns:\n    FENNIX: A FENNIX model object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">model_file</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rng_key</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">fennix</span><span class=\"o\">.</span><span class=\"n\">FENNIX</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.copy_parameters", "modulename": "fennol.training.io", "qualname": "copy_parameters", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">variables</span>, </span><span class=\"param\"><span class=\"n\">variables_ref</span>, </span><span class=\"param\"><span class=\"n\">params</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.TeeLogger", "modulename": "fennol.training.io", "qualname": "TeeLogger", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "fennol.training.io.TeeLogger.__init__", "modulename": "fennol.training.io", "qualname": "TeeLogger.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span></span>)</span>"}, {"fullname": "fennol.training.io.TeeLogger.file", "modulename": "fennol.training.io", "qualname": "TeeLogger.file", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.io.TeeLogger.stdout", "modulename": "fennol.training.io", "qualname": "TeeLogger.stdout", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.training.io.TeeLogger.write", "modulename": "fennol.training.io", "qualname": "TeeLogger.write", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.TeeLogger.close", "modulename": "fennol.training.io", "qualname": "TeeLogger.close", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.TeeLogger.flush", "modulename": "fennol.training.io", "qualname": "TeeLogger.flush", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.TeeLogger.bind_stdout", "modulename": "fennol.training.io", "qualname": "TeeLogger.bind_stdout", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.io.TeeLogger.unbind_stdout", "modulename": "fennol.training.io", "qualname": "TeeLogger.unbind_stdout", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.training", "modulename": "fennol.training.training", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.training.training.main", "modulename": "fennol.training.training", "qualname": "main", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.training.train", "modulename": "fennol.training.training", "qualname": "train", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">rng_key</span>,</span><span class=\"param\">\t<span class=\"n\">parameters</span>,</span><span class=\"param\">\t<span class=\"n\">model_file</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stage</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">output_directory</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.utils", "modulename": "fennol.training.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.training.utils.get_training_parameters", "modulename": "fennol.training.utils", "qualname": "get_training_parameters", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">stage</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"o\">-</span><span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.utils.get_loss_definition", "modulename": "fennol.training.utils", "qualname": "get_loss_definition", "kind": "function", "doc": "<p>Returns the loss definition and a list of renamed references.</p>\n\n<p>Args:\n    training_parameters (dict): A dictionary containing training parameters.</p>\n\n<p>Returns:\n    tuple: A tuple containing:\n        - loss_definition (dict): A dictionary containing the loss definition.\n        - rename_refs (list): A list of renamed references.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">training_parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">manual_renames</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.utils.get_optimizer", "modulename": "fennol.training.utils", "qualname": "get_optimizer", "kind": "function", "doc": "<p>Returns an optax.GradientTransformation object that can be used to optimize the model parameters.</p>\n\n<p>Args:</p>\n\n<ul>\n<li>training_parameters: A dictionary containing the training parameters.</li>\n<li>variables: A  pytree containing the model parameters.</li>\n<li>initial_lr: The initial learning rate.</li>\n</ul>\n\n<p>Returns:</p>\n\n<ul>\n<li>An optax.GradientTransformation object that can be used to optimize the model parameters.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">training_parameters</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">any</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">variables</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">initial_lr</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"n\">optax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">GradientTransformation</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.utils.get_train_step_function", "modulename": "fennol.training.utils", "qualname": "get_train_step_function", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loss_definition</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">fennix</span><span class=\"o\">.</span><span class=\"n\">FENNIX</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">optimizer</span><span class=\"p\">:</span> <span class=\"n\">optax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">GradientTransformation</span>,</span><span class=\"param\">\t<span class=\"n\">ema</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">optax</span><span class=\"o\">.</span><span class=\"n\">_src</span><span class=\"o\">.</span><span class=\"n\">base</span><span class=\"o\">.</span><span class=\"n\">GradientTransformation</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">model_ref</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">fennix</span><span class=\"o\">.</span><span class=\"n\">FENNIX</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">jit</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.training.utils.get_validation_function", "modulename": "fennol.training.utils", "qualname": "get_validation_function", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">loss_definition</span><span class=\"p\">:</span> <span class=\"n\">Dict</span>,</span><span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">fennix</span><span class=\"o\">.</span><span class=\"n\">FENNIX</span>,</span><span class=\"param\">\t<span class=\"n\">evaluate</span><span class=\"p\">:</span> <span class=\"n\">Callable</span>,</span><span class=\"param\">\t<span class=\"n\">model_ref</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">fennol</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">fennix</span><span class=\"o\">.</span><span class=\"n\">FENNIX</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_targets</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">jit</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils", "modulename": "fennol.utils", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.minmaxone", "modulename": "fennol.utils", "qualname": "minmaxone", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.minmaxone_jax", "modulename": "fennol.utils", "qualname": "minmaxone_jax", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.mask_filter_1d", "modulename": "fennol.utils", "qualname": "mask_filter_1d", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mask</span>, </span><span class=\"param\"><span class=\"n\">max_size</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values_fill</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.deep_update", "modulename": "fennol.utils", "qualname": "deep_update", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">mapping</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">updating_mappings</span><span class=\"p\">:</span> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.Counter", "modulename": "fennol.utils", "qualname": "Counter", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.__init__", "modulename": "fennol.utils", "qualname": "Counter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nseg</span>, </span><span class=\"param\"><span class=\"n\">startsave</span><span class=\"o\">=</span><span class=\"mi\">1</span></span>)</span>"}, {"fullname": "fennol.utils.Counter.i", "modulename": "fennol.utils", "qualname": "Counter.i", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.i_avg", "modulename": "fennol.utils", "qualname": "Counter.i_avg", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.nseg", "modulename": "fennol.utils", "qualname": "Counter.nseg", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.startsave", "modulename": "fennol.utils", "qualname": "Counter.startsave", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.count", "modulename": "fennol.utils", "qualname": "Counter.count", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.count_avg", "modulename": "fennol.utils", "qualname": "Counter.count_avg", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.nsample", "modulename": "fennol.utils", "qualname": "Counter.nsample", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.is_reset_step", "modulename": "fennol.utils", "qualname": "Counter.is_reset_step", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.Counter.reset_avg", "modulename": "fennol.utils", "qualname": "Counter.reset_avg", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.Counter.reset_all", "modulename": "fennol.utils", "qualname": "Counter.reset_all", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.Counter.increment", "modulename": "fennol.utils", "qualname": "Counter.increment", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations", "modulename": "fennol.utils.activations", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.activations.TrainableSiLU", "modulename": "fennol.utils.activations", "qualname": "TrainableSiLU", "kind": "class", "doc": "<p></p>\n", "bases": "flax.linen.module.Module"}, {"fullname": "fennol.utils.activations.TrainableSiLU.__init__", "modulename": "fennol.utils.activations", "qualname": "TrainableSiLU.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">parent</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">],</span> <span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">scope</span><span class=\"o\">.</span><span class=\"n\">Scope</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span><span class=\"p\">],</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">flax</span><span class=\"o\">.</span><span class=\"n\">linen</span><span class=\"o\">.</span><span class=\"n\">module</span><span class=\"o\">.</span><span class=\"n\">_Sentinel</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, {"fullname": "fennol.utils.activations.TrainableSiLU.parent", "modulename": "fennol.utils.activations", "qualname": "TrainableSiLU.parent", "kind": "variable", "doc": "<p>Wraps parent module references in weak refs.</p>\n\n<p>This prevents reference cycles from forming via parent links which can lead\nto accidental OOMs in eager mode due to slow garbage collection as well as\nspurious tracer leaks during jit compilation.</p>\n\n<p>Note: \"descriptors\" are the underlying python mechanism for implementing\ndynamic @property decorators.  We need to use a raw descriptor instead of the\nmore common decorator in order to force that the appropriate getter/setter\nlogic applies in subclasses even after various dataclass transforms.</p>\n", "annotation": ": Union[Type[flax.linen.module.Module], flax.core.scope.Scope, Type[flax.linen.module._Sentinel], NoneType]"}, {"fullname": "fennol.utils.activations.TrainableSiLU.name", "modulename": "fennol.utils.activations", "qualname": "TrainableSiLU.name", "kind": "variable", "doc": "<p></p>\n", "annotation": ": Optional[str]", "default_value": "None"}, {"fullname": "fennol.utils.activations.TrainableSiLU.scope", "modulename": "fennol.utils.activations", "qualname": "TrainableSiLU.scope", "kind": "variable", "doc": "<p></p>\n", "default_value": "None"}, {"fullname": "fennol.utils.activations.aptx", "modulename": "fennol.utils.activations", "qualname": "aptx", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.leaky_celu", "modulename": "fennol.utils.activations", "qualname": "leaky_celu", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.tssr", "modulename": "fennol.utils.activations", "qualname": "tssr", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.tssr2", "modulename": "fennol.utils.activations", "qualname": "tssr2", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.tssr3", "modulename": "fennol.utils.activations", "qualname": "tssr3", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.pow", "modulename": "fennol.utils.activations", "qualname": "pow", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.ssp", "modulename": "fennol.utils.activations", "qualname": "ssp", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.smooth_floor", "modulename": "fennol.utils.activations", "qualname": "smooth_floor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">0.99</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.smooth_round", "modulename": "fennol.utils.activations", "qualname": "smooth_round", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">eps</span><span class=\"o\">=</span><span class=\"mf\">0.99</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.chain", "modulename": "fennol.utils.activations", "qualname": "chain", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">activations</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.activations.activation_from_str", "modulename": "fennol.utils.activations", "qualname": "activation_from_str", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">activation</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Callable</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.atomic_units", "modulename": "fennol.utils.atomic_units", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.EV", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.EV", "kind": "variable", "doc": "<p></p>\n", "default_value": "27.211386024367243"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.KCALPERMOL", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.KCALPERMOL", "kind": "variable", "doc": "<p></p>\n", "default_value": "627.5096080305927"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.KJPERMOL", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.KJPERMOL", "kind": "variable", "doc": "<p></p>\n", "default_value": "2625.5002"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.BOHR", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.BOHR", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.52917721"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.MPROT", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.MPROT", "kind": "variable", "doc": "<p></p>\n", "default_value": "1836.1526734252586"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.HBAR", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.HBAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.0"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.FS", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.FS", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.024188843"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.PS", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.PS", "kind": "variable", "doc": "<p></p>\n", "default_value": "2.4188843000000002e-05"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.KELVIN", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.KELVIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "315774.0"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.THZ", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.THZ", "kind": "variable", "doc": "<p></p>\n", "default_value": "41341.37378956075"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.NNEWTON", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.NNEWTON", "kind": "variable", "doc": "<p></p>\n", "default_value": "82.387"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.CM1", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.CM1", "kind": "variable", "doc": "<p></p>\n", "default_value": "219471.52"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.GMOL_AFS", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.GMOL_AFS", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.01191453911003844"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.KBAR", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.KBAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "294210.2648438959"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.ATM", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.ATM", "kind": "variable", "doc": "<p></p>\n", "default_value": "290362955.68112105"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.GPA", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.GPA", "kind": "variable", "doc": "<p></p>\n", "default_value": "29421.026484389593"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.DEBYE", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.DEBYE", "kind": "variable", "doc": "<p></p>\n", "default_value": "2.541746"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.FSC", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.FSC", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0072973525692838015"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.MOL", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.MOL", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.02214129e+23"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.KCAL", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.KCAL", "kind": "variable", "doc": "<p></p>\n", "default_value": "3.778951520392748e+26"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.KJ", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.KJ", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.5811133161323258e+27"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.mapping", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.mapping", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;1&#x27;: 1.0, &#x27;AU&#x27;: 1.0, &#x27;HA&#x27;: 1.0, &#x27;EV&#x27;: 27.211386024367243, &#x27;MEV&#x27;: 27211.386024367242, &#x27;KCALPERMOL&#x27;: 627.5096080305927, &#x27;KJPERMOL&#x27;: 2625.5002, &#x27;ANGSTROM&#x27;: 0.52917721, &#x27;BOHR&#x27;: 1.8897261278504418, &#x27;AMU&#x27;: 0.0005446170214890387, &#x27;FEMTOSECONDS&#x27;: 0.024188843, &#x27;FS&#x27;: 0.024188843, &#x27;PICOSECONDS&#x27;: 2.4188843000000002e-05, &#x27;PS&#x27;: 2.4188843000000002e-05, &#x27;KELVIN&#x27;: 315774.0, &#x27;K&#x27;: 315774.0, &#x27;THZ&#x27;: 41341.37378956075, &#x27;TRADHZ&#x27;: 6579.683992818314, &#x27;CM-1&#x27;: 219471.52, &#x27;CM1&#x27;: 219471.52, &#x27;GMOLAFS&#x27;: 0.01191453911003844, &#x27;KBAR&#x27;: 294210.2648438959, &#x27;ATM&#x27;: 290362955.68112105, &#x27;GPA&#x27;: 29421.026484389593, &#x27;DEBYE&#x27;: 2.541746, &#x27;FSC&#x27;: 0.0072973525692838015, &#x27;MOL&#x27;: 6.02214129e+23, &#x27;MOLE&#x27;: 6.02214129e+23, &#x27;KCAL&#x27;: 3.778951520392748e+26, &#x27;KJ&#x27;: 1.5811133161323258e+27}"}, {"fullname": "fennol.utils.atomic_units.AtomicUnits.get_multiplier", "modulename": "fennol.utils.atomic_units", "qualname": "AtomicUnits.get_multiplier", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unit_string</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.deconvolution", "modulename": "fennol.utils.deconvolution", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.deconvolution.kernel_lorentz", "modulename": "fennol.utils.deconvolution", "qualname": "kernel_lorentz", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">w</span>, </span><span class=\"param\"><span class=\"n\">w0</span>, </span><span class=\"param\"><span class=\"n\">gamma</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.deconvolution.kernel_lorentz_pot", "modulename": "fennol.utils.deconvolution", "qualname": "kernel_lorentz_pot", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">w</span>, </span><span class=\"param\"><span class=\"n\">w0</span>, </span><span class=\"param\"><span class=\"n\">gamma</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.deconvolution.deconvolute_spectrum", "modulename": "fennol.utils.deconvolution", "qualname": "deconvolute_spectrum", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">s_in</span>,</span><span class=\"param\">\t<span class=\"n\">omega</span>,</span><span class=\"param\">\t<span class=\"n\">gamma</span>,</span><span class=\"param\">\t<span class=\"n\">niteration</span><span class=\"o\">=</span><span class=\"mi\">10</span>,</span><span class=\"param\">\t<span class=\"n\">kernel</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">kernel_lorentz</span><span class=\"o\">&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">trans</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">symmetrize</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">thr</span><span class=\"o\">=</span><span class=\"mf\">1e-10</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">K_D</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.initializers", "modulename": "fennol.utils.initializers", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.initializers.scaled_orthogonal", "modulename": "fennol.utils.initializers", "qualname": "scaled_orthogonal", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">scale</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;fan_avg&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">in_axis</span><span class=\"o\">=-</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">out_axis</span><span class=\"o\">=-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\tdtype=&lt;class &#x27;jax.numpy.float64&#x27;&gt;</span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.initializers.initializer_from_str", "modulename": "fennol.utils.initializers", "qualname": "initializer_from_str", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.input_parser", "modulename": "fennol.utils.input_parser", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.input_parser.InputFile", "modulename": "fennol.utils.input_parser", "qualname": "InputFile", "kind": "class", "doc": "<p></p>\n", "bases": "builtins.dict"}, {"fullname": "fennol.utils.input_parser.InputFile.case_insensitive", "modulename": "fennol.utils.input_parser", "qualname": "InputFile.case_insensitive", "kind": "variable", "doc": "<p></p>\n", "default_value": "True"}, {"fullname": "fennol.utils.input_parser.InputFile.get", "modulename": "fennol.utils.input_parser", "qualname": "InputFile.get", "kind": "function", "doc": "<p>Return the value for key if key is in the dictionary, else default.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.input_parser.InputFile.store", "modulename": "fennol.utils.input_parser", "qualname": "InputFile.store", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span>, </span><span class=\"param\"><span class=\"n\">value</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.input_parser.InputFile.print", "modulename": "fennol.utils.input_parser", "qualname": "InputFile.print", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tab</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.input_parser.InputFile.save", "modulename": "fennol.utils.input_parser", "qualname": "InputFile.save", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">filename</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.input_parser.parse_input", "modulename": "fennol.utils.input_parser", "qualname": "parse_input", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">input_file</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.input_parser.string_to_true_type", "modulename": "fennol.utils.input_parser", "qualname": "string_to_true_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">word</span>, </span><span class=\"param\"><span class=\"n\">unit</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.io", "modulename": "fennol.utils.io", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.io.xyz_reader", "modulename": "fennol.utils.io", "qualname": "xyz_reader", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filename</span>,</span><span class=\"param\">\t<span class=\"n\">box_info</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">indexed</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">stop</span><span class=\"o\">=-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">stream</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">interval</span><span class=\"o\">=</span><span class=\"mf\">2.0</span>,</span><span class=\"param\">\t<span class=\"n\">sleep</span><span class=\"o\">=&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">sleep</span><span class=\"o\">&gt;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.io.read_xyz", "modulename": "fennol.utils.io", "qualname": "read_xyz", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filename</span>,</span><span class=\"param\">\t<span class=\"n\">box_info</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">indexed</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">stop</span><span class=\"o\">=-</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">step</span><span class=\"o\">=</span><span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">max_frames</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.io.last_xyz_frame", "modulename": "fennol.utils.io", "qualname": "last_xyz_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span>, </span><span class=\"param\"><span class=\"n\">box_info</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">indexed</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.io.write_arc_frame", "modulename": "fennol.utils.io", "qualname": "write_arc_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">symbols</span>, </span><span class=\"param\"><span class=\"n\">coordinates</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.io.write_extxyz_frame", "modulename": "fennol.utils.io", "qualname": "write_extxyz_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">f</span>,</span><span class=\"param\">\t<span class=\"n\">symbols</span>,</span><span class=\"param\">\t<span class=\"n\">coordinates</span>,</span><span class=\"param\">\t<span class=\"n\">cell</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">forces</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.io.write_xyz_frame", "modulename": "fennol.utils.io", "qualname": "write_xyz_frame", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">symbols</span>, </span><span class=\"param\"><span class=\"n\">coordinates</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.io.human_time_duration", "modulename": "fennol.utils.io", "qualname": "human_time_duration", "kind": "function", "doc": "<p>Convert seconds (duration) to human readable string </p>\n\n<p>from <a href=\"https://gist.github.com/borgstrom/936ca741e885a1438c374824efb038b3\">https://gist.github.com/borgstrom/936ca741e885a1438c374824efb038b3</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seconds</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.kspace", "modulename": "fennol.utils.kspace", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.kspace.get_reciprocal_space_parameters", "modulename": "fennol.utils.kspace", "qualname": "get_reciprocal_space_parameters", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">reciprocal_cells</span>, </span><span class=\"param\"><span class=\"n\">cutoff</span>, </span><span class=\"param\"><span class=\"n\">kmax</span><span class=\"o\">=</span><span class=\"mi\">30</span>, </span><span class=\"param\"><span class=\"n\">kthr</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.periodic_table", "modulename": "fennol.utils.periodic_table", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.periodic_table.PERIODIC_TABLE_STR", "modulename": "fennol.utils.periodic_table", "qualname": "PERIODIC_TABLE_STR", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;\\nH                                                                                                                           He\\nLi  Be                                                                                                  B   C   N   O   F   Ne\\nNa  Mg                                                                                                  Al  Si  P   S   Cl  Ar\\nK   Ca  Sc                                                          Ti  V   Cr  Mn  Fe  Co  Ni  Cu  Zn  Ga  Ge  As  Se  Br  Kr\\nRb  Sr  Y                                                           Zr  Nb  Mo  Tc  Ru  Rh  Pd  Ag  Cd  In  Sn  Sb  Te  I   Xe\\nCs  Ba  La  Ce  Pr  Nd  Pm  Sm  Eu  Gd  Tb  Dy  Ho  Er  Tm  Yb  Lu  Hf  Ta  W   Re  Os  Ir  Pt  Au  Hg  Tl  Pb  Bi  Po  At  Rn\\nFr  Ra  Ac  Th  Pa  U   Np  Pu  Am  Cm  Bk  Cf  Es  Fm  Md  No  Lr  Rf  Db  Sg  Bh  Hs  Mt  Ds  Rg  Cn  Nh  Fl  Mc  Lv  Ts  Og\\n&#x27;"}, {"fullname": "fennol.utils.periodic_table.PERIODIC_TABLE", "modulename": "fennol.utils.periodic_table", "qualname": "PERIODIC_TABLE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;Dummy&#x27;, &#x27;H&#x27;, &#x27;He&#x27;, &#x27;Li&#x27;, &#x27;Be&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;N&#x27;, &#x27;O&#x27;, &#x27;F&#x27;, &#x27;Ne&#x27;, &#x27;Na&#x27;, &#x27;Mg&#x27;, &#x27;Al&#x27;, &#x27;Si&#x27;, &#x27;P&#x27;, &#x27;S&#x27;, &#x27;Cl&#x27;, &#x27;Ar&#x27;, &#x27;K&#x27;, &#x27;Ca&#x27;, &#x27;Sc&#x27;, &#x27;Ti&#x27;, &#x27;V&#x27;, &#x27;Cr&#x27;, &#x27;Mn&#x27;, &#x27;Fe&#x27;, &#x27;Co&#x27;, &#x27;Ni&#x27;, &#x27;Cu&#x27;, &#x27;Zn&#x27;, &#x27;Ga&#x27;, &#x27;Ge&#x27;, &#x27;As&#x27;, &#x27;Se&#x27;, &#x27;Br&#x27;, &#x27;Kr&#x27;, &#x27;Rb&#x27;, &#x27;Sr&#x27;, &#x27;Y&#x27;, &#x27;Zr&#x27;, &#x27;Nb&#x27;, &#x27;Mo&#x27;, &#x27;Tc&#x27;, &#x27;Ru&#x27;, &#x27;Rh&#x27;, &#x27;Pd&#x27;, &#x27;Ag&#x27;, &#x27;Cd&#x27;, &#x27;In&#x27;, &#x27;Sn&#x27;, &#x27;Sb&#x27;, &#x27;Te&#x27;, &#x27;I&#x27;, &#x27;Xe&#x27;, &#x27;Cs&#x27;, &#x27;Ba&#x27;, &#x27;La&#x27;, &#x27;Ce&#x27;, &#x27;Pr&#x27;, &#x27;Nd&#x27;, &#x27;Pm&#x27;, &#x27;Sm&#x27;, &#x27;Eu&#x27;, &#x27;Gd&#x27;, &#x27;Tb&#x27;, &#x27;Dy&#x27;, &#x27;Ho&#x27;, &#x27;Er&#x27;, &#x27;Tm&#x27;, &#x27;Yb&#x27;, &#x27;Lu&#x27;, &#x27;Hf&#x27;, &#x27;Ta&#x27;, &#x27;W&#x27;, &#x27;Re&#x27;, &#x27;Os&#x27;, &#x27;Ir&#x27;, &#x27;Pt&#x27;, &#x27;Au&#x27;, &#x27;Hg&#x27;, &#x27;Tl&#x27;, &#x27;Pb&#x27;, &#x27;Bi&#x27;, &#x27;Po&#x27;, &#x27;At&#x27;, &#x27;Rn&#x27;, &#x27;Fr&#x27;, &#x27;Ra&#x27;, &#x27;Ac&#x27;, &#x27;Th&#x27;, &#x27;Pa&#x27;, &#x27;U&#x27;, &#x27;Np&#x27;, &#x27;Pu&#x27;, &#x27;Am&#x27;, &#x27;Cm&#x27;, &#x27;Bk&#x27;, &#x27;Cf&#x27;, &#x27;Es&#x27;, &#x27;Fm&#x27;, &#x27;Md&#x27;, &#x27;No&#x27;, &#x27;Lr&#x27;, &#x27;Rf&#x27;, &#x27;Db&#x27;, &#x27;Sg&#x27;, &#x27;Bh&#x27;, &#x27;Hs&#x27;, &#x27;Mt&#x27;, &#x27;Ds&#x27;, &#x27;Rg&#x27;, &#x27;Cn&#x27;, &#x27;Nh&#x27;, &#x27;Fl&#x27;, &#x27;Mc&#x27;, &#x27;Lv&#x27;, &#x27;Ts&#x27;, &#x27;Og&#x27;]"}, {"fullname": "fennol.utils.periodic_table.PERIODIC_TABLE_REV_IDX", "modulename": "fennol.utils.periodic_table", "qualname": "PERIODIC_TABLE_REV_IDX", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;Dummy&#x27;: 0, &#x27;H&#x27;: 1, &#x27;He&#x27;: 2, &#x27;Li&#x27;: 3, &#x27;Be&#x27;: 4, &#x27;B&#x27;: 5, &#x27;C&#x27;: 6, &#x27;N&#x27;: 7, &#x27;O&#x27;: 8, &#x27;F&#x27;: 9, &#x27;Ne&#x27;: 10, &#x27;Na&#x27;: 11, &#x27;Mg&#x27;: 12, &#x27;Al&#x27;: 13, &#x27;Si&#x27;: 14, &#x27;P&#x27;: 15, &#x27;S&#x27;: 16, &#x27;Cl&#x27;: 17, &#x27;Ar&#x27;: 18, &#x27;K&#x27;: 19, &#x27;Ca&#x27;: 20, &#x27;Sc&#x27;: 21, &#x27;Ti&#x27;: 22, &#x27;V&#x27;: 23, &#x27;Cr&#x27;: 24, &#x27;Mn&#x27;: 25, &#x27;Fe&#x27;: 26, &#x27;Co&#x27;: 27, &#x27;Ni&#x27;: 28, &#x27;Cu&#x27;: 29, &#x27;Zn&#x27;: 30, &#x27;Ga&#x27;: 31, &#x27;Ge&#x27;: 32, &#x27;As&#x27;: 33, &#x27;Se&#x27;: 34, &#x27;Br&#x27;: 35, &#x27;Kr&#x27;: 36, &#x27;Rb&#x27;: 37, &#x27;Sr&#x27;: 38, &#x27;Y&#x27;: 39, &#x27;Zr&#x27;: 40, &#x27;Nb&#x27;: 41, &#x27;Mo&#x27;: 42, &#x27;Tc&#x27;: 43, &#x27;Ru&#x27;: 44, &#x27;Rh&#x27;: 45, &#x27;Pd&#x27;: 46, &#x27;Ag&#x27;: 47, &#x27;Cd&#x27;: 48, &#x27;In&#x27;: 49, &#x27;Sn&#x27;: 50, &#x27;Sb&#x27;: 51, &#x27;Te&#x27;: 52, &#x27;I&#x27;: 53, &#x27;Xe&#x27;: 54, &#x27;Cs&#x27;: 55, &#x27;Ba&#x27;: 56, &#x27;La&#x27;: 57, &#x27;Ce&#x27;: 58, &#x27;Pr&#x27;: 59, &#x27;Nd&#x27;: 60, &#x27;Pm&#x27;: 61, &#x27;Sm&#x27;: 62, &#x27;Eu&#x27;: 63, &#x27;Gd&#x27;: 64, &#x27;Tb&#x27;: 65, &#x27;Dy&#x27;: 66, &#x27;Ho&#x27;: 67, &#x27;Er&#x27;: 68, &#x27;Tm&#x27;: 69, &#x27;Yb&#x27;: 70, &#x27;Lu&#x27;: 71, &#x27;Hf&#x27;: 72, &#x27;Ta&#x27;: 73, &#x27;W&#x27;: 74, &#x27;Re&#x27;: 75, &#x27;Os&#x27;: 76, &#x27;Ir&#x27;: 77, &#x27;Pt&#x27;: 78, &#x27;Au&#x27;: 79, &#x27;Hg&#x27;: 80, &#x27;Tl&#x27;: 81, &#x27;Pb&#x27;: 82, &#x27;Bi&#x27;: 83, &#x27;Po&#x27;: 84, &#x27;At&#x27;: 85, &#x27;Rn&#x27;: 86, &#x27;Fr&#x27;: 87, &#x27;Ra&#x27;: 88, &#x27;Ac&#x27;: 89, &#x27;Th&#x27;: 90, &#x27;Pa&#x27;: 91, &#x27;U&#x27;: 92, &#x27;Np&#x27;: 93, &#x27;Pu&#x27;: 94, &#x27;Am&#x27;: 95, &#x27;Cm&#x27;: 96, &#x27;Bk&#x27;: 97, &#x27;Cf&#x27;: 98, &#x27;Es&#x27;: 99, &#x27;Fm&#x27;: 100, &#x27;Md&#x27;: 101, &#x27;No&#x27;: 102, &#x27;Lr&#x27;: 103, &#x27;Rf&#x27;: 104, &#x27;Db&#x27;: 105, &#x27;Sg&#x27;: 106, &#x27;Bh&#x27;: 107, &#x27;Hs&#x27;: 108, &#x27;Mt&#x27;: 109, &#x27;Ds&#x27;: 110, &#x27;Rg&#x27;: 111, &#x27;Cn&#x27;: 112, &#x27;Nh&#x27;: 113, &#x27;Fl&#x27;: 114, &#x27;Mc&#x27;: 115, &#x27;Lv&#x27;: 116, &#x27;Ts&#x27;: 117, &#x27;Og&#x27;: 118}"}, {"fullname": "fennol.utils.periodic_table.PERIODIC_COORDINATES", "modulename": "fennol.utils.periodic_table", "qualname": "PERIODIC_COORDINATES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0], [1, 1], [1, 32], [2, 1], [2, 2], [2, 27], [2, 28], [2, 29], [2, 30], [2, 31], [2, 32], [3, 1], [3, 2], [3, 27], [3, 28], [3, 29], [3, 30], [3, 31], [3, 32], [4, 1], [4, 2], [4, 3], [4, 18], [4, 19], [4, 20], [4, 21], [4, 22], [4, 23], [4, 24], [4, 25], [4, 26], [4, 27], [4, 28], [4, 29], [4, 30], [4, 31], [4, 32], [5, 1], [5, 2], [5, 3], [5, 18], [5, 19], [5, 20], [5, 21], [5, 22], [5, 23], [5, 24], [5, 25], [5, 26], [5, 27], [5, 28], [5, 29], [5, 30], [5, 31], [5, 32], [6, 1], [6, 2], [6, 3], [6, 4], [6, 5], [6, 6], [6, 7], [6, 8], [6, 9], [6, 10], [6, 11], [6, 12], [6, 13], [6, 14], [6, 15], [6, 16], [6, 17], [6, 18], [6, 19], [6, 20], [6, 21], [6, 22], [6, 23], [6, 24], [6, 25], [6, 26], [6, 27], [6, 28], [6, 29], [6, 30], [6, 31], [6, 32], [7, 1], [7, 2], [7, 3], [7, 4], [7, 5], [7, 6], [7, 7], [7, 8], [7, 9], [7, 10], [7, 11], [7, 12], [7, 13], [7, 14], [7, 15], [7, 16], [7, 17], [7, 18], [7, 19], [7, 20], [7, 21], [7, 22], [7, 23], [7, 24], [7, 25], [7, 26], [7, 27], [7, 28], [7, 29], [7, 30], [7, 31], [7, 32]]"}, {"fullname": "fennol.utils.periodic_table.ATOMIC_MASSES", "modulename": "fennol.utils.periodic_table", "qualname": "ATOMIC_MASSES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[0.0, 1.008, 4.002602, 6.94, 9.0121831, 10.81, 12.011, 14.007, 15.999, 18.99840316, 20.1797, 22.98976928, 24.305, 26.9815385, 28.085, 30.973762, 32.06, 35.45, 39.948, 39.0983, 40.078, 44.955908, 47.867, 50.9415, 51.9961, 54.938044, 55.845, 58.933194, 58.6934, 63.546, 65.38, 69.723, 72.63, 74.921595, 78.971, 79.904, 83.798, 85.4678, 87.62, 88.90584, 91.224, 92.90637, 95.95, 97.90721, 101.07, 102.9055, 106.42, 107.8682, 112.414, 114.818, 118.71, 121.76, 127.6, 126.90447, 131.293, 132.90545196, 137.327, 138.90547, 140.116, 140.90766, 144.242, 144.91276, 150.36, 151.964, 157.25, 158.92535, 162.5, 164.93033, 167.259, 168.93422, 173.054, 174.9668, 178.49, 180.94788, 183.84, 186.207, 190.23, 192.217, 195.084, 196.966569, 200.592, 204.38, 207.2, 208.9804, 208.98243, 209.98715, 222.01758, 223.01974, 226.02541, 227.02775, 232.0377, 231.03588, 238.02891, 237.04817, 244.06421, 243.06138, 247.07035, 247.07031, 251.07959, 252.083, 257.09511, 258.09843, 259.101, 262.11, 267.122, 268.126, 271.134, 270.133, 269.1338, 278.156, 281.165, 281.166, 285.177, 286.182, 289.19, 289.194, 293.204, 293.208, 294.214]"}, {"fullname": "fennol.utils.periodic_table.ELECTRONIC_STRUCTURE", "modulename": "fennol.utils.periodic_table", "qualname": "ELECTRONIC_STRUCTURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 7, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 8, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 1, 10, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 1, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 2, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 3, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 4, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 5, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 1, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 2, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 4, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 5, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 5, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 7, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 8, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 10, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 1, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 2, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 3, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 4, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 5, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 0, 1, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 1, 1, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 3, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 4, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 5, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 6, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 7, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 7, 1, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 9, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 10, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 11, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 12, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 13, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 3, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 4, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 5, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 6, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 7, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 9, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 10, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 1], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 2], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 3], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 4], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 5], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]"}, {"fullname": "fennol.utils.periodic_table.VALENCE_STRUCTURE", "modulename": "fennol.utils.periodic_table", "qualname": "VALENCE_STRUCTURE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0.25, 0.25, 0.25, 0.25], [1, 0, 0, 0], [2, 0, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 1, 0, 0], [2, 2, 0, 0], [2, 3, 0, 0], [2, 4, 0, 0], [2, 5, 0, 0], [2, 6, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 1, 0, 0], [2, 2, 0, 0], [2, 3, 0, 0], [2, 4, 0, 0], [2, 5, 0, 0], [2, 6, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 0, 1, 0], [2, 0, 2, 0], [2, 0, 3, 0], [1, 0, 5, 0], [2, 0, 5, 0], [2, 0, 6, 0], [2, 0, 7, 0], [2, 0, 8, 0], [1, 0, 10, 0], [2, 0, 10, 0], [2, 1, 10, 0], [2, 2, 10, 0], [2, 3, 10, 0], [2, 4, 10, 0], [2, 5, 10, 0], [2, 6, 10, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 0, 1, 0], [2, 0, 2, 0], [1, 0, 4, 0], [1, 0, 5, 0], [2, 0, 5, 0], [1, 0, 7, 0], [1, 0, 8, 0], [0, 0, 10, 0], [1, 0, 10, 0], [2, 0, 10, 0], [2, 1, 10, 0], [2, 2, 10, 0], [2, 3, 10, 0], [2, 4, 10, 0], [2, 5, 10, 0], [2, 6, 10, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 0, 1, 0], [2, 0, 1, 1], [2, 0, 0, 3], [2, 0, 0, 4], [2, 0, 0, 5], [2, 0, 0, 6], [2, 0, 0, 7], [2, 0, 1, 7], [2, 0, 0, 9], [2, 0, 0, 10], [2, 0, 0, 11], [2, 0, 0, 12], [2, 0, 0, 13], [2, 0, 0, 14], [2, 0, 1, 14], [2, 0, 2, 14], [2, 0, 3, 14], [2, 0, 4, 14], [2, 0, 5, 14], [2, 0, 6, 14], [2, 0, 7, 14], [1, 0, 9, 14], [1, 0, 10, 14], [2, 0, 10, 14], [2, 1, 10, 14], [2, 2, 10, 14], [2, 3, 10, 14], [2, 4, 10, 14], [2, 5, 10, 14], [2, 6, 10, 14], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25]]"}, {"fullname": "fennol.utils.periodic_table.VALENCE_ELECTRONS", "modulename": "fennol.utils.periodic_table", "qualname": "VALENCE_ELECTRONS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[1.0, 1, 2, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]"}, {"fullname": "fennol.utils.periodic_table.VALENCE_STRUCTURE_FULL", "modulename": "fennol.utils.periodic_table", "qualname": "VALENCE_STRUCTURE_FULL", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0]], [[1, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 0, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 0, 0, 0, 0, 0, 0]], [[1, 1, 1, 1, 0, 0, 0, 0, 0], [1, 1, 1, 1, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]]]"}, {"fullname": "fennol.utils.periodic_table.D3_ELECTRONEGATIVITIES", "modulename": "fennol.utils.periodic_table", "qualname": "D3_ELECTRONEGATIVITIES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[1.0, 1.23695041, 1.26590957, 0.54341808, 0.99666991, 1.26691604, 1.40028282, 1.55819364, 1.5686644, 1.57540015, 1.15056627, 0.5593622, 0.72373742, 1.12910844, 1.1230684, 1.52672442, 1.40768172, 1.48154584, 1.31062963, 0.4037414, 0.75442607, 0.76482096, 0.98457281, 0.96702598, 1.05266584, 0.93274875, 1.04025281, 0.92738624, 1.0741921, 1.07900668, 1.04712861, 1.15018618, 1.15388455, 1.36313743, 1.36485106, 1.39801837, 1.18695346, 0.3627387, 0.58797255, 0.71961946, 0.96158233, 0.89585296, 0.81360499, 1.00794665, 0.92613682, 1.09152285, 1.1490707, 1.13508911, 1.08853785, 1.11005982, 1.12452195, 1.21642129, 1.36507125, 1.4034, 1.16653482, 0.34125098, 0.58884173, 0.68441115, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.87936784, 1.02761808, 0.93297476, 1.10172128, 0.97350071, 1.16695666, 1.23997927, 1.18464453, 1.14191734, 1.12334192, 1.01485321, 1.12950808, 1.30804834, 1.33689961, 1.27465977, 1.0]"}, {"fullname": "fennol.utils.periodic_table.D3_HARDNESSES", "modulename": "fennol.utils.periodic_table", "qualname": "D3_HARDNESSES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[1000.0, -0.35015861, 1.04121227, 0.09281243, 0.0941238, 0.26629137, 0.19408787, 0.05317918, 0.03151644, 0.32275132, 1.30996037, 0.2420651, 0.04147733, 0.11634126, 0.13155266, 0.1535065, 0.15250997, 0.17523529, 0.2877445, 0.42937314, 0.01896455, 0.07179178, -0.01121381, -0.0309337, 0.02716319, -0.01843812, -0.15270393, -0.09192645, -0.13418723, -0.09861139, 0.18338109, 0.08299615, 0.11370033, 0.19005278, 0.10980677, 0.12327841, 0.25345554, 0.58615231, 0.16093861, 0.0454853, -0.02478645, 0.01909943, 0.01402541, -0.03595279, 0.01137752, -0.03697213, 0.08009416, 0.02274892, 0.12801822, -0.02078702, 0.05284319, 0.0758119, 0.09663758, 0.09547417, 0.07803344, 0.64913257, 0.15348654, 0.05054344, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, -0.02786741, 0.01057858, -0.03892226, -0.04574364, -0.0387408, -0.03782372, -0.07046855, 0.09546597, 0.21953269, 0.02522348, 0.1526305, 0.08042611, 0.01878626, 0.08715453, 0.10500484, 1000.0]"}, {"fullname": "fennol.utils.periodic_table.D3_KAPPA", "modulename": "fennol.utils.periodic_table", "qualname": "D3_KAPPA", "kind": "variable", "doc": "<p></p>\n", "default_value": "[0.0, 0.0491611, 0.10937243, -0.12349591, -0.02665108, -0.02631658, 0.06005196, 0.09279548, 0.11689703, 0.15704746, 0.07987901, -0.10002962, -0.07712863, -0.02170561, -0.04964052, 0.14250599, 0.0712666, 0.1368275, 0.14877121, -0.10219289, -0.08979338, -0.08273597, -0.01754829, -0.0276546, -0.02558926, -0.08010286, -0.04163215, -0.09369631, -0.03774117, -0.05759708, 0.02431998, -0.0105627, -0.02692862, 0.07657769, 0.06561608, 0.08006749, 0.141392, -0.05351029, -0.06701705, -0.07377246, -0.02927768, -0.03867291, -0.06929825, -0.04485293, -0.04800824, -0.01484022, 0.07917502, 0.06619243, 0.02434095, -0.01505548, -0.03030768, 0.01418235, 0.08953411, 0.08967527, 0.07277771, -0.02129476, -0.06188828, -0.06568203, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.03585873, -0.031324, -0.05902379, -0.02827592, -0.0760626, -0.02123839, 0.03814822, 0.02146834, 0.01580538, -0.00894298, -0.05864876, -0.01817842, 0.07721851, 0.07936083, 0.05849285, 0.0]"}, {"fullname": "fennol.utils.periodic_table.D3_VDW_RADII", "modulename": "fennol.utils.periodic_table", "qualname": "D3_VDW_RADII", "kind": "variable", "doc": "<p></p>\n", "default_value": "[1.0, 0.55159092, 0.66205886, 0.90529132, 1.51710827, 2.86070364, 1.88862966, 1.3225029, 1.23166285, 1.77503721, 1.11955204, 1.28263182, 1.22344336, 1.70936266, 1.54075036, 1.38200579, 2.18849322, 1.36779065, 1.27039703, 1.64466502, 1.58859404, 1.65357953, 1.50021521, 1.30104175, 1.46301827, 1.32928147, 1.02766713, 1.02291377, 0.94343886, 1.14881311, 1.47080755, 1.76901636, 1.98724061, 2.41244711, 2.26739524, 2.95378999, 1.20807752, 1.65941046, 1.6273388, 1.61344972, 1.63220728, 1.60899928, 1.43501286, 1.54559205, 1.32663678, 1.37644152, 1.36051851, 1.23395526, 1.65734544, 1.5389524, 1.97542736, 1.97636542, 2.05432381, 3.80138135, 1.43893803, 1.75505957, 1.59815118, 1.76401732, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.47055223, 1.81127084, 1.40189963, 1.54015481, 1.33721475, 1.57165422, 1.04815857, 1.78342098, 2.79106396, 1.7816084, 2.47588882, 2.37670734, 1.76613217, 2.66172302, 2.82773085, 1.0]"}, {"fullname": "fennol.utils.periodic_table.D3_COV_RADII", "modulename": "fennol.utils.periodic_table", "qualname": "D3_COV_RADII", "kind": "variable", "doc": "<p></p>\n", "default_value": "[1.8897261278504418, 0.6047123609121414, 0.8692740188112033, 2.5133357500410876, 1.9275206504074507, 1.6062672086728755, 1.4172945958878314, 1.3417055507738136, 1.1905274605457783, 1.2094247218242828, 1.266116505659796, 2.929075498168185, 2.626719317712114, 2.3810549210915566, 2.1920823083065124, 2.0975960019139905, 1.946417911685955, 1.8708288665719373, 1.814137082736424, 3.703863210586866, 3.2314316786242556, 2.7967946692186536, 2.570027533876601, 2.532233011319592, 2.305465875977539, 2.2487740921420256, 2.1920823083065124, 2.0975960019139905, 2.078698740635486, 2.116493263192495, 2.229876830863521, 2.343260398534548, 2.2865686146990347, 2.2865686146990347, 2.1920823083065124, 2.1542877857495033, 2.210979569585017, 3.968424868485928, 3.4959933365233176, 3.08025358839622, 2.9101782368896805, 2.7778974079401495, 2.6078220564336094, 2.4188494436485657, 2.362157659813052, 2.362157659813052, 2.26767135342053, 2.4188494436485657, 2.570027533876601, 2.683411101547627, 2.6456165789906185, 2.6456165789906185, 2.570027533876601, 2.5133357500410876, 2.475541227484079, 4.384164616613025, 3.703863210586866, 3.4015070301307953, 3.08025358839622, 3.3259179850167775, 3.288123462459769, 3.2692262011812643, 3.2503289399027597, 3.174739894788742, 3.1936371560672465, 3.174739894788742, 3.155842633510238, 3.1369453722317333, 3.1180481109532288, 3.099150849674724, 3.212534417345751, 3.061356327117716, 2.8723837143326714, 2.759000146661645, 2.5889247951551053, 2.475541227484079, 2.43774670492707, 2.305465875977539, 2.3243631372560434, 2.343260398534548, 2.5133357500410876, 2.7212056241046363, 2.7212056241046363, 2.8534864530541673, 2.7401028853831404, 2.7778974079401495, 2.683411101547627, 1.8897261278504418]"}, {"fullname": "fennol.utils.periodic_table.VDW_RADII", "modulename": "fennol.utils.periodic_table", "qualname": "VDW_RADII", "kind": "variable", "doc": "<p></p>\n", "default_value": "[1.0, 3.1, 2.65, 4.16, 4.17, 3.89, 3.59, 3.34, 3.19, 3.04, 2.91, 3.73, 4.27, 4.33, 4.2, 4.01, 3.86, 3.71, 3.55, 3.71, 4.65, 4.59, 4.51, 4.44, 3.99, 3.97, 4.23, 4.18, 3.82, 3.76, 4.02, 4.19, 4.2, 4.11, 4.04, 3.93, 3.82, 3.72, 4.54, 4.8151, 4.53, 4.2365, 4.099, 4.076, 3.9953, 3.95, 3.66, 3.82, 3.99, 4.23198, 4.303, 4.276, 4.22, 4.17, 4.08, 3.78, 4.77, 3.14, 3.26, 3.28, 3.3, 3.27, 3.32, 3.4, 3.62, 3.42, 3.26, 3.24, 3.3, 3.26, 3.22, 3.2, 4.21, 4.15, 4.08, 4.02, 3.84, 4.0, 3.92, 3.86, 3.98, 3.91, 4.31, 4.32, 4.097, 4.07, 4.23, 3.9, 4.98, 2.75, 2.85, 2.71, 3.0, 3.28, 3.45, 3.51, 3.47, 3.56, 3.55, 3.76, 3.89, 3.93, 3.78, 1.0]"}, {"fullname": "fennol.utils.periodic_table.C6_FREE", "modulename": "fennol.utils.periodic_table", "qualname": "C6_FREE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[0.0, 6.5, 1.46, 1387.0, 214.0, 99.5, 46.6, 24.2, 15.6, 9.52, 6.38, 1556.0, 627.0, 528.0, 305.0, 185.0, 134.0, 94.6, 64.3, 3897.0, 2221.0, 1383.0, 1044.0, 832.0, 602.0, 552.0, 482.0, 408.0, 373.0, 253.0, 284.0, 498.0, 354.0, 246.0, 210.0, 162.0, 129.6, 4691.0, 3170.0, 1968.58, 1677.91, 1263.61, 1028.73, 1390.87, 609.754, 469.0, 157.5, 339.0, 452.0, 707.046, 587.417, 459.322, 396.0, 385.0, 285.9, 6582.08, 5727.0, 3884.5, 3708.33, 3911.84, 3908.75, 3847.68, 3708.69, 3511.71, 2781.53, 3124.41, 2984.29, 2839.95, 2724.12, 2576.78, 2387.53, 2371.8, 1274.8, 1019.92, 847.93, 710.2, 596.67, 359.1, 347.1, 298.0, 392.0, 717.44, 697.0, 571.0, 530.92, 457.53, 420.6, 4224.44, 4851.32, 3604.41, 4047.54, 2367.42, 1877.1, 2507.88, 2117.27, 2110.98, 2403.22, 1985.82, 1891.92, 1851.1, 1787.07, 1701.0, 1578.18, 0.0]"}, {"fullname": "fennol.utils.periodic_table.POLARIZABILITIES", "modulename": "fennol.utils.periodic_table", "qualname": "POLARIZABILITIES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[1e-06, 4.5, 1.38, 164.2, 38.0, 21.0, 12.0, 7.4, 5.4, 3.8, 2.67, 162.7, 71.0, 60.0, 37.0, 25.0, 19.6, 15.0, 11.1, 292.9, 160.0, 120.0, 98.0, 84.0, 78.0, 63.0, 56.0, 50.0, 48.0, 42.0, 40.0, 60.0, 41.0, 29.0, 25.0, 20.0, 16.8, 319.2, 199.0, 126.737, 119.97, 101.603, 88.4225785, 80.083, 65.895, 56.1, 23.68, 50.6, 39.7, 70.22, 55.95, 43.67197, 37.65, 35.0, 27.3, 427.12, 275.0, 213.7, 204.7, 215.8, 208.4, 200.2, 192.1, 184.2, 158.3, 169.5, 164.64, 156.3, 150.2, 144.3, 138.9, 137.2, 99.52, 82.53, 71.041, 63.04, 55.055, 42.51, 39.68, 36.5, 33.9, 69.92, 61.8, 49.02, 45.013, 38.93, 33.54, 317.8, 246.2, 203.3, 217.0, 154.4, 127.8, 150.5, 132.2, 131.2, 143.6, 125.3, 121.5, 117.5, 113.4, 109.4, 105.4, 1e-06]"}, {"fullname": "fennol.utils.periodic_table.PAULING_ELECTRONEGATIVITY", "modulename": "fennol.utils.periodic_table", "qualname": "PAULING_ELECTRONEGATIVITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "[0.0, 2.2, 4.42, 0.98, 1.57, 2.04, 2.55, 3.04, 3.44, 3.98, 4.44, 0.93, 1.31, 1.61, 1.9, 2.19, 2.58, 3.16, 3.57, 0.82, 1.0, 1.36, 1.54, 1.63, 1.66, 1.55, 1.83, 1.88, 1.91, 1.9, 1.65, 1.81, 2.01, 2.18, 2.55, 2.96, 3.37, 0.82, 0.95, 1.22, 1.33, 1.6, 2.16, 1.9, 2.2, 2.28, 2.2, 1.93, 1.69, 1.78, 1.96, 2.05, 2.1, 2.66, 3.12, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"}, {"fullname": "fennol.utils.periodic_table.SJS_COORDINATES", "modulename": "fennol.utils.periodic_table", "qualname": "SJS_COORDINATES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0, 0, 0], [0, 1, 1, 0], [0, 1, -1, 0], [0, 2, 1, 0], [0, 2, -1, 0], [1, 3, 1, -1], [1, 3, 2, 0], [1, 3, 1, 1], [1, 3, -1, -1], [1, 3, -2, 0], [1, 3, -1, 1], [0, 3, 1, 0], [0, 3, -1, 0], [1, 4, 1, -1], [1, 4, 2, 0], [1, 4, 1, 1], [1, 4, -1, -1], [1, 4, -2, 0], [1, 4, -1, 1], [0, 4, 1, 0], [0, 4, -1, 0], [2, 5, 1, -2], [2, 5, 2, -1], [2, 5, 3, 0], [2, 5, 2, 1], [2, 5, 1, 2], [2, 5, -1, -2], [2, 5, -2, -1], [2, 5, -3, 0], [2, 5, -2, 1], [2, 5, -1, 2], [1, 5, 1, -1], [1, 5, 2, 0], [1, 5, 1, 1], [1, 5, -1, -1], [1, 5, -2, 0], [1, 5, -1, 1], [0, 5, 1, 0], [0, 5, -1, 0], [2, 6, 1, -2], [2, 6, 2, -1], [2, 6, 3, 0], [2, 6, 2, 1], [2, 6, 1, 2], [2, 6, -1, -2], [2, 6, -2, -1], [2, 6, -3, 0], [2, 6, -2, 1], [2, 6, -1, 2], [1, 6, 1, -1], [1, 6, 2, 0], [1, 6, 1, 1], [1, 6, -1, -1], [1, 6, -2, 0], [1, 6, -1, 1], [0, 6, 1, 0], [0, 6, -1, 0], [2, 7, 1, -2], [3, 7, 1, -3], [3, 7, 2, -2], [3, 7, 3, -1], [3, 7, 4, 0], [3, 7, 3, 1], [3, 7, 2, 2], [3, 7, 1, 3], [3, 7, -1, -3], [3, 7, -2, -2], [3, 7, -3, -1], [3, 7, -4, 0], [3, 7, -3, 1], [3, 7, -2, 2], [3, 7, -1, 3], [2, 7, 2, -1], [2, 7, 3, 0], [2, 7, 2, 1], [2, 7, 1, 2], [2, 7, -1, -2], [2, 7, -2, -1], [2, 7, -3, 0], [2, 7, -2, 1], [2, 7, -1, 2], [1, 7, 1, -1], [1, 7, 2, 0], [1, 7, 1, 1], [1, 7, -1, -1], [1, 7, -2, 0], [1, 7, -1, 1], [0, 7, 1, 0], [0, 7, -1, 0], [2, 8, 1, -2], [3, 8, 1, -3], [3, 8, 2, -2], [3, 8, 3, -1], [3, 8, 4, 0], [3, 8, 3, 1], [3, 8, 2, 2], [3, 8, 1, 3], [3, 8, -1, -3], [3, 8, -2, -2], [3, 8, -3, -1], [3, 8, -4, 0], [3, 8, -3, 1], [3, 8, -2, 2], [3, 8, -1, 3], [2, 8, 2, -1], [2, 8, 3, 0], [2, 8, 2, 1], [2, 8, 1, 2], [2, 8, -1, -2], [2, 8, -2, -1], [2, 8, -3, 0], [2, 8, -2, 1], [2, 8, -1, 2], [1, 8, 1, -1], [1, 8, 2, 0], [1, 8, 1, 1], [1, 8, -1, -1], [1, 8, -2, 0], [1, 8, -1, 1]]"}, {"fullname": "fennol.utils.periodic_table.ATOMIC_IONIZATION_ENERGY", "modulename": "fennol.utils.periodic_table", "qualname": "ATOMIC_IONIZATION_ENERGY", "kind": "variable", "doc": "<p></p>\n", "default_value": "[0.0, 0.4997143020594704, 0.9034468936623963, 0.19539133914368012, 0.34241094325568894, 0.3050847225225883, 0.41363546649129945, 0.5339934843653792, 0.5004760616662685, 0.6402589495136964, 0.7926108708732912, 0.18891638248589734, 0.28108929490845214, 0.21976764656121528, 0.29937152547160345, 0.3854503610397744, 0.3808798033989866, 0.47648063405213226, 0.5789373011664597, 0.15958863762417538, 0.2247190840054021, 0.24033515594476054, 0.2506189106365332, 0.2475718722093413, 0.24871451161953825, 0.2730908190370734, 0.28908777077983083, 0.28946865058322985, 0.2807084151050531, 0.283755453532245, 0.3450771018794819, 0.22052940616801325, 0.2902304101900278, 0.3606931738188403, 0.3584078949984464, 0.43420297587484474, 0.5145686143920309, 0.1534945607697916, 0.20948389186944263, 0.23462195889377574, 0.25138067024333116, 0.2529041894569271, 0.2609026653283058, 0.2673776219860886, 0.27080554021667946, 0.2742334584472704, 0.30660824173618423, 0.2784231362846592, 0.3306036693503204, 0.21253093029663453, 0.2700437806098815, 0.3176537560347548, 0.3309845491537194, 0.3839268418261785, 0.44562936997681435, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"}, {"fullname": "fennol.utils.periodic_table.ATOMIC_ELECTRON_AFFINITY", "modulename": "fennol.utils.periodic_table", "qualname": "ATOMIC_ELECTRON_AFFINITY", "kind": "variable", "doc": "<p></p>\n", "default_value": "[0.0, 0.02771624241354086, -0.01828223056315136, 0.022712624436288367, -0.01828223056315136, 0.01027956501393525, 0.04638201893871499, -0.002589982663113109, 0.053694530284172134, 0.12499103980262503, -0.04418205719428245, 0.020135972566294225, -0.015235192135959464, 0.015906302349548478, 0.05106379348209534, 0.0274374383974528, 0.0763321213991909, 0.13276517746980177, -0.03656446112630272, 0.01842810752785317, 0.0009026851340555983, 0.0065918867574262605, 0.0027762328869752133, 0.01939097167084581, 0.02483983813827171, -0.01904399016994933, 0.005631307893254017, 0.024337076797785046, 0.042525230049496855, 0.04541420335827817, -0.022091028597141224, 0.011067605327167752, 0.045299939417258475, 0.029575316733931312, 0.07425556471105962, 0.12360920787589352, -0.03656446112630272, 0.017857168702558088, 0.0019131592524731097, 0.011439724895088562, 0.015923061060898032, 0.0337139566776647, 0.027460291185656734, 0.02018662958014629, 0.038449816153127696, 0.041999615920806255, 0.020658920536361033, 0.04793829381540325, -0.02589982663113109, 0.014108930557308661, 0.040867641145104466, 0.038491332051698184, 0.07242848429415469, 0.1124178166126211, 0.1124178166126211, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"}, {"fullname": "fennol.utils.periodic_table.CHEMICAL_PROPERTIES", "modulename": "fennol.utils.periodic_table", "qualname": "CHEMICAL_PROPERTIES", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;ATOMIC_NUMBER&#x27;: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], &#x27;ATOMIC_MASSES&#x27;: [0.0, 1.008, 4.002602, 6.94, 9.0121831, 10.81, 12.011, 14.007, 15.999, 18.99840316, 20.1797, 22.98976928, 24.305, 26.9815385, 28.085, 30.973762, 32.06, 35.45, 39.948, 39.0983, 40.078, 44.955908, 47.867, 50.9415, 51.9961, 54.938044, 55.845, 58.933194, 58.6934, 63.546, 65.38, 69.723, 72.63, 74.921595, 78.971, 79.904, 83.798, 85.4678, 87.62, 88.90584, 91.224, 92.90637, 95.95, 97.90721, 101.07, 102.9055, 106.42, 107.8682, 112.414, 114.818, 118.71, 121.76, 127.6, 126.90447, 131.293, 132.90545196, 137.327, 138.90547, 140.116, 140.90766, 144.242, 144.91276, 150.36, 151.964, 157.25, 158.92535, 162.5, 164.93033, 167.259, 168.93422, 173.054, 174.9668, 178.49, 180.94788, 183.84, 186.207, 190.23, 192.217, 195.084, 196.966569, 200.592, 204.38, 207.2, 208.9804, 208.98243, 209.98715, 222.01758, 223.01974, 226.02541, 227.02775, 232.0377, 231.03588, 238.02891, 237.04817, 244.06421, 243.06138, 247.07035, 247.07031, 251.07959, 252.083, 257.09511, 258.09843, 259.101, 262.11, 267.122, 268.126, 271.134, 270.133, 269.1338, 278.156, 281.165, 281.166, 285.177, 286.182, 289.19, 289.194, 293.204, 293.208, 294.214], &#x27;ELECTRONIC_STRUCTURE&#x27;: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 5, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 7, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 8, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 1, 10, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 1, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 2, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 3, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 4, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 5, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 1, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 2, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 4, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 5, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 5, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 7, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 8, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 0, 10, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 1, 10, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 1, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 2, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 3, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 4, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 5, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 0, 1, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 1, 1, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 3, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 4, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 5, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 6, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 7, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 7, 1, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 9, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 10, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 11, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 12, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 13, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 2, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 3, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 4, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 5, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 6, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 7, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 9, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 10, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 0], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 1], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 2], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 3], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 4], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 5], [2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], &#x27;VALENCE_STRUCTURE&#x27;: [[0.25, 0.25, 0.25, 0.25], [1, 0, 0, 0], [2, 0, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 1, 0, 0], [2, 2, 0, 0], [2, 3, 0, 0], [2, 4, 0, 0], [2, 5, 0, 0], [2, 6, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 1, 0, 0], [2, 2, 0, 0], [2, 3, 0, 0], [2, 4, 0, 0], [2, 5, 0, 0], [2, 6, 0, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 0, 1, 0], [2, 0, 2, 0], [2, 0, 3, 0], [1, 0, 5, 0], [2, 0, 5, 0], [2, 0, 6, 0], [2, 0, 7, 0], [2, 0, 8, 0], [1, 0, 10, 0], [2, 0, 10, 0], [2, 1, 10, 0], [2, 2, 10, 0], [2, 3, 10, 0], [2, 4, 10, 0], [2, 5, 10, 0], [2, 6, 10, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 0, 1, 0], [2, 0, 2, 0], [1, 0, 4, 0], [1, 0, 5, 0], [2, 0, 5, 0], [1, 0, 7, 0], [1, 0, 8, 0], [0, 0, 10, 0], [1, 0, 10, 0], [2, 0, 10, 0], [2, 1, 10, 0], [2, 2, 10, 0], [2, 3, 10, 0], [2, 4, 10, 0], [2, 5, 10, 0], [2, 6, 10, 0], [1, 0, 0, 0], [2, 0, 0, 0], [2, 0, 1, 0], [2, 0, 1, 1], [2, 0, 0, 3], [2, 0, 0, 4], [2, 0, 0, 5], [2, 0, 0, 6], [2, 0, 0, 7], [2, 0, 1, 7], [2, 0, 0, 9], [2, 0, 0, 10], [2, 0, 0, 11], [2, 0, 0, 12], [2, 0, 0, 13], [2, 0, 0, 14], [2, 0, 1, 14], [2, 0, 2, 14], [2, 0, 3, 14], [2, 0, 4, 14], [2, 0, 5, 14], [2, 0, 6, 14], [2, 0, 7, 14], [1, 0, 9, 14], [1, 0, 10, 14], [2, 0, 10, 14], [2, 1, 10, 14], [2, 2, 10, 14], [2, 3, 10, 14], [2, 4, 10, 14], [2, 5, 10, 14], [2, 6, 10, 14], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25], [0.25, 0.25, 0.25, 0.25]], &#x27;VALENCE_ELECTRONS&#x27;: [1.0, 1, 2, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], &#x27;D3_ELECTRONEGATIVITIES&#x27;: [1.0, 1.23695041, 1.26590957, 0.54341808, 0.99666991, 1.26691604, 1.40028282, 1.55819364, 1.5686644, 1.57540015, 1.15056627, 0.5593622, 0.72373742, 1.12910844, 1.1230684, 1.52672442, 1.40768172, 1.48154584, 1.31062963, 0.4037414, 0.75442607, 0.76482096, 0.98457281, 0.96702598, 1.05266584, 0.93274875, 1.04025281, 0.92738624, 1.0741921, 1.07900668, 1.04712861, 1.15018618, 1.15388455, 1.36313743, 1.36485106, 1.39801837, 1.18695346, 0.3627387, 0.58797255, 0.71961946, 0.96158233, 0.89585296, 0.81360499, 1.00794665, 0.92613682, 1.09152285, 1.1490707, 1.13508911, 1.08853785, 1.11005982, 1.12452195, 1.21642129, 1.36507125, 1.4034, 1.16653482, 0.34125098, 0.58884173, 0.68441115, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.56999999, 0.87936784, 1.02761808, 0.93297476, 1.10172128, 0.97350071, 1.16695666, 1.23997927, 1.18464453, 1.14191734, 1.12334192, 1.01485321, 1.12950808, 1.30804834, 1.33689961, 1.27465977, 1.0], &#x27;D3_HARDNESSES&#x27;: [1000.0, -0.35015861, 1.04121227, 0.09281243, 0.0941238, 0.26629137, 0.19408787, 0.05317918, 0.03151644, 0.32275132, 1.30996037, 0.2420651, 0.04147733, 0.11634126, 0.13155266, 0.1535065, 0.15250997, 0.17523529, 0.2877445, 0.42937314, 0.01896455, 0.07179178, -0.01121381, -0.0309337, 0.02716319, -0.01843812, -0.15270393, -0.09192645, -0.13418723, -0.09861139, 0.18338109, 0.08299615, 0.11370033, 0.19005278, 0.10980677, 0.12327841, 0.25345554, 0.58615231, 0.16093861, 0.0454853, -0.02478645, 0.01909943, 0.01402541, -0.03595279, 0.01137752, -0.03697213, 0.08009416, 0.02274892, 0.12801822, -0.02078702, 0.05284319, 0.0758119, 0.09663758, 0.09547417, 0.07803344, 0.64913257, 0.15348654, 0.05054344, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, 0.11, -0.02786741, 0.01057858, -0.03892226, -0.04574364, -0.0387408, -0.03782372, -0.07046855, 0.09546597, 0.21953269, 0.02522348, 0.1526305, 0.08042611, 0.01878626, 0.08715453, 0.10500484, 1000.0], &#x27;D3_KAPPA&#x27;: [0.0, 0.0491611, 0.10937243, -0.12349591, -0.02665108, -0.02631658, 0.06005196, 0.09279548, 0.11689703, 0.15704746, 0.07987901, -0.10002962, -0.07712863, -0.02170561, -0.04964052, 0.14250599, 0.0712666, 0.1368275, 0.14877121, -0.10219289, -0.08979338, -0.08273597, -0.01754829, -0.0276546, -0.02558926, -0.08010286, -0.04163215, -0.09369631, -0.03774117, -0.05759708, 0.02431998, -0.0105627, -0.02692862, 0.07657769, 0.06561608, 0.08006749, 0.141392, -0.05351029, -0.06701705, -0.07377246, -0.02927768, -0.03867291, -0.06929825, -0.04485293, -0.04800824, -0.01484022, 0.07917502, 0.06619243, 0.02434095, -0.01505548, -0.03030768, 0.01418235, 0.08953411, 0.08967527, 0.07277771, -0.02129476, -0.06188828, -0.06568203, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.11, -0.03585873, -0.031324, -0.05902379, -0.02827592, -0.0760626, -0.02123839, 0.03814822, 0.02146834, 0.01580538, -0.00894298, -0.05864876, -0.01817842, 0.07721851, 0.07936083, 0.05849285, 0.0], &#x27;D3_VDW_RADII&#x27;: [1.0, 0.55159092, 0.66205886, 0.90529132, 1.51710827, 2.86070364, 1.88862966, 1.3225029, 1.23166285, 1.77503721, 1.11955204, 1.28263182, 1.22344336, 1.70936266, 1.54075036, 1.38200579, 2.18849322, 1.36779065, 1.27039703, 1.64466502, 1.58859404, 1.65357953, 1.50021521, 1.30104175, 1.46301827, 1.32928147, 1.02766713, 1.02291377, 0.94343886, 1.14881311, 1.47080755, 1.76901636, 1.98724061, 2.41244711, 2.26739524, 2.95378999, 1.20807752, 1.65941046, 1.6273388, 1.61344972, 1.63220728, 1.60899928, 1.43501286, 1.54559205, 1.32663678, 1.37644152, 1.36051851, 1.23395526, 1.65734544, 1.5389524, 1.97542736, 1.97636542, 2.05432381, 3.80138135, 1.43893803, 1.75505957, 1.59815118, 1.76401732, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.63999999, 1.47055223, 1.81127084, 1.40189963, 1.54015481, 1.33721475, 1.57165422, 1.04815857, 1.78342098, 2.79106396, 1.7816084, 2.47588882, 2.37670734, 1.76613217, 2.66172302, 2.82773085, 1.0], &#x27;D3_COV_RADII&#x27;: [1.8897261278504418, 0.6047123609121414, 0.8692740188112033, 2.5133357500410876, 1.9275206504074507, 1.6062672086728755, 1.4172945958878314, 1.3417055507738136, 1.1905274605457783, 1.2094247218242828, 1.266116505659796, 2.929075498168185, 2.626719317712114, 2.3810549210915566, 2.1920823083065124, 2.0975960019139905, 1.946417911685955, 1.8708288665719373, 1.814137082736424, 3.703863210586866, 3.2314316786242556, 2.7967946692186536, 2.570027533876601, 2.532233011319592, 2.305465875977539, 2.2487740921420256, 2.1920823083065124, 2.0975960019139905, 2.078698740635486, 2.116493263192495, 2.229876830863521, 2.343260398534548, 2.2865686146990347, 2.2865686146990347, 2.1920823083065124, 2.1542877857495033, 2.210979569585017, 3.968424868485928, 3.4959933365233176, 3.08025358839622, 2.9101782368896805, 2.7778974079401495, 2.6078220564336094, 2.4188494436485657, 2.362157659813052, 2.362157659813052, 2.26767135342053, 2.4188494436485657, 2.570027533876601, 2.683411101547627, 2.6456165789906185, 2.6456165789906185, 2.570027533876601, 2.5133357500410876, 2.475541227484079, 4.384164616613025, 3.703863210586866, 3.4015070301307953, 3.08025358839622, 3.3259179850167775, 3.288123462459769, 3.2692262011812643, 3.2503289399027597, 3.174739894788742, 3.1936371560672465, 3.174739894788742, 3.155842633510238, 3.1369453722317333, 3.1180481109532288, 3.099150849674724, 3.212534417345751, 3.061356327117716, 2.8723837143326714, 2.759000146661645, 2.5889247951551053, 2.475541227484079, 2.43774670492707, 2.305465875977539, 2.3243631372560434, 2.343260398534548, 2.5133357500410876, 2.7212056241046363, 2.7212056241046363, 2.8534864530541673, 2.7401028853831404, 2.7778974079401495, 2.683411101547627, 1.8897261278504418], &#x27;VDW_RADII&#x27;: [1.0, 3.1, 2.65, 4.16, 4.17, 3.89, 3.59, 3.34, 3.19, 3.04, 2.91, 3.73, 4.27, 4.33, 4.2, 4.01, 3.86, 3.71, 3.55, 3.71, 4.65, 4.59, 4.51, 4.44, 3.99, 3.97, 4.23, 4.18, 3.82, 3.76, 4.02, 4.19, 4.2, 4.11, 4.04, 3.93, 3.82, 3.72, 4.54, 4.8151, 4.53, 4.2365, 4.099, 4.076, 3.9953, 3.95, 3.66, 3.82, 3.99, 4.23198, 4.303, 4.276, 4.22, 4.17, 4.08, 3.78, 4.77, 3.14, 3.26, 3.28, 3.3, 3.27, 3.32, 3.4, 3.62, 3.42, 3.26, 3.24, 3.3, 3.26, 3.22, 3.2, 4.21, 4.15, 4.08, 4.02, 3.84, 4.0, 3.92, 3.86, 3.98, 3.91, 4.31, 4.32, 4.097, 4.07, 4.23, 3.9, 4.98, 2.75, 2.85, 2.71, 3.0, 3.28, 3.45, 3.51, 3.47, 3.56, 3.55, 3.76, 3.89, 3.93, 3.78, 1.0], &#x27;C6_FREE&#x27;: [0.0, 6.5, 1.46, 1387.0, 214.0, 99.5, 46.6, 24.2, 15.6, 9.52, 6.38, 1556.0, 627.0, 528.0, 305.0, 185.0, 134.0, 94.6, 64.3, 3897.0, 2221.0, 1383.0, 1044.0, 832.0, 602.0, 552.0, 482.0, 408.0, 373.0, 253.0, 284.0, 498.0, 354.0, 246.0, 210.0, 162.0, 129.6, 4691.0, 3170.0, 1968.58, 1677.91, 1263.61, 1028.73, 1390.87, 609.754, 469.0, 157.5, 339.0, 452.0, 707.046, 587.417, 459.322, 396.0, 385.0, 285.9, 6582.08, 5727.0, 3884.5, 3708.33, 3911.84, 3908.75, 3847.68, 3708.69, 3511.71, 2781.53, 3124.41, 2984.29, 2839.95, 2724.12, 2576.78, 2387.53, 2371.8, 1274.8, 1019.92, 847.93, 710.2, 596.67, 359.1, 347.1, 298.0, 392.0, 717.44, 697.0, 571.0, 530.92, 457.53, 420.6, 4224.44, 4851.32, 3604.41, 4047.54, 2367.42, 1877.1, 2507.88, 2117.27, 2110.98, 2403.22, 1985.82, 1891.92, 1851.1, 1787.07, 1701.0, 1578.18, 0.0], &#x27;POLARIZABILITIES&#x27;: [1e-06, 4.5, 1.38, 164.2, 38.0, 21.0, 12.0, 7.4, 5.4, 3.8, 2.67, 162.7, 71.0, 60.0, 37.0, 25.0, 19.6, 15.0, 11.1, 292.9, 160.0, 120.0, 98.0, 84.0, 78.0, 63.0, 56.0, 50.0, 48.0, 42.0, 40.0, 60.0, 41.0, 29.0, 25.0, 20.0, 16.8, 319.2, 199.0, 126.737, 119.97, 101.603, 88.4225785, 80.083, 65.895, 56.1, 23.68, 50.6, 39.7, 70.22, 55.95, 43.67197, 37.65, 35.0, 27.3, 427.12, 275.0, 213.7, 204.7, 215.8, 208.4, 200.2, 192.1, 184.2, 158.3, 169.5, 164.64, 156.3, 150.2, 144.3, 138.9, 137.2, 99.52, 82.53, 71.041, 63.04, 55.055, 42.51, 39.68, 36.5, 33.9, 69.92, 61.8, 49.02, 45.013, 38.93, 33.54, 317.8, 246.2, 203.3, 217.0, 154.4, 127.8, 150.5, 132.2, 131.2, 143.6, 125.3, 121.5, 117.5, 113.4, 109.4, 105.4, 1e-06], &#x27;PAULING_ELECTRONEGATIVITY&#x27;: [0.0, 2.2, 4.42, 0.98, 1.57, 2.04, 2.55, 3.04, 3.44, 3.98, 4.44, 0.93, 1.31, 1.61, 1.9, 2.19, 2.58, 3.16, 3.57, 0.82, 1.0, 1.36, 1.54, 1.63, 1.66, 1.55, 1.83, 1.88, 1.91, 1.9, 1.65, 1.81, 2.01, 2.18, 2.55, 2.96, 3.37, 0.82, 0.95, 1.22, 1.33, 1.6, 2.16, 1.9, 2.2, 2.28, 2.2, 1.93, 1.69, 1.78, 1.96, 2.05, 2.1, 2.66, 3.12, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], &#x27;SJS_COORDINATES&#x27;: [[0, 0, 0, 0], [0, 1, 1, 0], [0, 1, -1, 0], [0, 2, 1, 0], [0, 2, -1, 0], [1, 3, 1, -1], [1, 3, 2, 0], [1, 3, 1, 1], [1, 3, -1, -1], [1, 3, -2, 0], [1, 3, -1, 1], [0, 3, 1, 0], [0, 3, -1, 0], [1, 4, 1, -1], [1, 4, 2, 0], [1, 4, 1, 1], [1, 4, -1, -1], [1, 4, -2, 0], [1, 4, -1, 1], [0, 4, 1, 0], [0, 4, -1, 0], [2, 5, 1, -2], [2, 5, 2, -1], [2, 5, 3, 0], [2, 5, 2, 1], [2, 5, 1, 2], [2, 5, -1, -2], [2, 5, -2, -1], [2, 5, -3, 0], [2, 5, -2, 1], [2, 5, -1, 2], [1, 5, 1, -1], [1, 5, 2, 0], [1, 5, 1, 1], [1, 5, -1, -1], [1, 5, -2, 0], [1, 5, -1, 1], [0, 5, 1, 0], [0, 5, -1, 0], [2, 6, 1, -2], [2, 6, 2, -1], [2, 6, 3, 0], [2, 6, 2, 1], [2, 6, 1, 2], [2, 6, -1, -2], [2, 6, -2, -1], [2, 6, -3, 0], [2, 6, -2, 1], [2, 6, -1, 2], [1, 6, 1, -1], [1, 6, 2, 0], [1, 6, 1, 1], [1, 6, -1, -1], [1, 6, -2, 0], [1, 6, -1, 1], [0, 6, 1, 0], [0, 6, -1, 0], [2, 7, 1, -2], [3, 7, 1, -3], [3, 7, 2, -2], [3, 7, 3, -1], [3, 7, 4, 0], [3, 7, 3, 1], [3, 7, 2, 2], [3, 7, 1, 3], [3, 7, -1, -3], [3, 7, -2, -2], [3, 7, -3, -1], [3, 7, -4, 0], [3, 7, -3, 1], [3, 7, -2, 2], [3, 7, -1, 3], [2, 7, 2, -1], [2, 7, 3, 0], [2, 7, 2, 1], [2, 7, 1, 2], [2, 7, -1, -2], [2, 7, -2, -1], [2, 7, -3, 0], [2, 7, -2, 1], [2, 7, -1, 2], [1, 7, 1, -1], [1, 7, 2, 0], [1, 7, 1, 1], [1, 7, -1, -1], [1, 7, -2, 0], [1, 7, -1, 1], [0, 7, 1, 0], [0, 7, -1, 0], [2, 8, 1, -2], [3, 8, 1, -3], [3, 8, 2, -2], [3, 8, 3, -1], [3, 8, 4, 0], [3, 8, 3, 1], [3, 8, 2, 2], [3, 8, 1, 3], [3, 8, -1, -3], [3, 8, -2, -2], [3, 8, -3, -1], [3, 8, -4, 0], [3, 8, -3, 1], [3, 8, -2, 2], [3, 8, -1, 3], [2, 8, 2, -1], [2, 8, 3, 0], [2, 8, 2, 1], [2, 8, 1, 2], [2, 8, -1, -2], [2, 8, -2, -1], [2, 8, -3, 0], [2, 8, -2, 1], [2, 8, -1, 2], [1, 8, 1, -1], [1, 8, 2, 0], [1, 8, 1, 1], [1, 8, -1, -1], [1, 8, -2, 0], [1, 8, -1, 1]]}"}, {"fullname": "fennol.utils.spherical_harmonics", "modulename": "fennol.utils.spherical_harmonics", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.spherical_harmonics.CG_SU2", "modulename": "fennol.utils.spherical_harmonics", "qualname": "CG_SU2", "kind": "function", "doc": "<p>Clebsch-Gordan coefficients for the direct product of two irreducible representations of \\( SU(2) \\)</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>np.Array</code></strong>: tensor \\( C \\) of shape \\( (2j_1+1, 2j_2+1, 2j_3+1) \\)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">j1</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">j2</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">j3</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.spherical_harmonics.change_basis_real_to_complex", "modulename": "fennol.utils.spherical_harmonics", "qualname": "change_basis_real_to_complex", "kind": "function", "doc": "<p>Change of basis matrix from real to complex spherical harmonics\n<a href=\"https://en.wikipedia.org/wiki/Spherical_harmonics#Real_form\">https://en.wikipedia.org/wiki/Spherical_harmonics#Real_form</a>\nadapted from e3nn.o3._wigner</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">l</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.spherical_harmonics.CG_SO3", "modulename": "fennol.utils.spherical_harmonics", "qualname": "CG_SO3", "kind": "function", "doc": "<p>Clebsch-Gordan coefficients for the direct product of two irreducible representations of \\( SO(3) \\)</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong><code>torch.Tensor</code></strong>: tensor \\( C \\) of shape \\( (2l_1+1, 2l_2+1, 2l_3+1) \\)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">j1</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">j2</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">j3</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"n\">array</span><span class=\"o\">&gt;</span>:</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.spherical_harmonics.generate_spherical_harmonics", "modulename": "fennol.utils.spherical_harmonics", "qualname": "generate_spherical_harmonics", "kind": "function", "doc": "<p>returns a function that computes spherical harmonic up to lmax\n(adapted from e3nn)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lmax</span>, </span><span class=\"param\"><span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">print_code</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">jit</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">vmapped</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.spherical_harmonics.spherical_to_cartesian_tensor", "modulename": "fennol.utils.spherical_harmonics", "qualname": "spherical_to_cartesian_tensor", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Q</span>, </span><span class=\"param\"><span class=\"n\">lmax</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "fennol.utils.xenonpy_props", "modulename": "fennol.utils.xenonpy_props", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "fennol.utils.xenonpy_props.XENONPY_PROPS", "modulename": "fennol.utils.xenonpy_props", "qualname": "XENONPY_PROPS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [1.0, 79.0, 154.0, 14.1, 1.008, 20.28, 56.79964, 6.51, 31.0, 32.0, 111.41993, 113.10591, 25.0, 0.0708, 4.50711, 2.2, 0.75419, 13.61, 0.2638, 2.2, 13.59844, 0.06, 7.853, -3.33129, 2.36512, 2.97987, 0.0, 6.615, 3535.56214, 3431.55146, 14.304, 28.836, 32.02, 0.904, 217.998, 3.75, 103.0, 14.01, 11.42, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.12273, 0.1805, 110.0, 120.0, 162.0, 288.6, 1270.0, 0.66679], [2.0, 147.83264, 134.0, 31.8, 4.0026, 4.216, 85.10663, 1.47, 28.0, 46.0, 114.70835, 105.7406, 122.88727, 0.147, 1.38375, 4.16, -19.7, 24.59, 0.44271, 2.38765, 24.58739, 6.0018, 18.098, 0.00114, 2.90873, 3.66477, 0.0, 12.305, 3200.0, 3900.0, 5.13, 20.786, 19.08, 0.08, 120.17814, 3.57, 1.0, 0.95, 21.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 1.0, 5.188, 0.1513, 140.0, 143.0, 153.0, 236.2, 970.0, 0.20505], [3.0, 155.0, 220.0, 13.1, 6.94, 1118.15, 11.0, 1410.0, 128.0, 133.0, 124.0, 110.59136, 145.0, 0.534, 164.0, 0.98, 0.61805, 5.392, 0.10509, 0.98, 5.39172, 3.0, 0.0, -1.86989, 3.21357, 4.04885, 0.0, 16.59333, 2900.0, 4200.0, 3.582, 24.86, 21.63, 148.0, 159.3, 3.49, 12.0, 553.69, 13.02, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 3.489, 85.0, 182.0, 212.0, 255.0, 245.1, 6000.0, 24.33], [4.0, 112.0, 219.0, 5.0, 9.01218, 3243.0, 130.0, 214.0, 96.0, 102.0, 90.0, 85.0, 105.0, 1.848, 37.71, 1.57, -2.4, 9.323, 0.14499, 1.57, 9.3227, 7.895, 0.0, -3.75504, 2.50824, 3.16018, 0.0, 7.89, 8000.0, 4000.0, 1.825, 16.443, 8.11, 309.0, 324.0, 2.29, 77.0, 1551.0, 4.85, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 1.824, 190.0, 153.0, 198.0, 223.0, 274.5, 13000.0, 5.6], [5.0, 98.0, 205.0, 4.6, 10.81, 3931.0, 320.0, 99.2, 84.0, 85.0, 78.0, 73.0, 85.0, 2.34, 20.53, 2.04, 0.27972, 12.13, 0.18489, 2.04, 8.29802, 50.2, 1.524, -6.6777, 2.42978, 3.06133, 0.0, 7.1725, 2900.0, 2000.0, 1.026, 11.087, 7.75, 504.5, 565.0, 8.73, 86.0, 2573.0, 4.39, 5.0, 3.0, 0.0, 0.0, 0.0, 0.0, 5.0, 1.0, 0.0, 2.0, 2.0, 1.025, 27.0, 192.0, 191.0, 215.0, 408.3, 16200.0, 3.03], [6.0, 91.0, 190.0, 5.3, 12.011, 5100.0, 33.0, 47.9, 73.0, 75.0, 67.0, 60.0, 70.0, 2.25, 20.53, 2.55, 1.26212, 15.05, 0.22478, 2.55, 11.2603, 117.4, 4.496, -9.20971, 2.24269, 2.82562, 0.0, 5.64, 500.0, 500.0, 0.709, 8.517, 5.67, 659.28208, 716.87, 3.57, 95.0, 3820.0, 5.29, 4.0, 4.0, 0.0, 0.0, 0.0, 0.0, 4.0, 2.0, 0.0, 2.0, 2.0, 0.711, 140.0, 170.0, 177.0, 204.0, 385.1, 18350.0, 1.67], [7.0, 92.0, 179.0, 17.3, 14.007, 77.4, 57.36488, 25.7, 71.0, 71.0, 60.0, 54.0, 65.0, 0.808, 7.6, 3.04, -1.4, 18.13, 0.26493, 3.04, 14.5341, 0.355, 6.437, -8.21144, 3.09118, 3.89465, 0.0, 14.76875, 1300.0, 500.0, 1.04, 29.124, 22.68, 20.05586, 472.44, 4.039, 100.0, 63.29, 13.54, 3.0, 5.0, 0.0, 0.0, 0.0, 0.0, 3.0, 3.0, 0.0, 2.0, 2.0, 0.77295, 0.02583, 155.0, 166.0, 193.0, 366.0, 333.6, 1.1], [8.0, 146.20142, 171.0, 14.0, 15.999, 90.19, 76.10604, 16.7, 66.0, 63.0, 57.0, 53.0, 60.0, 1.149, 5.24, 3.44, 1.46111, 21.36, 0.30457, 3.44, 13.61805, 0.22, 0.0, -4.75679, 2.63089, 3.31472, 0.0, 9.105, 500.0, 500.0, 0.918, 29.378, 17.36, 15.57909, 249.229, 6.83, 101.0, 54.8, 17.36, 2.0, 6.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.0, 2.0, 2.0, 1.07919, 0.02658, 152.0, 150.0, 182.0, 350.0, 317.5, 0.802], [9.0, 134.02361, 163.0, 17.1, 18.9984, 85.01, 46.79894, 10.2, 57.0, 64.0, 59.0, 53.0, 50.0, 1.108, 3.7, 3.98, 3.40119, 24.8, 0.34444, 3.98, 17.4228, 0.255, 1.97, -1.69806, 2.68769, 3.38628, 0.0, 9.7075, 1500.0, 1500.0, 0.824, 31.304, 16.42, 6.54, 79.335, 5.631, 102.0, 53.53, 11.2, 1.0, 7.0, 0.0, 0.0, 0.0, 0.0, 1.0, 5.0, 0.0, 2.0, 2.0, 1.24385, 0.0277, 147.0, 146.0, 171.0, 336.4, 2826.91588, 0.557], [10.0, 148.62954, 156.0, 16.8, 20.1797, 27.1, 75.09588, 6.91, 58.0, 67.0, 96.0, 115.53221, 126.74248, 1.204, 2.67, 4.79, 1.56323, 28.31, 0.38439, 2.26543, 21.56454, 0.164, 13.088, 0.09404, 2.93489, 3.69773, 0.0, 12.64, 3573.15707, 3725.08899, 1.03, 20.786, 23.09, 1.74, 124.67947, 4.43, 2.0, 48.0, 13.23, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 0.0, 2.0, 2.0, 1.029, 0.0491, 154.0, 158.0, 160.0, 324.3, 936.0, 0.39432], [11.0, 190.0, 225.0, 23.7, 22.98977, 1156.1, 6.3, 1570.0, 166.0, 155.0, 160.0, 110.07106, 180.0, 0.971, 162.7, 0.93, 0.54793, 5.14, 0.09321, 0.93, 5.13908, 2.6, 0.0, -1.26024, 3.88167, 4.8906, 0.0, 29.24333, 1100.0, 500.0, 1.228, 28.23, 39.76, 97.9, 107.5, 4.23, 11.0, 370.96, 23.78, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 3.0, 1.222, 140.0, 227.0, 250.0, 270.0, 298.3, 3200.0, 24.11], [12.0, 160.0, 240.0, 14.0, 24.305, 1363.0, 45.0, 629.0, 141.0, 139.0, 132.0, 127.0, 150.0, 1.738, 70.89, 1.31, 2.11323, 7.646, 0.12164, 1.31, 7.64624, 8.48, 0.0, -1.54227, 3.57733, 4.50715, 0.0, 22.89, 5300.0, 500.0, 1.023, 24.869, 23.48, 131.8, 147.1, 3.21, 73.0, 922.0, 14.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 3.0, 1.025, 160.0, 173.0, 251.0, 243.0, 302.1, 4602.0, 10.6], [13.0, 143.0, 239.0, 10.0, 26.98154, 2740.0, 76.0, 520.0, 121.0, 126.0, 113.0, 111.0, 125.0, 2.6989, 46.0, 1.61, 0.43283, 9.539, 0.15008, 1.61, 5.98577, 10.71, 0.0, -3.74542, 3.20624, 4.03961, 0.0, 16.48, 1600.0, 1000.0, 0.897, 24.2, 16.61, 284.1, 330.9, 4.05, 80.0, 933.5, 10.0, 5.0, 3.0, 0.0, 0.0, 0.0, 0.0, 5.0, 1.0, 0.0, 2.0, 3.0, 0.9, 235.0, 184.0, 225.0, 236.0, 449.9, 5100.0, 6.8], [14.0, 132.0, 232.0, 12.1, 28.085, 2628.0, 100.0, 308.0, 111.0, 116.0, 107.0, 102.0, 110.0, 2.33, 37.31, 1.9, 1.38952, 11.33, 0.1785, 1.9, 8.15168, 50.21, 0.773, -5.42492, 3.44485, 4.34024, 0.0, 20.44, 4700.0, 1000.0, 0.712, 19.99, 20.02, 383.0, 450.0, 5.43, 85.0, 1683.0, 12.06, 4.0, 4.0, 0.0, 0.0, 0.0, 0.0, 4.0, 2.0, 0.0, 2.0, 3.0, 0.703, 150.0, 210.0, 219.0, 229.0, 429.5, 2200.0, 5.53], [15.0, 128.0, 223.0, 17.0, 30.97376, 553.0, 11.0, 187.0, 107.0, 111.0, 102.0, 94.0, 100.0, 1.82, 24.93, 2.19, 0.74661, 13.33, 0.20693, 2.19, 10.48669, 18.54, 1.625, -5.40051, 3.56059, 4.48606, 0.0, 22.57024, 2000.0, 5100.0, 0.769, 23.824, 18.99, 49.8, 316.5, 7.17, 90.0, 317.3, 17.02, 3.0, 5.0, 0.0, 0.0, 0.0, 0.0, 3.0, 3.0, 0.0, 2.0, 3.0, 0.757, 0.236, 180.0, 190.0, 222.0, 414.7, 4050.74287, 3.63], [16.0, 127.0, 214.0, 15.5, 32.06, 717.824, 7.7, 140.0, 105.0, 103.0, 94.0, 95.0, 100.0, 2.07, 24.93, 2.58, 2.0771, 15.31, 0.23596, 2.58, 10.36001, 1.721, 2.202, -4.09722, 3.72228, 4.68978, 0.0, 25.78687, 700.0, 1000.0, 0.708, 22.7, 25.76, 10.5, 277.17, 10.47, 94.0, 386.0, 15.53, 2.0, 6.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.0, 2.0, 3.0, 0.732, 0.205, 180.0, 189.0, 215.0, 403.5, 3826.4736, 2.9], [17.0, 147.35382, 206.0, 18.7, 35.45, 238.6, 1.1, 97.1, 102.0, 99.0, 95.0, 93.0, 100.0, 1.56, 24.93, 3.16, 3.61273, 16.97, 0.2638, 3.16, 12.96763, 3.2, 2.493, -1.78443, 3.65918, 4.61028, 0.0, 24.4975, 1500.0, 1000.0, 0.479, 33.949, 29.05, 20.41, 121.302, 6.24, 99.0, 172.2, 17.39, 1.0, 7.0, 0.0, 0.0, 0.0, 0.0, 1.0, 5.0, 0.0, 2.0, 3.0, 0.74046, 0.0089, 175.0, 182.0, 207.0, 394.7, 206.0, 2.18], [18.0, 149.39984, 197.0, 24.2, 39.948, 87.3, 72.15428, 67.4, 106.0, 96.0, 107.0, 96.0, 134.2558, 1.4, 11.07, 3.24, -11.5, 19.17, 0.2922, 2.2826, 15.75961, 1.18, 9.26, 0.05854, 3.8503, 4.85107, 0.0, 28.54, 3276.13041, 3884.79588, 0.52, 20.786, 36.3, 6.52, 119.74465, 5.26, 3.0, 83.8, 22.56, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 6.0, 0.0, 2.0, 3.0, 0.138, 0.01772, 188.0, 194.0, 199.0, 386.8, 319.0, 1.6411], [19.0, 235.0, 234.0, 45.3, 39.0983, 1047.0, 3.1, 3910.0, 203.0, 196.0, 193.0, 137.23505, 220.0, 0.856, 290.6, 0.82, 0.50147, 4.34, 0.09819, 0.82, 4.34066, 2.335, 0.0, -1.09754, 5.2682, 6.63752, 0.0, 73.10667, 1700.0, 7200.0, 0.757, 29.6, 75.63, 2.33, 89.0, 5.23, 10.0, 336.8, 45.94, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 4.0, 0.753, 100.0, 275.0, 273.0, 309.0, 381.2, 2000.0, 43.06], [20.0, 197.0, 270.0, 29.9, 40.078, 1757.0, 17.0, 2230.0, 176.0, 171.0, 147.0, 133.0, 180.0, 1.55, 169.0, 1.0, 0.02455, 6.113, 0.11541, 1.0, 6.11316, 8.54, 0.0, -1.94833, 4.22726, 5.32601, 0.0, 37.77, 3900.0, 1500.0, 0.647, 25.929, 44.19, 153.6, 177.8, 5.58, 16.0, 1112.0, 26.2, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.653, 200.0, 231.0, 262.0, 281.0, 339.9, 3810.0, 25.0], [21.0, 162.0, 263.0, 15.0, 44.95591, 3104.0, 57.0, 1570.0, 170.0, 148.0, 116.0, 114.0, 160.0, 2.99, 142.28, 1.36, 0.188, 7.042, 0.11938, 1.36, 6.56149, 14.1, 0.0, -6.28551, 3.54287, 4.46374, 1e-05, 22.235, 5500.0, 4500.0, 0.568, 25.52, 24.96, 332.7, 377.8, 3.31, 19.0, 1814.0, 15.0, 9.0, 3.0, 9.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.556, 16.0, 215.0, 258.0, 261.0, 329.5, 5050.91335, 17.8], [22.0, 147.0, 257.0, 10.6, 47.867, 3560.0, 110.0, 1200.0, 160.0, 136.0, 117.0, 108.0, 140.0, 4.54, 114.34, 1.54, 0.079, 8.17, 0.12336, 1.54, 6.82812, 14.15, 0.0, -7.77523, 3.2198, 4.05669, 2e-05, 16.69, 1100.0, 1600.0, 0.524, 25.06, 17.67, 422.6, 473.0, 2.95, 51.0, 1933.0, 10.64, 8.0, 4.0, 8.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.523, 22.0, 211.0, 246.0, 239.0, 317.5, 4140.0, 14.6], [23.0, 134.0, 252.0, 8.35, 50.9415, 3650.0, 160.0, 955.0, 153.0, 134.0, 112.0, 106.0, 135.0, 6.11, 97.34, 1.63, 0.525, 9.063, 0.12733, 1.63, 6.74619, 21.5, 0.0, -8.93926, 2.96326, 3.73347, 0.0, 13.01, 3300.0, 3400.0, 0.489, 24.89, 13.88, 460.0, 515.5, 3.02, 54.0, 2160.0, 8.32, 7.0, 5.0, 7.0, 3.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.485, 31.0, 207.0, 242.0, 229.0, 314.4, 4560.0, 12.4], [24.0, 130.0, 233.0, 7.23, 51.9961, 2945.0, 160.0, 709.0, 139.0, 122.0, 111.0, 103.0, 140.0, 7.18, 78.4, 1.66, 0.666, 9.77, 0.13131, 1.66, 6.76651, 21.0, 0.0, -9.50572, 2.81808, 3.55056, 0.0, 11.19, 3100.0, 4100.0, 0.449, 23.35, 12.01, 342.0, 397.48, 2.88, 57.0, 2130.0, 7.23, 6.0, 6.0, 5.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 4.0, 0.488, 94.0, 206.0, 245.0, 225.0, 302.3, 5940.0, 11.6], [25.0, 135.0, 242.0, 7.39, 54.93804, 2235.0, 120.0, 635.0, 150.0, 119.0, 105.0, 103.0, 140.0, 7.21, 66.8, 1.55, 2.57003, 10.34, 0.13528, 1.55, 7.43402, 12.91, 0.0, -9.02057, 2.75784, 3.47466, 0.00031, 10.48759, 1600.0, 1800.0, 0.479, 26.32, 12.2, 221.0, 283.3, 8.89, 60.0, 1517.0, 7.35, 5.0, 7.0, 5.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.477, 7.8, 205.0, 245.0, 224.0, 296.1, 5150.0, 9.4], [26.0, 126.0, 226.0, 7.1, 55.845, 3023.0, 170.0, 548.0, 142.0, 116.0, 109.0, 102.0, 140.0, 7.874, 63.93, 1.83, 0.151, 10.64, 0.13925, 1.83, 7.9024, 13.81, 0.0, -8.28548, 2.77892, 3.50122, 2.11066, 10.73, 2400.0, 1400.0, 0.449, 25.1, 11.78, 340.0, 415.5, 2.87, 61.0, 1808.0, 7.09, 4.0, 8.0, 4.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.443, 80.0, 204.0, 244.0, 223.0, 291.2, 4910.0, 8.4], [27.0, 125.0, 222.0, 6.7, 58.93319, 3143.0, 180.0, 461.0, 138.0, 111.0, 103.0, 96.0, 135.0, 8.9, 57.71, 1.88, 0.66226, 10.86, 0.14324, 1.88, 7.88101, 16.2, 0.0, -7.08039, 2.73641, 3.44766, 1.54847, 10.245, 3100.0, 2700.0, 0.421, 24.81, 11.12, 389.1, 426.7, 2.51, 64.0, 1768.0, 6.67, 3.0, 9.0, 3.0, 7.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.456, 100.0, 200.0, 240.0, 223.0, 287.2, 4720.0, 7.5], [28.0, 124.0, 219.0, 6.6, 58.6934, 3005.0, 180.0, 393.0, 124.0, 110.0, 101.0, 101.0, 135.0, 8.902, 51.1, 1.91, 1.156, 11.13, 0.14721, 1.91, 7.6398, 17.48, 0.0, -5.54632, 2.74307, 3.45605, 0.59539, 10.32, 1000.0, 1500.0, 0.444, 26.07, 10.86, 378.6, 430.1, 3.52, 67.0, 1726.0, 6.59, 2.0, 10.0, 2.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.443, 91.0, 197.0, 240.0, 222.0, 283.4, 4970.0, 6.8], [29.0, 128.0, 217.0, 7.1, 63.546, 2840.0, 140.0, 264.0, 132.0, 112.0, 115.0, 120.0, 135.0, 8.96, 46.5, 1.9, 1.235, 10.96, 0.15117, 1.9, 7.72638, 13.6, 0.0, -3.68065, 2.80797, 3.53782, 0.0, 11.07, 1600.0, 1500.0, 0.385, 24.44, 11.81, 304.6, 337.4, 3.61, 72.0, 1356.6, 7.11, 1.0, 11.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 4.0, 0.385, 400.0, 196.0, 238.0, 226.0, 349.5, 3570.0, 6.2], [30.0, 138.0, 222.0, 9.2, 65.38, 1180.0, 70.0, 276.0, 122.0, 118.0, 120.0, 102.30618, 135.0, 7.133, 38.8, 1.65, 2.31998, 9.395, 0.15515, 1.65, 9.3942, 7.068, 0.0, -1.24, 3.03369, 3.82222, 0.0, 13.96, 1600.0, 1900.0, 0.388, 25.39, 15.19, 114.8, 130.4, 2.66, 76.0, 692.73, 9.16, 0.0, 12.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 4.0, 0.388, 120.0, 201.0, 239.0, 229.0, 276.3, 3700.0, 5.75], [31.0, 141.0, 233.0, 11.8, 69.723, 2676.0, 82.41716, 456.0, 122.0, 124.0, 117.0, 121.0, 130.0, 5.91, 49.9, 1.81, 0.43, 10.39, 0.17238, 1.81, 5.9993, 5.585, 0.0, -3.01226, 3.35355, 4.22521, 0.0, 18.8575, 5500.0, 1900.0, 0.373, 26.03, 19.6, 270.3, 271.96, 4.51, 81.0, 302.93, 11.8, 5.0, 13.0, 0.0, 10.0, 0.0, 0.0, 5.0, 1.0, 0.0, 2.0, 4.0, 0.372, 29.0, 187.0, 232.0, 246.0, 438.3, 2740.0, 8.12], [32.0, 137.0, 234.0, 13.6, 72.63, 3103.0, 96.53794, 365.0, 120.0, 121.0, 111.0, 114.0, 125.0, 5.323, 39.43, 2.01, 1.23271, 11.8, 0.18959, 2.01, 7.89943, 36.94, 0.383, -4.61604, 3.58331, 4.51468, 0.0, 23.005, 5300.0, 1900.0, 0.32, 23.222, 22.23, 328.0, 372.0, 5.66, 84.0, 1210.6, 13.63, 4.0, 14.0, 0.0, 10.0, 0.0, 0.0, 4.0, 2.0, 0.0, 2.0, 4.0, 0.322, 60.0, 211.0, 229.0, 244.0, 428.0, 5400.0, 5.84], [33.0, 139.0, 231.0, 13.1, 74.92159, 876.0, 22.0, 260.0, 119.0, 121.0, 114.0, 106.0, 115.0, 5.73, 29.8, 2.18, 0.804, 13.08, 0.20682, 2.18, 9.7886, 24.44, 0.0, -4.65089, 3.53968, 4.45972, 0.0, 22.175, 3300.0, 4000.0, 0.329, 24.64, 21.52, 32.4, 302.5, 4.13, 89.0, 1090.0, 12.95, 3.0, 15.0, 0.0, 10.0, 0.0, 0.0, 3.0, 3.0, 0.0, 2.0, 4.0, 0.328, 50.0, 185.0, 188.0, 236.0, 423.0, 3638.67827, 4.31], [34.0, 140.0, 224.0, 16.5, 78.971, 958.1, 8.3, 233.0, 120.0, 116.0, 107.0, 107.0, 115.0, 4.79, 26.24, 2.55, 2.02067, 14.34, 0.22403, 2.55, 9.75239, 6.69, 0.799, -3.47079, 3.72868, 4.69784, 0.0, 25.92, 2200.0, 6000.0, 0.321, 25.363, 29.81, 59.7, 227.2, 4.36, 93.0, 490.0, 16.42, 2.0, 16.0, 0.0, 10.0, 0.0, 0.0, 2.0, 4.0, 0.0, 2.0, 4.0, 0.88722, 0.52, 190.0, 182.0, 229.0, 420.5, 3350.0, 3.77], [35.0, 157.55531, 219.0, 23.5, 79.904, 331.9, 1.9, 187.0, 120.0, 114.0, 109.0, 110.0, 115.0, 3.12, 21.8, 2.96, 3.36359, 15.88, 0.24126, 2.96, 11.8138, 5.285, 1.457, -1.58303, 3.89212, 4.90376, 0.0, 29.48, 3300.0, 6900.0, 0.474, 75.69, 65.14, 29.56, 111.85, 6.67, 98.0, 265.9, 19.78, 1.0, 17.0, 0.0, 10.0, 0.0, 0.0, 1.0, 5.0, 0.0, 2.0, 4.0, 1.14591, 0.12, 185.0, 186.0, 222.0, 418.9, 2467.61256, 3.05], [36.0, 152.93791, 212.0, 32.2, 83.798, 120.85, 71.98582, 136.0, 116.0, 117.0, 121.0, 108.0, 129.87141, 2.155, 17.075, 3.0, 2.60339, 17.54, 0.25848, 2.28807, 13.99961, 1.164, 7.535, 0.08754, 4.16248, 5.24439, 0.0, 36.06, 3320.76369, 4359.60984, 0.248, 20.786, 44.81, 9.05, 124.55858, 5.72, 4.0, 116.6, 27.99, 0.0, 18.0, 0.0, 10.0, 0.0, 0.0, 0.0, 6.0, 0.0, 2.0, 4.0, 0.247, 0.00943, 202.0, 207.0, 215.0, 414.1, 1120.0, 2.4844], [37.0, 248.0, 240.0, 55.9, 85.4678, 961.0, 2.5, 4660.0, 220.0, 210.0, 202.0, 141.14616, 235.0, 1.532, 318.8, 0.82, 0.48592, 4.177, 0.10469, 0.82, 4.17713, 2.19, 0.0, -0.96334, 5.66128, 7.13277, 0.0, 90.7225, 6000.0, 6000.0, 0.363, 31.06, 93.09, 75.8, 80.9, 5.59, 9.0, 312.2, 55.76, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 5.0, 0.36, 58.0, 303.0, 321.0, 325.0, 411.4, 1300.0, 47.24], [38.0, 215.0, 279.0, 33.7, 87.62, 1657.0, 72.48047, 3230.0, 195.0, 185.0, 157.0, 139.0, 200.0, 2.54, 186.0, 0.95, 0.048, 5.695, 0.11851, 0.95, 5.69485, 7.43, 0.0, -1.68281, 4.76895, 6.00851, 0.0, 54.23, 4200.0, 3000.0, 0.306, 26.79, 56.08, 144.0, 164.0, 6.08, 15.0, 1042.0, 33.94, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 5.0, 0.301, 35.0, 249.0, 284.0, 300.0, 364.1, 4504.23205, 27.6], [39.0, 178.0, 274.0, 19.8, 88.90584, 3611.0, 41.0, 2600.0, 190.0, 163.0, 130.0, 124.0, 180.0, 4.47, 153.0, 1.22, 0.307, 6.631, 0.1217, 1.22, 6.2173, 11.39, 0.0, -6.4646, 4.01515, 5.05877, 0.0, 32.365, 9800.0, 2600.0, 0.298, 26.53, 32.97, 367.0, 424.7, 3.65, 25.0, 1795.0, 19.88, 9.0, 3.0, 9.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 5.0, 0.284, 17.0, 232.0, 275.0, 271.0, 334.5, 3300.0, 22.7], [40.0, 160.0, 268.0, 14.1, 91.224, 4650.0, 172.51982, 1360.0, 175.0, 154.0, 127.0, 121.0, 155.0, 6.506, 121.0, 1.33, 0.426, 7.808, 0.12489, 1.33, 6.6339, 21.0, 0.0, -8.54596, 3.59315, 4.52708, 0.0, 23.195, 3400.0, 2600.0, 0.278, 25.36, 23.29, 567.0, 610.0, 3.23, 49.0, 2125.0, 14.02, 8.0, 4.0, 8.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 5.0, 0.281, 23.0, 223.0, 252.0, 254.0, 312.4, 3800.0, 17.9], [41.0, 146.0, 251.0, 10.8, 92.90637, 5015.0, 170.0, 1140.0, 164.0, 147.0, 125.0, 116.0, 145.0, 8.57, 106.0, 1.6, 0.91741, 8.34, 0.12808, 1.6, 6.75885, 30.0, 0.0, -10.09332, 3.3129, 4.17399, 0.0, 18.18, 8500.0, 8800.0, 0.265, 24.6, 18.15, 680.0, 733.0, 3.3, 53.0, 2741.0, 10.83, 7.0, 5.0, 6.0, 4.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 5.0, 0.268, 54.0, 218.0, 256.0, 243.0, 316.5, 3480.0, 15.7], [42.0, 139.0, 244.0, 9.4, 95.95, 4885.0, 230.0, 1030.0, 154.0, 138.0, 121.0, 113.0, 145.0, 10.22, 72.5, 2.16, 0.748, 8.71, 0.13127, 2.16, 7.09243, 37.48, 0.0, -10.84611, 3.15416, 3.974, 0.0, 15.69, 2400.0, 5300.0, 0.251, 24.06, 15.59, 590.0, 658.98, 3.15, 56.0, 2890.0, 9.38, 6.0, 6.0, 5.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 5.0, 0.251, 139.0, 217.0, 245.0, 239.0, 305.2, 6190.0, 12.8], [43.0, 136.0, 241.0, 8.5, 97.90721, 5150.0, 204.3977, 939.0, 147.0, 128.0, 120.0, 110.0, 135.0, 11.5, 80.4, 1.9, 0.55, 8.94, 0.13446, 2.1, 7.28, 33.29, 0.0, -10.35515, 3.05706, 3.85165, 0.0, 14.285, 6064.67559, 4493.217, 1.54116, 23.04097, 14.22, 585.0, 678.0, 2.74, 59.0, 2445.0, 8.63, 5.0, 7.0, 5.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 5.0, 0.243, 51.0, 216.0, 244.0, 236.0, 299.8, 5395.11868, 11.4], [44.0, 134.0, 237.0, 8.3, 101.07, 4173.0, 220.0, 809.0, 146.0, 125.0, 114.0, 103.0, 130.0, 12.41, 65.0, 2.2, 1.05, 9.1, 0.13765, 2.2, 7.3605, 38.59, 0.0, -9.19463, 3.00074, 3.7807, 0.0, 13.51, 3200.0, 8000.0, 0.238, 24.06, 14.03, 521.27748, 650.6, 2.7, 62.0, 2583.0, 8.17, 4.0, 8.0, 3.0, 7.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 5.0, 0.238, 120.0, 213.0, 246.0, 234.0, 296.3, 5970.0, 9.6], [45.0, 134.0, 233.0, 8.3, 102.9055, 4000.0, 380.0, 708.0, 142.0, 125.0, 110.0, 106.0, 135.0, 12.41, 58.0, 2.28, 1.137, 9.259, 0.14084, 2.28, 7.4589, 26.59, 0.0, -7.25365, 3.01033, 3.79278, 0.0, 13.64, 3200.0, 8000.0, 0.243, 24.98, 11.58, 494.0, 556.0, 3.8, 65.0, 2239.0, 8.28, 3.0, 9.0, 2.0, 8.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 5.0, 0.244, 150.0, 210.0, 244.0, 234.0, 292.9, 4700.0, 8.6], [46.0, 137.0, 215.0, 8.9, 106.42, 3413.0, 180.0, 628.0, 139.0, 120.0, 117.0, 112.0, 140.0, 12.02, 32.0, 2.2, 0.562, 9.402, 0.14403, 2.2, 8.3369, 16.74, 0.0, -5.13777, 3.06595, 3.86285, 0.0, 14.41, 3200.0, 8000.0, 0.244, 25.98, 14.72, 372.4, 376.6, 3.89, 69.0, 1825.0, 8.56, 0.0, 10.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 0.244, 72.0, 210.0, 215.0, 237.0, 289.9, 3070.0, 4.8], [47.0, 144.0, 225.0, 10.3, 107.8682, 2485.0, 100.0, 341.0, 145.0, 128.0, 139.0, 137.0, 160.0, 10.5, 52.5, 1.93, 1.302, 11.05, 0.14722, 1.93, 7.57623, 11.3, 0.0, -2.76539, 3.19648, 4.02731, 0.0, 16.33, 1200.0, 1400.0, 0.235, 25.35, 17.05, 254.1, 284.9, 4.09, 71.0, 1235.1, 10.27, 1.0, 11.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 5.0, 0.237, 430.0, 211.0, 253.0, 243.0, 314.8, 2600.0, 6.78], [48.0, 154.0, 238.0, 13.1, 112.414, 1038.0, 42.0, 405.0, 144.0, 136.0, 144.0, 110.62199, 155.0, 8.65, 49.65, 1.69, 2.55043, 8.995, 0.15041, 1.69, 8.99382, 6.21, 0.0, -0.81217, 3.39092, 4.27229, 0.0, 19.495, 1700.0, 1300.0, 0.231, 26.02, 21.59, 59.1, 111.8, 2.98, 75.0, 594.1, 13.0, 0.0, 12.0, 0.0, 10.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 5.0, 0.232, 97.0, 218.0, 249.0, 250.0, 284.8, 2310.0, 7.36], [49.0, 166.0, 246.0, 15.7, 114.818, 2353.0, 79.19293, 643.0, 142.0, 142.0, 136.0, 146.0, 155.0, 7.31, 68.7, 1.78, 0.3, 9.793, 0.16423, 1.78, 5.78636, 3.291, 0.0, -2.6668, 3.64732, 4.59533, 0.0, 24.26, 3300.0, 2000.0, 0.233, 26.74, 26.14, 225.1, 243.0, 4.59, 79.0, 429.32, 15.76, 5.0, 13.0, 0.0, 10.0, 0.0, 0.0, 5.0, 1.0, 0.0, 2.0, 5.0, 0.234, 82.0, 193.0, 243.0, 264.0, 446.3, 1215.0, 10.2], [50.0, 162.0, 248.0, 16.3, 118.71, 2543.0, 58.0, 715.0, 139.0, 140.0, 130.0, 132.0, 145.0, 7.31, 42.4, 1.96, 1.11207, 10.79, 0.17805, 1.96, 7.34392, 7.15, 0.0, -3.96105, 4.05284, 5.10626, 0.0, 33.285, 2600.0, 1600.0, 0.227, 26.99, 27.05, 296.0, 301.2, 5.82, 83.0, 505.1, 16.29, 4.0, 14.0, 0.0, 10.0, 0.0, 0.0, 4.0, 2.0, 0.0, 2.0, 5.0, 0.222, 67.0, 217.0, 242.0, 259.0, 439.2, 2500.0, 6.28], [51.0, 159.0, 246.0, 18.4, 121.76, 1908.0, 42.0, 504.0, 139.0, 140.0, 133.0, 127.0, 145.0, 6.691, 42.2, 2.05, 1.046, 11.74, 0.19188, 2.05, 8.60839, 19.79, 0.0, -4.11736, 3.98158, 5.01648, 0.0, 31.56, 7900.0, 3400.0, 0.207, 25.23, 30.21, 195.2, 264.4, 4.51, 88.0, 903.9, 18.19, 3.0, 15.0, 0.0, 10.0, 0.0, 0.0, 3.0, 3.0, 0.0, 2.0, 5.0, 0.205, 24.0, 206.0, 247.0, 252.0, 442.0, 3420.0, 6.6], [52.0, 160.0, 242.0, 20.5, 127.6, 1263.0, 65.0, 471.0, 138.0, 136.0, 128.0, 121.0, 140.0, 6.24, 37.0, 2.1, 1.97088, 12.76, 0.2057, 2.1, 9.0096, 17.38, 0.464, -3.1413, 4.11198, 5.18076, 0.0, 34.76333, 2900.0, 4900.0, 0.202, 25.73, 33.94, 49.8, 196.6, 4.45, 92.0, 722.7, 20.46, 2.0, 16.0, 0.0, 10.0, 0.0, 0.0, 2.0, 4.0, 0.0, 2.0, 5.0, 0.201, 3.0, 206.0, 199.0, 244.0, 447.0, 2610.0, 5.5], [53.0, 150.73959, 238.0, 25.7, 126.90447, 457.5, 7.7, 389.0, 139.0, 133.0, 129.0, 125.0, 140.0, 4.93, 34.6, 2.66, 3.05904, 13.95, 0.21952, 2.66, 10.45126, 7.76, 1.062, -1.5054, 4.41452, 5.56194, 0.0, 43.015, 4900.0, 4800.0, 0.214, 54.43, 42.51, 41.95, 106.757, 7.72, 97.0, 386.7, 25.72, 1.0, 17.0, 0.0, 10.0, 0.0, 0.0, 1.0, 5.0, 0.0, 2.0, 5.0, 0.98182, 0.449, 198.0, 204.0, 236.0, 450.0, 3289.21494, 5.35], [54.0, 147.20301, 232.0, 42.9, 131.293, 166.1, 56.61942, 302.0, 140.0, 131.0, 135.0, 122.0, 129.13745, 3.52, 27.815, 2.6, -0.056, 15.27, 0.23335, 2.6, 12.12984, 2.27, 6.456, 0.04873, 4.75189, 5.98701, 0.0, 53.65, 4092.88622, 3940.27196, 0.158, 20.786, 57.83, 12.65, 134.26438, 6.2, 5.0, 161.3, 35.92, 0.0, 18.0, 0.0, 10.0, 0.0, 0.0, 0.0, 6.0, 0.0, 2.0, 5.0, 0.158, 0.00565, 216.0, 228.0, 228.0, 440.4, 1090.0, 4.044], [55.0, 267.0, 249.0, 70.0, 132.90545, 951.6, 1.6, 6660.0, 244.0, 232.0, 209.0, 153.21202, 260.0, 1.873, 401.0, 0.79, 0.47163, 3.898, 0.15421, 0.79, 3.89391, 2.09, 0.0, -0.85463, 6.14048, 7.73652, 0.0, 115.765, 6000.0, 6000.0, 0.242, 32.21, 67.55, 68.3, 76.5, 6.05, 8.0, 301.6, 70.94, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 6.0, 0.241, 36.0, 343.0, 348.0, 344.0, 451.7, 2177.27797, 59.42], [56.0, 222.0, 293.0, 39.0, 137.327, 1910.0, 9.6, 5540.0, 215.0, 196.0, 161.0, 149.0, 215.0, 3.5, 268.0, 0.89, 0.14462, 5.211, 0.15868, 0.89, 5.21166, 7.12, 0.0, -1.92352, 5.0289, 6.33602, 0.0, 63.59, 3000.0, 2300.0, 0.204, 28.07, 62.88, 142.0, 179.1, 5.02, 14.0, 1002.0, 38.16, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.192, 18.0, 268.0, 303.0, 307.0, 370.3, 1620.0, 39.7], [57.0, 187.0, 284.0, 22.5, 138.90547, 3730.0, 28.0, 3730.0, 207.0, 180.0, 139.0, 139.0, 195.0, 6.15, 210.0, 1.1, 0.47, 3.77525, 0.16314, 1.1, 5.5769, 6.2, 0.0, -4.92755, 4.19446, 5.28468, 0.0, 36.8975, 9500.0, 3100.0, 0.195, 27.11, 37.42, 402.0, 431.0, 3.75, 33.0, 1194.0, 22.39, 9.0, 3.0, 9.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.197, 13.0, 243.0, 298.0, 278.0, 352.2, 2475.0, 31.1], [58.0, 181.0, 282.0, 21.0, 140.116, 3699.0, 22.0, 3480.0, 204.0, 163.0, 137.0, 131.0, 185.0, 6.757, 200.0, 1.12, 0.65, 5.63034, 0.16761, 1.12, 5.5387, 5.46, 0.0, -4.77657, 4.20739, 5.30098, 0.0, 37.24, 9500.0, 3100.0, 0.192, 26.94, 34.47, 398.0, 420.1, 5.16, 32.0, 1072.0, 20.69, 22.0, 4.0, 9.0, 1.0, 13.0, 1.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.205, 11.0, 242.0, 288.0, 274.0, 355.6, 2100.0, 29.6], [59.0, 182.0, 286.0, 20.8, 140.90766, 3785.0, 29.0, 3760.0, 203.0, 176.0, 138.0, 128.0, 185.0, 6.773, 190.0, 1.13, 0.962, 4.38602, 0.17208, 1.13, 5.473, 6.89, 0.0, -4.77383, 4.14761, 5.22566, 0.0, 35.675, 9500.0, 3100.0, 0.193, 27.2, 34.5, 331.0, 356.9, 3.67, 31.0, 1204.0, 20.8, 11.0, 5.0, 0.0, 0.0, 11.0, 3.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.192, 13.0, 240.0, 292.0, 273.0, 360.6, 2280.0, 28.2], [60.0, 182.0, 284.0, 20.6, 144.242, 3341.0, 32.0, 3560.0, 201.0, 174.0, 137.0, 137.05749, 185.0, 7.007, 212.0, 1.14, 1.916, 4.3973, 0.17654, 1.14, 5.525, 7.14, 0.0, -4.76235, 4.11381, 5.18308, 0.0, 34.81, 9500.0, 3100.0, 0.19, 27.45, 34.2, 289.0, 326.9, 3.66, 30.0, 1294.0, 20.59, 10.0, 6.0, 0.0, 0.0, 10.0, 4.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.205, 17.0, 239.0, 295.0, 273.0, 357.5, 2330.0, 31.4], [61.0, 182.80877, 283.0, 25.1847, 144.91276, 3000.0, 33.0, 3340.0, 199.0, 173.0, 135.0, 133.45593, 185.0, 7.2, 212.0, 1.13, 2.89847, 4.87097, 0.181, 1.08811, 5.582, 15.64873, 0.0, -4.74462, 4.07534, 5.13461, 0.0, 33.8425, 9500.0, 3100.0, 1.21468, 26.29869, 33.67, 298.17982, 320.2291, 4.54781, 29.0, 1441.0, 20.23, 9.0, 7.0, 0.0, 0.0, 9.0, 5.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.185, 15.0, 238.0, 293.23351, 272.0, 354.7, 3933.27919, 30.1], [62.0, 181.0, 280.0, 19.9, 150.36, 2064.0, 38.0, 3130.0, 198.0, 172.0, 134.0, 131.37835, 185.0, 7.52, 194.0, 1.17, 2.55941, 7.18592, 0.18547, 1.17, 5.6437, 8.62, 0.0, -4.71338, 4.05061, 5.10345, 0.0, 33.23, 9500.0, 3100.0, 0.196, 29.54, 33.14, 165.0, 206.7, 9.0, 28.0, 1350.0, 19.98, 8.0, 8.0, 0.0, 0.0, 8.0, 6.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.18, 13.0, 236.0, 290.0, 271.0, 352.0, 2130.0, 28.8], [63.0, 199.0, 280.0, 28.9, 151.964, 1870.0, 8.3, 2940.0, 198.0, 168.0, 134.0, 127.86563, 185.0, 5.243, 187.0, 1.19, 0.864, 6.9995, 0.18993, 1.26363, 5.67038, 9.21, 0.0, -1.82959, 4.17781, 5.26371, 0.0, 36.46, 9500.0, 3100.0, 0.182, 27.66, 48.53, 176.0, 177.4, 4.61, 18.0, 1095.0, 28.97, 7.0, 9.0, 0.0, 0.0, 7.0, 7.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.176, 14.0, 235.0, 287.0, 294.0, 349.3, 2865.15065, 27.7], [64.0, 179.0, 277.0, 19.9, 157.25, 3539.0, 38.0, 2340.0, 196.0, 169.0, 135.0, 132.0, 180.0, 7.9, 159.0, 1.21, 3.07585, 6.39774, 0.1944, 1.2, 6.1498, 9.67, 0.0, -4.65442, 4.00208, 5.04231, 0.0, 32.05, 9500.0, 3100.0, 0.235, 37.03, 32.98, 398.0, 397.5, 3.64, 27.0, 1586.0, 19.9, 16.0, 10.0, 9.0, 1.0, 7.0, 7.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.23, 11.0, 234.0, 283.0, 271.0, 336.8, 2680.0, 23.5], [65.0, 180.0, 276.0, 19.2, 158.92535, 3296.0, 38.7, 2590.0, 194.0, 168.0, 135.0, 128.54547, 175.0, 8.229, 172.0, 1.13, 1.165, 6.90118, 0.19886, 1.30061, 5.8638, 10.15, 0.0, -4.62922, 3.989, 5.02582, 0.0, 31.73667, 9500.0, 3100.0, 0.182, 28.91, 31.95, 389.0, 388.7, 3.6, 26.0, 1629.0, 19.3, 5.0, 11.0, 0.0, 0.0, 5.0, 9.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.183, 11.0, 233.0, 279.0, 270.0, 345.1, 2620.0, 25.5], [66.0, 180.0, 275.0, 19.0, 162.5, 2835.0, 41.0, 2430.0, 192.0, 167.0, 133.0, 126.21531, 175.0, 8.55, 165.0, 1.22, 0.352, 8.23911, 0.20333, 1.22, 5.9389, 11.35, 0.0, -4.60155, 3.96808, 4.99947, 0.0, 31.24, 9500.0, 3100.0, 0.173, 28.16, 31.6, 291.0, 290.4, 3.59, 24.0, 1685.0, 19.01, 4.0, 12.0, 0.0, 0.0, 4.0, 10.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.173, 11.0, 231.0, 287.0, 290.0, 342.8, 2710.0, 24.5], [67.0, 179.0, 273.0, 18.7, 164.93033, 2968.0, 40.0, 2280.0, 192.0, 166.0, 133.0, 131.59723, 175.0, 8.795, 159.0, 1.23, 2.54894, 8.13343, 0.2078, 1.23, 6.0215, 11.76, 0.0, -4.57742, 3.94651, 4.97229, 0.0, 30.73333, 9500.0, 3100.0, 0.165, 27.15, 31.11, 301.0, 300.6, 3.58, 23.0, 1747.0, 18.74, 3.0, 13.0, 0.0, 0.0, 3.0, 11.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.164, 16.0, 230.0, 281.0, 267.0, 340.9, 2760.0, 23.6], [68.0, 178.0, 272.0, 18.4, 167.259, 3136.0, 44.0, 2150.0, 189.0, 165.0, 133.0, 125.64952, 175.0, 9.06, 153.0, 1.24, 2.237, 7.6503, 0.21226, 1.24, 6.1077, 19.9, 0.0, -4.56363, 3.94015, 4.96428, 0.0, 30.585, 9500.0, 3100.0, 0.168, 28.12, 30.67, 317.0, 316.4, 3.56, 22.0, 1802.0, 18.46, 2.0, 14.0, 0.0, 0.0, 2.0, 12.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.168, 15.0, 229.0, 283.0, 267.0, 339.1, 2830.0, 22.7], [69.0, 177.0, 271.0, 18.1, 168.93422, 2220.0, 45.0, 2020.0, 190.0, 164.0, 131.0, 115.12901, 175.0, 9.321, 147.0, 1.25, 1.029, 10.02076, 0.21672, 1.25, 6.18431, 16.84, 0.0, -4.47388, 3.90527, 4.92034, 0.0, 29.78, 9500.0, 3100.0, 0.16, 27.03, 30.14, 232.0, 232.2, 3.54, 21.0, 1818.0, 19.1, 1.0, 15.0, 0.0, 0.0, 1.0, 13.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.16, 17.0, 227.0, 279.0, 267.0, 337.4, 4494.93693, 21.8], [70.0, 194.0, 277.0, 24.8, 173.045, 1466.0, 31.0, 1910.0, 187.0, 170.0, 129.0, 122.00901, 175.0, 6.9654, 140.7, 1.26, -0.02, 9.35834, 0.22119, 1.43902, 6.25416, 7.66, 0.0, -1.4741, 4.08645, 5.14861, 0.0, 34.12, 9500.0, 3100.0, 0.155, 26.74, 41.17, 159.0, 155.6, 5.49, 17.0, 1097.0, 24.84, 0.0, 16.0, 0.0, 0.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.145, 39.0, 226.0, 280.0, 279.0, 335.5, 1590.0, 20.9], [71.0, 175.0, 270.0, 17.8, 174.9668, 3668.0, 48.0, 2020.0, 187.0, 162.0, 131.0, 131.0, 175.0, 9.8404, 148.0, 1.27, 0.34, 6.455, 0.22565, 1.0, 5.42586, 18.65, 0.0, -4.523, 3.86486, 4.86942, 0.00225, 28.865, 9500.0, 3100.0, 0.154, 26.86, 29.52, 414.0, 427.6, 3.51, 20.0, 1936.0, 17.78, 9.0, 17.0, 9.0, 1.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.155, 16.0, 224.0, 274.0, 265.0, 364.0, 4119.8607, 21.9], [72.0, 167.0, 264.0, 13.6, 178.49, 5470.0, 110.0, 1040.0, 175.0, 152.0, 128.0, 122.0, 155.0, 13.31, 109.0, 1.3, 0.014, 6.83, 0.22999, 1.3, 6.82507, 27.2, 0.0, -9.9543, 3.54101, 4.4614, 0.0, 22.2, 3400.0, 2600.0, 0.144, 25.73, 22.42, 575.0, 618.4, 3.2, 50.0, 2503.0, 13.44, 8.0, 18.0, 8.0, 2.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.146, 23.0, 223.0, 263.0, 253.0, 314.1, 3010.0, 16.2], [73.0, 149.0, 258.0, 10.9, 180.94788, 5698.0, 200.0, 887.0, 170.0, 146.0, 126.0, 119.0, 145.0, 16.654, 88.0, 1.5, 0.322, 7.93, 0.23458, 1.5, 7.54957, 36.57, 0.0, -11.8514, 3.30925, 4.16939, 0.0, 18.12, 2300.0, 4800.0, 0.14, 25.36, 17.65, 758.0, 782.0, 3.31, 52.0, 3269.0, 10.85, 7.0, 19.0, 7.0, 3.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.14, 57.0, 222.0, 253.0, 243.0, 317.0, 3400.0, 13.1], [74.0, 141.0, 253.0, 9.53, 183.84, 5930.0, 310.0, 757.0, 162.0, 137.0, 120.0, 115.0, 135.0, 19.3, 75.0, 2.36, 0.81626, 8.67, 0.23905, 1.7, 7.86403, 52.31, 0.0, -12.9588, 3.17811, 4.00416, 0.0, 16.05, 7000.0, 4300.0, 0.132, 24.27, 15.85, 824.0, 851.0, 3.16, 55.0, 3680.0, 9.47, 6.0, 20.0, 6.0, 4.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.133, 170.0, 218.0, 257.0, 239.0, 309.6, 5174.0, 11.1], [75.0, 137.0, 249.0, 8.85, 186.207, 5900.0, 370.0, 663.0, 151.0, 131.0, 119.0, 110.0, 135.0, 21.02, 65.0, 1.9, 0.15, 9.46, 0.24352, 1.9, 7.83352, 34.08, 0.0, -12.41703, 3.08323, 3.88462, 0.0, 14.655, 3300.0, 3300.0, 0.137, 25.48, 14.71, 704.0, 774.0, 2.76, 58.0, 3453.0, 8.86, 5.0, 21.0, 5.0, 5.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.138, 48.0, 216.0, 249.0, 237.0, 295.4, 4700.0, 9.7], [76.0, 135.0, 244.0, 8.43, 190.23, 5300.0, 284.84787, 584.0, 144.0, 129.0, 116.0, 109.0, 130.0, 22.57, 57.0, 2.2, 1.1, 9.78, 0.24798, 2.2, 8.43823, 57.85, 0.0, -11.2207, 3.04308, 3.83404, 0.0, 14.09, 5500.0, 9100.0, 0.13, 24.7, 13.8, 738.0, 787.0, 2.74, 63.0, 3327.0, 8.42, 4.0, 22.0, 4.0, 6.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.131, 88.0, 216.0, 248.0, 235.0, 312.0, 4940.0, 8.5], [77.0, 136.0, 233.0, 8.54, 192.217, 4403.0, 320.0, 522.0, 141.0, 122.0, 115.0, 107.0, 135.0, 22.42, 51.0, 2.2, 1.5638, 9.96, 0.25106, 2.2, 8.96702, 41.12, 0.0, -8.84851, 3.0517, 3.8449, 0.0, 14.21, 5500.0, 9100.0, 0.131, 25.1, 13.88, 604.0, 669.0, 3.84, 66.0, 2683.0, 8.52, 3.0, 23.0, 3.0, 7.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.133, 150.0, 213.0, 241.0, 236.0, 284.0, 4825.0, 7.6], [78.0, 139.0, 230.0, 9.1, 195.084, 4100.0, 230.0, 470.0, 136.0, 123.0, 112.0, 110.0, 135.0, 21.45, 44.0, 2.28, 2.128, 10.16, 0.25691, 2.2, 8.9588, 22.175, 0.0, -6.02851, 3.10861, 3.91661, 0.0, 15.02, 5500.0, 9100.0, 0.133, 25.86, 15.1, 470.0, 565.7, 3.92, 68.0, 2045.0, 9.09, 2.0, 24.0, 1.0, 9.0, 0.0, 14.0, 0.0, 0.0, 1.0, 1.0, 6.0, 0.133, 72.0, 213.0, 229.0, 239.0, 275.4, 2680.0, 6.5], [79.0, 146.0, 226.0, 10.2, 196.96657, 3080.0, 220.0, 427.0, 136.0, 124.0, 121.0, 123.0, 135.0, 19.3, 36.1, 2.54, 2.30863, 11.33, 0.26137, 2.4, 9.22553, 12.55, 0.0, -3.20969, 3.22044, 4.0575, 0.0, 16.7, 1100.0, 1000.0, 0.129, 25.418, 16.96, 340.0, 368.2, 4.08, 70.0, 1337.58, 10.21, 1.0, 25.0, 0.0, 10.0, 0.0, 14.0, 0.0, 0.0, 1.0, 1.0, 6.0, 0.129, 320.0, 214.0, 232.0, 243.0, 329.3, 1740.0, 5.8], [80.0, 157.0, 229.0, 14.8, 200.592, 629.73, 25.0, 268.0, 132.0, 133.0, 142.0, 114.77421, 150.0, 13.546, 33.91, 2.0, 2.22568, 10.44, 0.169, 1.9, 10.4375, 2.295, 0.0, -0.25011, 3.69567, 4.65625, 0.0, 25.23759, 5500.0, 3100.0, 0.14, 27.983, 23.82, 58.5, 61.38, 2.99, 74.0, 234.28, 14.09, 0.0, 26.0, 0.0, 10.0, 0.0, 14.0, 0.0, 0.0, 0.0, 2.0, 6.0, 0.138, 8.3, 223.0, 245.0, 253.0, 270.5, 1407.0, 5.02], [81.0, 171.0, 242.0, 17.2, 204.38, 1730.0, 43.0, 509.0, 145.0, 144.0, 142.0, 150.0, 190.0, 11.85, 51.7, 1.62, 0.377, 12.64039, 0.17345, 1.8, 6.10819, 4.142, 0.0, -2.27268, 3.77556, 4.75691, 0.0, 26.91, 6500.0, 6500.0, 0.129, 26.32, 28.53, 162.4, 182.2, 3.46, 78.0, 576.6, 17.22, 5.0, 27.0, 0.0, 10.0, 0.0, 14.0, 5.0, 1.0, 0.0, 2.0, 6.0, 0.128, 46.0, 196.0, 247.0, 259.0, 434.7, 818.0, 7.6], [82.0, 175.0, 249.0, 18.3, 207.2, 2013.0, 46.0, 534.0, 146.0, 144.0, 135.0, 137.0, 143.46627, 11.35, 47.1, 2.33, 0.35674, 10.97, 0.17791, 1.8, 7.41663, 4.774, 0.0, -3.62903, 3.83087, 4.82659, 0.0, 28.11, 2700.0, 1800.0, 0.13, 24.7, 30.32, 177.8, 195.2, 4.95, 82.0, 600.65, 18.26, 4.0, 28.0, 0.0, 10.0, 0.0, 14.0, 4.0, 2.0, 0.0, 2.0, 6.0, 0.159, 35.0, 202.0, 260.0, 274.0, 429.7, 1260.0, 6.98], [83.0, 170.0, 250.0, 21.3, 208.9804, 1883.0, 31.0, 513.0, 148.0, 151.0, 141.0, 135.0, 160.0, 9.747, 50.0, 2.02, 0.94236, 11.9, 0.18238, 1.9, 7.2855, 11.106, 0.0, -3.97369, 4.0392, 5.08907, 0.0, 32.95, 5300.0, 6000.0, 0.122, 25.52, 35.38, 172.0, 209.6, 4.75, 87.0, 544.5, 21.31, 3.0, 29.0, 0.0, 10.0, 0.0, 14.0, 3.0, 3.0, 0.0, 2.0, 6.0, 0.124, 8.0, 207.0, 254.0, 266.0, 437.0, 1790.0, 7.4], [84.0, 176.0, 250.0, 22.7, 209.0, 1235.0, 75.79361, 424.0, 140.0, 145.0, 135.0, 129.0, 190.0, 9.32, 46.0, 2.0, 1.9, 13.0, 0.18684, 2.0, 8.414, 10.0, 0.0, -4.03935, 4.26282, 5.37082, 0.0, 38.73125, 4272.88476, 3871.18077, 1.51005, 27.06604, 37.38, 102.9, 214.77221, 3.35, 91.0, 527.0, 22.97, 2.0, 30.0, 0.0, 10.0, 0.0, 14.0, 2.0, 4.0, 0.0, 2.0, 6.0, 0.125, 20.0, 197.0, 214.27204, 259.0, 470.9, 3106.85201, 6.8], [85.0, 147.66493, 247.0, 20.93192, 210.0, 610.0, 63.40061, 351.0, 150.0, 147.0, 138.0, 138.0, 128.37077, 6.0523, 43.0, 2.22, 2.8, 14.1, 0.19131, 2.2, 11.14651, 11.05331, 0.0, -4.03935, 4.26282, 5.37082, 0.0, 38.73125, 4650.13455, 3891.22461, 1.94085, 28.09965, 39.49, 63.47649, 175.0345, 4.94594, 96.0, 575.0, 19.27534, 1.0, 31.0, 0.0, 10.0, 0.0, 14.0, 1.0, 5.0, 0.0, 2.0, 6.0, 0.96823, 2.0, 202.0, 203.05236, 251.0, 475.0, 3852.27836, 6.0], [86.0, 150.17555, 243.0, 22.89552, 222.0, 211.4, 56.49969, 408.0, 150.0, 142.0, 145.0, 133.0, 135.15418, 4.4, 33.18, 2.43, 1.92933, 15.4, 0.19577, 2.04389, 10.7485, 7.72881, 0.0, -4.03935, 4.26282, 5.37082, 0.0, 38.73125, 3952.46222, 3551.13388, 0.094, 20.786, 41.71, 18.1, 119.78468, 4.96033, 6.0, 202.0, 50.5, 0.0, 32.0, 0.0, 10.0, 0.0, 14.0, 0.0, 6.0, 0.0, 2.0, 6.0, 0.094, 0.00361, 220.0, 240.0, 243.0, 476.5, 2710.61272, 5.3], [87.0, 174.67381, 258.0, 29.45258, 223.0, 950.0, 72.52774, 1953.86977, 260.0, 223.0, 218.0, 133.37635, 165.39862, 5.4738, 311.5, 0.71, 0.486, 9.5232, 0.08731, 0.7, 4.07274, 7.29789, 0.0, -4.03935, 4.26282, 5.37082, 0.0, 38.73125, 5016.38591, 3155.97201, 1.44333, 31.20169, 79.69, 55.1781, 142.94448, 5.31936, 7.0, 300.0, 30.61744, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 7.0, 0.86449, 69.93748, 348.0, 247.96004, 364.0, 490.0, 2864.36086, 48.6], [88.0, 170.25536, 292.0, 45.0, 226.0, 1413.0, 80.25392, 1959.61305, 221.0, 201.0, 173.0, 159.0, 215.0, 5.5, 242.8, 0.92, 0.1, 10.3115, 0.09789, 0.9, 5.27842, 7.7, 0.0, -4.03935, 4.26282, 5.37082, 0.0, 38.73125, 4798.61572, 3678.21981, 1.41882, 26.96763, 68.22, 113.0, 159.0, 4.8937, 13.0, 973.0, 41.09, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 7.0, 0.12, 19.0, 283.0, 248.93343, 327.0, 367.7, 4596.62059, 38.3], [89.0, 188.0, 293.0, 22.54, 227.0, 3470.0, 109.7993, 2178.59074, 215.0, 186.0, 153.0, 140.0, 195.0, 9.75675, 217.0, 1.09, 0.35, 8.03988, 0.10033, 1.1, 5.17, 12.0, 0.0, -4.105, 4.46516, 5.62575, 0.0, 44.5125, 6777.4473, 4454.38393, 0.12, 27.2, 37.45, 292.9, 406.0, 5.31, 48.0, 1320.0, 22.55, 9.0, 3.0, 9.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 7.0, 0.71673, 12.0, 247.0, 280.0, 308.0, 347.8, 3633.64295, 32.1], [90.0, 180.0, 289.0, 19.8, 232.0377, 5060.0, 54.0, 2513.27813, 206.0, 175.0, 143.0, 136.0, 180.0, 11.78, 217.0, 1.32, 2.91897, 5.61932, 0.10277, 1.3, 6.3067, 13.81, 0.0, -7.41254, 4.01536, 5.05903, 0.0, 32.37, 7607.01879, 4738.33177, 0.118, 27.32, 32.86, 513.7, 602.0, 5.08, 47.0, 2028.0, 19.8, 8.0, 4.0, 8.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 7.0, 0.113, 54.0, 245.0, 293.0, 274.0, 339.6, 2490.0, 32.1], [91.0, 161.0, 285.0, 15.0, 231.03588, 4300.0, 145.39968, 2039.29933, 200.0, 169.0, 138.0, 129.0, 180.0, 15.37, 171.0, 1.54, 2.88546, 6.55719, 0.12149, 1.5, 5.89, 12.34, 0.0, -9.49741, 3.69285, 4.6527, 0.0, 25.18, 5931.48079, 4534.89853, 1.34517, 23.74971, 24.94, 481.2, 563.0, 3.92, 46.0, 2113.0, 15.18, 21.0, 5.0, 9.0, 1.0, 12.0, 2.0, 0.0, 0.0, 0.0, 2.0, 7.0, 0.121, 47.0, 243.0, 288.0, 264.0, 342.4, 5621.54756, 25.4], [92.0, 138.0, 283.0, 12.5, 238.02891, 4018.0, 100.0, 2491.29258, 196.0, 170.0, 134.0, 118.0, 175.0, 19.05, 137.0, 1.38, 3.11228, 5.59491, 0.13207, 1.7, 6.1941, 9.14, 0.0, -11.29234, 3.42138, 4.31066, 0.0, 20.025, 8060.26533, 4021.32533, 0.116, 27.665, 21.18, 417.0, 533.0, 2.85, 45.0, 1405.5, 12.49, 20.0, 6.0, 9.0, 1.0, 11.0, 3.0, 0.0, 0.0, 0.0, 2.0, 7.0, 0.115, 27.0, 241.0, 271.0, 252.0, 339.5, 3155.0, 24.9], [93.0, 130.0, 280.0, 21.1, 237.0, 4175.0, 124.10171, 2398.57647, 190.0, 171.0, 136.0, 116.0, 175.0, 20.25, 167.0, 1.36, 3.38067, 6.51583, 0.14265, 1.3, 6.2657, 3.2, 0.0, -12.94031, 3.32944, 4.19483, 0.0, 18.45375, 7658.34867, 4222.77553, 1.5253, 26.76537, 19.22, 336.0, 464.8, 4.72, 44.0, 913.0, 11.59, 19.0, 7.0, 9.0, 1.0, 10.0, 4.0, 0.0, 0.0, 0.0, 2.0, 7.0, 0.54339, 6.0, 239.0, 282.0, 252.0, 342.4, 2999.08959, 24.8], [94.0, 151.0, 278.0, 21.15659, 244.0, 3505.0, 90.47094, 2294.42331, 187.0, 172.0, 135.0, 135.25165, 175.0, 19.84, 165.0, 1.28, 2.84145, 6.63773, 0.16137, 1.3, 6.026, 2.824, 0.0, -14.32663, 3.30681, 4.16632, 0.318, 18.08, 7747.71481, 4069.62014, 0.98808, 27.86136, 20.04, 343.5, 345.0, 4.22142, 43.0, 914.0, 12.29, 8.0, 8.0, 0.0, 0.0, 8.0, 6.0, 0.0, 0.0, 0.0, 2.0, 7.0, 0.64608, 6.0, 243.0, 281.0, 252.0, 342.4, 2260.0, 24.5], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]]"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();